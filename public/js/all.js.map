{"version":3,"sources":["vue.js","vue-resource.js"],"names":[],"mappingszufile":"all.js","sourcesContent":["/*!\r\n * Vue.js v2.0.1\r\n * (c) 2014-2016 Evan You\r\n * Released under the MIT License.\r\n */\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global.Vue = factory());\r\n}(this, (function () { 'use strict';\r\n\r\n/*  */\r\n\r\n/**\r\n * Convert a value to a string that is actually rendered.\r\n */\r\nfunction _toString (val) {\r\n  return val == null\r\n    ? ''\r\n    : typeof val === 'object'\r\n      ? JSON.stringify(val, null, 2)\r\n      : String(val)\r\n}\r\n\r\n/**\r\n * Convert a input value to a number for persistence.\r\n * If the conversion fails, return original string.\r\n */\r\nfunction toNumber (val) {\r\n  var n = parseFloat(val, 10)\r\n  return (n || n === 0) ? n : val\r\n}\r\n\r\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n */\r\nfunction makeMap (\r\n  str,\r\n  expectsLowerCase\r\n) {\r\n  var map = Object.create(null)\r\n  var list = str.split(',')\r\n  for (var i = 0; i < list.length; i++) {\r\n    map[list[i]] = true\r\n  }\r\n  return expectsLowerCase\r\n    ? function (val) { return map[val.toLowerCase()]; }\r\n    : function (val) { return map[val]; }\r\n}\r\n\r\n/**\r\n * Check if a tag is a built-in tag.\r\n */\r\nvar isBuiltInTag = makeMap('slot,component', true)\r\n\r\n/**\r\n * Remove an item from an array\r\n */\r\nfunction remove$1 (arr, item) {\r\n  if (arr.length) {\r\n    var index = arr.indexOf(item)\r\n    if (index > -1) {\r\n      return arr.splice(index, 1)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Check whether the object has the property.\r\n */\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty\r\nfunction hasOwn (obj, key) {\r\n  return hasOwnProperty.call(obj, key)\r\n}\r\n\r\n/**\r\n * Check if value is primitive\r\n */\r\nfunction isPrimitive (value) {\r\n  return typeof value === 'string' || typeof value === 'number'\r\n}\r\n\r\n/**\r\n * Create a cached version of a pure function.\r\n */\r\nfunction cached (fn) {\r\n  var cache = Object.create(null)\r\n  return function cachedFn (str) {\r\n    var hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }\r\n}\r\n\r\n/**\r\n * Camelize a hyphen-delmited string.\r\n */\r\nvar camelizeRE = /-(\\w)/g\r\nvar camelize = cached(function (str) {\r\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\r\n})\r\n\r\n/**\r\n * Capitalize a string.\r\n */\r\nvar capitalize = cached(function (str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1)\r\n})\r\n\r\n/**\r\n * Hyphenate a camelCase string.\r\n */\r\nvar hyphenateRE = /([^-])([A-Z])/g\r\nvar hyphenate = cached(function (str) {\r\n  return str\r\n    .replace(hyphenateRE, '$1-$2')\r\n    .replace(hyphenateRE, '$1-$2')\r\n    .toLowerCase()\r\n})\r\n\r\n/**\r\n * Simple bind, faster than native\r\n */\r\nfunction bind$1 (fn, ctx) {\r\n  function boundFn (a) {\r\n    var l = arguments.length\r\n    return l\r\n      ? l > 1\r\n        ? fn.apply(ctx, arguments)\r\n        : fn.call(ctx, a)\r\n      : fn.call(ctx)\r\n  }\r\n  // record original fn length\r\n  boundFn._length = fn.length\r\n  return boundFn\r\n}\r\n\r\n/**\r\n * Convert an Array-like object to a real Array.\r\n */\r\nfunction toArray (list, start) {\r\n  start = start || 0\r\n  var i = list.length - start\r\n  var ret = new Array(i)\r\n  while (i--) {\r\n    ret[i] = list[i + start]\r\n  }\r\n  return ret\r\n}\r\n\r\n/**\r\n * Mix properties into target object.\r\n */\r\nfunction extend (to, _from) {\r\n  for (var key in _from) {\r\n    to[key] = _from[key]\r\n  }\r\n  return to\r\n}\r\n\r\n/**\r\n * Quick object check - this is primarily used to tell\r\n * Objects from primitive values when we know the value\r\n * is a JSON-compliant type.\r\n */\r\nfunction isObject (obj) {\r\n  return obj !== null && typeof obj === 'object'\r\n}\r\n\r\n/**\r\n * Strict object type check. Only returns true\r\n * for plain JavaScript objects.\r\n */\r\nvar toString = Object.prototype.toString\r\nvar OBJECT_STRING = '[object Object]'\r\nfunction isPlainObject (obj) {\r\n  return toString.call(obj) === OBJECT_STRING\r\n}\r\n\r\n/**\r\n * Merge an Array of Objects into a single Object.\r\n */\r\nfunction toObject (arr) {\r\n  var res = {}\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (arr[i]) {\r\n      extend(res, arr[i])\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\n/**\r\n * Perform no operation.\r\n */\r\nfunction noop () {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nvar no = function () { return false; }\r\n\r\n/**\r\n * Generate a static keys string from compiler modules.\r\n */\r\nfunction genStaticKeys (modules) {\r\n  return modules.reduce(function (keys, m) {\r\n    return keys.concat(m.staticKeys || [])\r\n  }, []).join(',')\r\n}\r\n\r\n/**\r\n * Check if two values are loosely equal - that is,\r\n * if they are plain objects, do they have the same shape?\r\n */\r\nfunction looseEqual (a, b) {\r\n  /* eslint-disable eqeqeq */\r\n  return a == b || (\r\n    isObject(a) && isObject(b)\r\n      ? JSON.stringify(a) === JSON.stringify(b)\r\n      : false\r\n  )\r\n  /* eslint-enable eqeqeq */\r\n}\r\n\r\nfunction looseIndexOf (arr, val) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (looseEqual(arr[i], val)) { return i }\r\n  }\r\n  return -1\r\n}\r\n\r\n/*  */\r\n\r\nvar config = {\r\n  /**\r\n   * Option merge strategies (used in core/util/options)\r\n   */\r\n  optionMergeStrategies: Object.create(null),\r\n\r\n  /**\r\n   * Whether to suppress warnings.\r\n   */\r\n  silent: false,\r\n\r\n  /**\r\n   * Whether to enable devtools\r\n   */\r\n  devtools: \"development\" !== 'production',\r\n\r\n  /**\r\n   * Error handler for watcher errors\r\n   */\r\n  errorHandler: null,\r\n\r\n  /**\r\n   * Ignore certain custom elements\r\n   */\r\n  ignoredElements: null,\r\n\r\n  /**\r\n   * Custom user key aliases for v-on\r\n   */\r\n  keyCodes: Object.create(null),\r\n\r\n  /**\r\n   * Check if a tag is reserved so that it cannot be registered as a\r\n   * component. This is platform-dependent and may be overwritten.\r\n   */\r\n  isReservedTag: no,\r\n\r\n  /**\r\n   * Check if a tag is an unknown element.\r\n   * Platform-dependent.\r\n   */\r\n  isUnknownElement: no,\r\n\r\n  /**\r\n   * Get the namespace of an element\r\n   */\r\n  getTagNamespace: noop,\r\n\r\n  /**\r\n   * Check if an attribute must be bound using property, e.g. value\r\n   * Platform-dependent.\r\n   */\r\n  mustUseProp: no,\r\n\r\n  /**\r\n   * List of asset types that a component can own.\r\n   */\r\n  _assetTypes: [\r\n    'component',\r\n    'directive',\r\n    'filter'\r\n  ],\r\n\r\n  /**\r\n   * List of lifecycle hooks.\r\n   */\r\n  _lifecycleHooks: [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed',\r\n    'activated',\r\n    'deactivated'\r\n  ],\r\n\r\n  /**\r\n   * Max circular updates allowed in a scheduler flush cycle.\r\n   */\r\n  _maxUpdateCount: 100,\r\n\r\n  /**\r\n   * Server rendering?\r\n   */\r\n  _isServer: \"client\" === 'server'\r\n}\r\n\r\n/*  */\r\n\r\n/**\r\n * Check if a string starts with $ or _\r\n */\r\nfunction isReserved (str) {\r\n  var c = (str + '').charCodeAt(0)\r\n  return c === 0x24 || c === 0x5F\r\n}\r\n\r\n/**\r\n * Define a property.\r\n */\r\nfunction def (obj, key, val, enumerable) {\r\n  Object.defineProperty(obj, key, {\r\n    value: val,\r\n    enumerable: !!enumerable,\r\n    writable: true,\r\n    configurable: true\r\n  })\r\n}\r\n\r\n/**\r\n * Parse simple path.\r\n */\r\nvar bailRE = /[^\\w\\.\\$]/\r\nfunction parsePath (path) {\r\n  if (bailRE.test(path)) {\r\n    return\r\n  } else {\r\n    var segments = path.split('.')\r\n    return function (obj) {\r\n      for (var i = 0; i < segments.length; i++) {\r\n        if (!obj) { return }\r\n        obj = obj[segments[i]]\r\n      }\r\n      return obj\r\n    }\r\n  }\r\n}\r\n\r\n/*  */\r\n/* globals MutationObserver */\r\n\r\n// can we use __proto__?\r\nvar hasProto = '__proto__' in {}\r\n\r\n// Browser environment sniffing\r\nvar inBrowser =\r\n  typeof window !== 'undefined' &&\r\n  Object.prototype.toString.call(window) !== '[object Object]'\r\n\r\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase()\r\nvar isIE = UA && /msie|trident/.test(UA)\r\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0\r\nvar isEdge = UA && UA.indexOf('edge/') > 0\r\nvar isAndroid = UA && UA.indexOf('android') > 0\r\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA)\r\n\r\n// detect devtools\r\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__\r\n\r\n/* istanbul ignore next */\r\nfunction isNative (Ctor) {\r\n  return /native code/.test(Ctor.toString())\r\n}\r\n\r\n/**\r\n * Defer a task to execute it asynchronously.\r\n */\r\nvar nextTick = (function () {\r\n  var callbacks = []\r\n  var pending = false\r\n  var timerFunc\r\n\r\n  function nextTickHandler () {\r\n    pending = false\r\n    var copies = callbacks.slice(0)\r\n    callbacks.length = 0\r\n    for (var i = 0; i < copies.length; i++) {\r\n      copies[i]()\r\n    }\r\n  }\r\n\r\n  // the nextTick behavior leverages the microtask queue, which can be accessed\r\n  // via either native Promise.then or MutationObserver.\r\n  // MutationObserver has wider support, however it is seriously bugged in\r\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\r\n  // completely stops working after triggering a few times... so, if native\r\n  // Promise is available, we will use it:\r\n  /* istanbul ignore if */\r\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\r\n    var p = Promise.resolve()\r\n    timerFunc = function () {\r\n      p.then(nextTickHandler)\r\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\r\n      // it can get stuck in a weird state where callbacks are pushed into the\r\n      // microtask queue but the queue isn't being flushed, until the browser\r\n      // needs to do some other work, e.g. handle a timer. Therefore we can\r\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\r\n      if (isIOS) { setTimeout(noop) }\r\n    }\r\n  } else if (typeof MutationObserver !== 'undefined' && (\r\n    isNative(MutationObserver) ||\r\n    // PhantomJS and iOS 7.x\r\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\r\n  )) {\r\n    // use MutationObserver where native Promise is not available,\r\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\r\n    var counter = 1\r\n    var observer = new MutationObserver(nextTickHandler)\r\n    var textNode = document.createTextNode(String(counter))\r\n    observer.observe(textNode, {\r\n      characterData: true\r\n    })\r\n    timerFunc = function () {\r\n      counter = (counter + 1) % 2\r\n      textNode.data = String(counter)\r\n    }\r\n  } else {\r\n    // fallback to setTimeout\r\n    /* istanbul ignore next */\r\n    timerFunc = setTimeout\r\n  }\r\n\r\n  return function queueNextTick (cb, ctx) {\r\n    var func = ctx\r\n      ? function () { cb.call(ctx) }\r\n      : cb\r\n    callbacks.push(func)\r\n    if (!pending) {\r\n      pending = true\r\n      timerFunc(nextTickHandler, 0)\r\n    }\r\n  }\r\n})()\r\n\r\nvar _Set\r\n/* istanbul ignore if */\r\nif (typeof Set !== 'undefined' && isNative(Set)) {\r\n  // use native Set when available.\r\n  _Set = Set\r\n} else {\r\n  // a non-standard Set polyfill that only works with primitive keys.\r\n  _Set = (function () {\r\n    function Set () {\r\n      this.set = Object.create(null)\r\n    }\r\n    Set.prototype.has = function has (key) {\r\n      return this.set[key] !== undefined\r\n    };\r\n    Set.prototype.add = function add (key) {\r\n      this.set[key] = 1\r\n    };\r\n    Set.prototype.clear = function clear () {\r\n      this.set = Object.create(null)\r\n    };\r\n\r\n    return Set;\r\n  }())\r\n}\r\n\r\n/* not type checking this file because flow doesn't play well with Proxy */\r\n\r\nvar hasProxy;\r\nvar proxyHandlers;\r\nvar initProxy\r\n\r\n{\r\n  var allowedGlobals = makeMap(\r\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\r\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\r\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\r\n    'require' // for Webpack/Browserify\r\n  )\r\n\r\n  hasProxy =\r\n    typeof Proxy !== 'undefined' &&\r\n    Proxy.toString().match(/native code/)\r\n\r\n  proxyHandlers = {\r\n    has: function has (target, key) {\r\n      var has = key in target\r\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_'\r\n      if (!has && !isAllowed) {\r\n        warn(\r\n          \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\r\n          \"referenced during render. Make sure to declare reactive data \" +\r\n          \"properties in the data option.\",\r\n          target\r\n        )\r\n      }\r\n      return has || !isAllowed\r\n    }\r\n  }\r\n\r\n  initProxy = function initProxy (vm) {\r\n    if (hasProxy) {\r\n      vm._renderProxy = new Proxy(vm, proxyHandlers)\r\n    } else {\r\n      vm._renderProxy = vm\r\n    }\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\n\r\nvar uid$2 = 0\r\n\r\n/**\r\n * A dep is an observable that can have multiple\r\n * directives subscribing to it.\r\n */\r\nvar Dep = function Dep () {\r\n  this.id = uid$2++\r\n  this.subs = []\r\n};\r\n\r\nDep.prototype.addSub = function addSub (sub) {\r\n  this.subs.push(sub)\r\n};\r\n\r\nDep.prototype.removeSub = function removeSub (sub) {\r\n  remove$1(this.subs, sub)\r\n};\r\n\r\nDep.prototype.depend = function depend () {\r\n  if (Dep.target) {\r\n    Dep.target.addDep(this)\r\n  }\r\n};\r\n\r\nDep.prototype.notify = function notify () {\r\n  // stablize the subscriber list first\r\n  var subs = this.subs.slice()\r\n  for (var i = 0, l = subs.length; i < l; i++) {\r\n    subs[i].update()\r\n  }\r\n};\r\n\r\n// the current target watcher being evaluated.\r\n// this is globally unique because there could be only one\r\n// watcher being evaluated at any time.\r\nDep.target = null\r\nvar targetStack = []\r\n\r\nfunction pushTarget (_target) {\r\n  if (Dep.target) { targetStack.push(Dep.target) }\r\n  Dep.target = _target\r\n}\r\n\r\nfunction popTarget () {\r\n  Dep.target = targetStack.pop()\r\n}\r\n\r\n/*  */\r\n\r\n\r\nvar queue = []\r\nvar has$1 = {}\r\nvar circular = {}\r\nvar waiting = false\r\nvar flushing = false\r\nvar index = 0\r\n\r\n/**\r\n * Reset the scheduler's state.\r\n */\r\nfunction resetSchedulerState () {\r\n  queue.length = 0\r\n  has$1 = {}\r\n  {\r\n    circular = {}\r\n  }\r\n  waiting = flushing = false\r\n}\r\n\r\n/**\r\n * Flush both queues and run the watchers.\r\n */\r\nfunction flushSchedulerQueue () {\r\n  flushing = true\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child)\r\n  // 2. A component's user watchers are run before its render watcher (because\r\n  //    user watchers are created before the render watcher)\r\n  // 3. If a component is destroyed during a parent component's watcher run,\r\n  //    its watchers can be skipped.\r\n  queue.sort(function (a, b) { return a.id - b.id; })\r\n\r\n  // do not cache length because more watchers might be pushed\r\n  // as we run existing watchers\r\n  for (index = 0; index < queue.length; index++) {\r\n    var watcher = queue[index]\r\n    var id = watcher.id\r\n    has$1[id] = null\r\n    watcher.run()\r\n    // in dev build, check and stop circular updates.\r\n    if (\"development\" !== 'production' && has$1[id] != null) {\r\n      circular[id] = (circular[id] || 0) + 1\r\n      if (circular[id] > config._maxUpdateCount) {\r\n        warn(\r\n          'You may have an infinite update loop ' + (\r\n            watcher.user\r\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\r\n              : \"in a component render function.\"\r\n          ),\r\n          watcher.vm\r\n        )\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  // devtool hook\r\n  /* istanbul ignore if */\r\n  if (devtools && config.devtools) {\r\n    devtools.emit('flush')\r\n  }\r\n\r\n  resetSchedulerState()\r\n}\r\n\r\n/**\r\n * Push a watcher into the watcher queue.\r\n * Jobs with duplicate IDs will be skipped unless it's\r\n * pushed when the queue is being flushed.\r\n */\r\nfunction queueWatcher (watcher) {\r\n  var id = watcher.id\r\n  if (has$1[id] == null) {\r\n    has$1[id] = true\r\n    if (!flushing) {\r\n      queue.push(watcher)\r\n    } else {\r\n      // if already flushing, splice the watcher based on its id\r\n      // if already past its id, it will be run next immediately.\r\n      var i = queue.length - 1\r\n      while (i >= 0 && queue[i].id > watcher.id) {\r\n        i--\r\n      }\r\n      queue.splice(Math.max(i, index) + 1, 0, watcher)\r\n    }\r\n    // queue the flush\r\n    if (!waiting) {\r\n      waiting = true\r\n      nextTick(flushSchedulerQueue)\r\n    }\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar uid$1 = 0\r\n\r\n/**\r\n * A watcher parses an expression, collects dependencies,\r\n * and fires callback when the expression value changes.\r\n * This is used for both the $watch() api and directives.\r\n */\r\nvar Watcher = function Watcher (\r\n  vm,\r\n  expOrFn,\r\n  cb,\r\n  options\r\n) {\r\n  if ( options === void 0 ) options = {};\r\n\r\n  this.vm = vm\r\n  vm._watchers.push(this)\r\n  // options\r\n  this.deep = !!options.deep\r\n  this.user = !!options.user\r\n  this.lazy = !!options.lazy\r\n  this.sync = !!options.sync\r\n  this.expression = expOrFn.toString()\r\n  this.cb = cb\r\n  this.id = ++uid$1 // uid for batching\r\n  this.active = true\r\n  this.dirty = this.lazy // for lazy watchers\r\n  this.deps = []\r\n  this.newDeps = []\r\n  this.depIds = new _Set()\r\n  this.newDepIds = new _Set()\r\n  // parse expression for getter\r\n  if (typeof expOrFn === 'function') {\r\n    this.getter = expOrFn\r\n  } else {\r\n    this.getter = parsePath(expOrFn)\r\n    if (!this.getter) {\r\n      this.getter = function () {}\r\n      \"development\" !== 'production' && warn(\r\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\r\n        'Watcher only accepts simple dot-delimited paths. ' +\r\n        'For full control, use a function instead.',\r\n        vm\r\n      )\r\n    }\r\n  }\r\n  this.value = this.lazy\r\n    ? undefined\r\n    : this.get()\r\n};\r\n\r\n/**\r\n * Evaluate the getter, and re-collect dependencies.\r\n */\r\nWatcher.prototype.get = function get () {\r\n  pushTarget(this)\r\n  var value = this.getter.call(this.vm, this.vm)\r\n  // \"touch\" every property so they are all tracked as\r\n  // dependencies for deep watching\r\n  if (this.deep) {\r\n    traverse(value)\r\n  }\r\n  popTarget()\r\n  this.cleanupDeps()\r\n  return value\r\n};\r\n\r\n/**\r\n * Add a dependency to this directive.\r\n */\r\nWatcher.prototype.addDep = function addDep (dep) {\r\n  var id = dep.id\r\n  if (!this.newDepIds.has(id)) {\r\n    this.newDepIds.add(id)\r\n    this.newDeps.push(dep)\r\n    if (!this.depIds.has(id)) {\r\n      dep.addSub(this)\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Clean up for dependency collection.\r\n */\r\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\r\n    var this$1 = this;\r\n\r\n  var i = this.deps.length\r\n  while (i--) {\r\n    var dep = this$1.deps[i]\r\n    if (!this$1.newDepIds.has(dep.id)) {\r\n      dep.removeSub(this$1)\r\n    }\r\n  }\r\n  var tmp = this.depIds\r\n  this.depIds = this.newDepIds\r\n  this.newDepIds = tmp\r\n  this.newDepIds.clear()\r\n  tmp = this.deps\r\n  this.deps = this.newDeps\r\n  this.newDeps = tmp\r\n  this.newDeps.length = 0\r\n};\r\n\r\n/**\r\n * Subscriber interface.\r\n * Will be called when a dependency changes.\r\n */\r\nWatcher.prototype.update = function update () {\r\n  /* istanbul ignore else */\r\n  if (this.lazy) {\r\n    this.dirty = true\r\n  } else if (this.sync) {\r\n    this.run()\r\n  } else {\r\n    queueWatcher(this)\r\n  }\r\n};\r\n\r\n/**\r\n * Scheduler job interface.\r\n * Will be called by the scheduler.\r\n */\r\nWatcher.prototype.run = function run () {\r\n  if (this.active) {\r\n    var value = this.get()\r\n      if (\r\n        value !== this.value ||\r\n      // Deep watchers and watchers on Object/Arrays should fire even\r\n      // when the value is the same, because the value may\r\n      // have mutated.\r\n      isObject(value) ||\r\n      this.deep\r\n    ) {\r\n      // set new value\r\n      var oldValue = this.value\r\n      this.value = value\r\n      if (this.user) {\r\n        try {\r\n          this.cb.call(this.vm, value, oldValue)\r\n        } catch (e) {\r\n          \"development\" !== 'production' && warn(\r\n            (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\r\n            this.vm\r\n          )\r\n          /* istanbul ignore else */\r\n          if (config.errorHandler) {\r\n            config.errorHandler.call(null, e, this.vm)\r\n          } else {\r\n            throw e\r\n          }\r\n        }\r\n      } else {\r\n        this.cb.call(this.vm, value, oldValue)\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Evaluate the value of the watcher.\r\n * This only gets called for lazy watchers.\r\n */\r\nWatcher.prototype.evaluate = function evaluate () {\r\n  this.value = this.get()\r\n  this.dirty = false\r\n};\r\n\r\n/**\r\n * Depend on all deps collected by this watcher.\r\n */\r\nWatcher.prototype.depend = function depend () {\r\n    var this$1 = this;\r\n\r\n  var i = this.deps.length\r\n  while (i--) {\r\n    this$1.deps[i].depend()\r\n  }\r\n};\r\n\r\n/**\r\n * Remove self from all dependencies' subcriber list.\r\n */\r\nWatcher.prototype.teardown = function teardown () {\r\n    var this$1 = this;\r\n\r\n  if (this.active) {\r\n    // remove self from vm's watcher list\r\n    // this is a somewhat expensive operation so we skip it\r\n    // if the vm is being destroyed or is performing a v-for\r\n    // re-render (the watcher list is then filtered by v-for).\r\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\r\n      remove$1(this.vm._watchers, this)\r\n    }\r\n    var i = this.deps.length\r\n    while (i--) {\r\n      this$1.deps[i].removeSub(this$1)\r\n    }\r\n    this.active = false\r\n  }\r\n};\r\n\r\n/**\r\n * Recursively traverse an object to evoke all converted\r\n * getters, so that every nested property inside the object\r\n * is collected as a \"deep\" dependency.\r\n */\r\nvar seenObjects = new _Set()\r\nfunction traverse (val, seen) {\r\n  var i, keys\r\n  if (!seen) {\r\n    seen = seenObjects\r\n    seen.clear()\r\n  }\r\n  var isA = Array.isArray(val)\r\n  var isO = isObject(val)\r\n  if ((isA || isO) && Object.isExtensible(val)) {\r\n    if (val.__ob__) {\r\n      var depId = val.__ob__.dep.id\r\n      if (seen.has(depId)) {\r\n        return\r\n      } else {\r\n        seen.add(depId)\r\n      }\r\n    }\r\n    if (isA) {\r\n      i = val.length\r\n      while (i--) { traverse(val[i], seen) }\r\n    } else if (isO) {\r\n      keys = Object.keys(val)\r\n      i = keys.length\r\n      while (i--) { traverse(val[keys[i]], seen) }\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n * not type checking this file because flow doesn't play well with\r\n * dynamically accessing methods on Array prototype\r\n */\r\n\r\nvar arrayProto = Array.prototype\r\nvar arrayMethods = Object.create(arrayProto);[\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'splice',\r\n  'sort',\r\n  'reverse'\r\n]\r\n.forEach(function (method) {\r\n  // cache original method\r\n  var original = arrayProto[method]\r\n  def(arrayMethods, method, function mutator () {\r\n    var arguments$1 = arguments;\r\n\r\n    // avoid leaking arguments:\r\n    // http://jsperf.com/closure-with-arguments\r\n    var i = arguments.length\r\n    var args = new Array(i)\r\n    while (i--) {\r\n      args[i] = arguments$1[i]\r\n    }\r\n    var result = original.apply(this, args)\r\n    var ob = this.__ob__\r\n    var inserted\r\n    switch (method) {\r\n      case 'push':\r\n        inserted = args\r\n        break\r\n      case 'unshift':\r\n        inserted = args\r\n        break\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n        break\r\n    }\r\n    if (inserted) { ob.observeArray(inserted) }\r\n    // notify change\r\n    ob.dep.notify()\r\n    return result\r\n  })\r\n})\r\n\r\n/*  */\r\n\r\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods)\r\n\r\n/**\r\n * By default, when a reactive property is set, the new value is\r\n * also converted to become reactive. However when passing down props,\r\n * we don't want to force conversion because the value may be a nested value\r\n * under a frozen data structure. Converting it would defeat the optimization.\r\n */\r\nvar observerState = {\r\n  shouldConvert: true,\r\n  isSettingProps: false\r\n}\r\n\r\n/**\r\n * Observer class that are attached to each observed\r\n * object. Once attached, the observer converts target\r\n * object's property keys into getter/setters that\r\n * collect dependencies and dispatches updates.\r\n */\r\nvar Observer = function Observer (value) {\r\n  this.value = value\r\n  this.dep = new Dep()\r\n  this.vmCount = 0\r\n  def(value, '__ob__', this)\r\n  if (Array.isArray(value)) {\r\n    var augment = hasProto\r\n      ? protoAugment\r\n      : copyAugment\r\n    augment(value, arrayMethods, arrayKeys)\r\n    this.observeArray(value)\r\n  } else {\r\n    this.walk(value)\r\n  }\r\n};\r\n\r\n/**\r\n * Walk through each property and convert them into\r\n * getter/setters. This method should only be called when\r\n * value type is Object.\r\n */\r\nObserver.prototype.walk = function walk (obj) {\r\n  var keys = Object.keys(obj)\r\n  for (var i = 0; i < keys.length; i++) {\r\n    defineReactive$$1(obj, keys[i], obj[keys[i]])\r\n  }\r\n};\r\n\r\n/**\r\n * Observe a list of Array items.\r\n */\r\nObserver.prototype.observeArray = function observeArray (items) {\r\n  for (var i = 0, l = items.length; i < l; i++) {\r\n    observe(items[i])\r\n  }\r\n};\r\n\r\n// helpers\r\n\r\n/**\r\n * Augment an target Object or Array by intercepting\r\n * the prototype chain using __proto__\r\n */\r\nfunction protoAugment (target, src) {\r\n  /* eslint-disable no-proto */\r\n  target.__proto__ = src\r\n  /* eslint-enable no-proto */\r\n}\r\n\r\n/**\r\n * Augment an target Object or Array by defining\r\n * hidden properties.\r\n *\r\n * istanbul ignore next\r\n */\r\nfunction copyAugment (target, src, keys) {\r\n  for (var i = 0, l = keys.length; i < l; i++) {\r\n    var key = keys[i]\r\n    def(target, key, src[key])\r\n  }\r\n}\r\n\r\n/**\r\n * Attempt to create an observer instance for a value,\r\n * returns the new observer if successfully observed,\r\n * or the existing observer if the value already has one.\r\n */\r\nfunction observe (value) {\r\n  if (!isObject(value)) {\r\n    return\r\n  }\r\n  var ob\r\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\r\n    ob = value.__ob__\r\n  } else if (\r\n    observerState.shouldConvert &&\r\n    !config._isServer &&\r\n    (Array.isArray(value) || isPlainObject(value)) &&\r\n    Object.isExtensible(value) &&\r\n    !value._isVue\r\n  ) {\r\n    ob = new Observer(value)\r\n  }\r\n  return ob\r\n}\r\n\r\n/**\r\n * Define a reactive property on an Object.\r\n */\r\nfunction defineReactive$$1 (\r\n  obj,\r\n  key,\r\n  val,\r\n  customSetter\r\n) {\r\n  var dep = new Dep()\r\n\r\n  var property = Object.getOwnPropertyDescriptor(obj, key)\r\n  if (property && property.configurable === false) {\r\n    return\r\n  }\r\n\r\n  // cater for pre-defined getter/setters\r\n  var getter = property && property.get\r\n  var setter = property && property.set\r\n\r\n  var childOb = observe(val)\r\n  Object.defineProperty(obj, key, {\r\n    enumerable: true,\r\n    configurable: true,\r\n    get: function reactiveGetter () {\r\n      var value = getter ? getter.call(obj) : val\r\n      if (Dep.target) {\r\n        dep.depend()\r\n        if (childOb) {\r\n          childOb.dep.depend()\r\n        }\r\n        if (Array.isArray(value)) {\r\n          for (var e = void 0, i = 0, l = value.length; i < l; i++) {\r\n            e = value[i]\r\n            e && e.__ob__ && e.__ob__.dep.depend()\r\n          }\r\n        }\r\n      }\r\n      return value\r\n    },\r\n    set: function reactiveSetter (newVal) {\r\n      var value = getter ? getter.call(obj) : val\r\n      if (newVal === value) {\r\n        return\r\n      }\r\n      if (\"development\" !== 'production' && customSetter) {\r\n        customSetter()\r\n      }\r\n      if (setter) {\r\n        setter.call(obj, newVal)\r\n      } else {\r\n        val = newVal\r\n      }\r\n      childOb = observe(newVal)\r\n      dep.notify()\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Set a property on an object. Adds the new property and\r\n * triggers change notification if the property doesn't\r\n * already exist.\r\n */\r\nfunction set (obj, key, val) {\r\n  if (Array.isArray(obj)) {\r\n    obj.splice(key, 1, val)\r\n    return val\r\n  }\r\n  if (hasOwn(obj, key)) {\r\n    obj[key] = val\r\n    return\r\n  }\r\n  var ob = obj.__ob__\r\n  if (obj._isVue || (ob && ob.vmCount)) {\r\n    \"development\" !== 'production' && warn(\r\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\r\n      'at runtime - declare it upfront in the data option.'\r\n    )\r\n    return\r\n  }\r\n  if (!ob) {\r\n    obj[key] = val\r\n    return\r\n  }\r\n  defineReactive$$1(ob.value, key, val)\r\n  ob.dep.notify()\r\n  return val\r\n}\r\n\r\n/**\r\n * Delete a property and trigger change if necessary.\r\n */\r\nfunction del (obj, key) {\r\n  var ob = obj.__ob__\r\n  if (obj._isVue || (ob && ob.vmCount)) {\r\n    \"development\" !== 'production' && warn(\r\n      'Avoid deleting properties on a Vue instance or its root $data ' +\r\n      '- just set it to null.'\r\n    )\r\n    return\r\n  }\r\n  if (!hasOwn(obj, key)) {\r\n    return\r\n  }\r\n  delete obj[key]\r\n  if (!ob) {\r\n    return\r\n  }\r\n  ob.dep.notify()\r\n}\r\n\r\n/*  */\r\n\r\nfunction initState (vm) {\r\n  vm._watchers = []\r\n  initProps(vm)\r\n  initData(vm)\r\n  initComputed(vm)\r\n  initMethods(vm)\r\n  initWatch(vm)\r\n}\r\n\r\nfunction initProps (vm) {\r\n  var props = vm.$options.props\r\n  if (props) {\r\n    var propsData = vm.$options.propsData || {}\r\n    var keys = vm.$options._propKeys = Object.keys(props)\r\n    var isRoot = !vm.$parent\r\n    // root instance props should be converted\r\n    observerState.shouldConvert = isRoot\r\n    var loop = function ( i ) {\r\n      var key = keys[i]\r\n      /* istanbul ignore else */\r\n      {\r\n        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\r\n          if (vm.$parent && !observerState.isSettingProps) {\r\n            warn(\r\n              \"Avoid mutating a prop directly since the value will be \" +\r\n              \"overwritten whenever the parent component re-renders. \" +\r\n              \"Instead, use a data or computed property based on the prop's \" +\r\n              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\r\n              vm\r\n            )\r\n          }\r\n        })\r\n      }\r\n    };\r\n\r\n    for (var i = 0; i < keys.length; i++) loop( i );\r\n    observerState.shouldConvert = true\r\n  }\r\n}\r\n\r\nfunction initData (vm) {\r\n  var data = vm.$options.data\r\n  data = vm._data = typeof data === 'function'\r\n    ? data.call(vm)\r\n    : data || {}\r\n  if (!isPlainObject(data)) {\r\n    data = {}\r\n    \"development\" !== 'production' && warn(\r\n      'data functions should return an object.',\r\n      vm\r\n    )\r\n  }\r\n  // proxy data on instance\r\n  var keys = Object.keys(data)\r\n  var props = vm.$options.props\r\n  var i = keys.length\r\n  while (i--) {\r\n    if (props && hasOwn(props, keys[i])) {\r\n      \"development\" !== 'production' && warn(\r\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\r\n        \"Use prop default value instead.\",\r\n        vm\r\n      )\r\n    } else {\r\n      proxy(vm, keys[i])\r\n    }\r\n  }\r\n  // observe data\r\n  observe(data)\r\n  data.__ob__ && data.__ob__.vmCount++\r\n}\r\n\r\nvar computedSharedDefinition = {\r\n  enumerable: true,\r\n  configurable: true,\r\n  get: noop,\r\n  set: noop\r\n}\r\n\r\nfunction initComputed (vm) {\r\n  var computed = vm.$options.computed\r\n  if (computed) {\r\n    for (var key in computed) {\r\n      var userDef = computed[key]\r\n      if (typeof userDef === 'function') {\r\n        computedSharedDefinition.get = makeComputedGetter(userDef, vm)\r\n        computedSharedDefinition.set = noop\r\n      } else {\r\n        computedSharedDefinition.get = userDef.get\r\n          ? userDef.cache !== false\r\n            ? makeComputedGetter(userDef.get, vm)\r\n            : bind$1(userDef.get, vm)\r\n          : noop\r\n        computedSharedDefinition.set = userDef.set\r\n          ? bind$1(userDef.set, vm)\r\n          : noop\r\n      }\r\n      Object.defineProperty(vm, key, computedSharedDefinition)\r\n    }\r\n  }\r\n}\r\n\r\nfunction makeComputedGetter (getter, owner) {\r\n  var watcher = new Watcher(owner, getter, noop, {\r\n    lazy: true\r\n  })\r\n  return function computedGetter () {\r\n    if (watcher.dirty) {\r\n      watcher.evaluate()\r\n    }\r\n    if (Dep.target) {\r\n      watcher.depend()\r\n    }\r\n    return watcher.value\r\n  }\r\n}\r\n\r\nfunction initMethods (vm) {\r\n  var methods = vm.$options.methods\r\n  if (methods) {\r\n    for (var key in methods) {\r\n      if (methods[key] != null) {\r\n        vm[key] = bind$1(methods[key], vm)\r\n      } else {\r\n        warn((\"Method \\\"\" + key + \"\\\" is undefined in options.\"), vm)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction initWatch (vm) {\r\n  var watch = vm.$options.watch\r\n  if (watch) {\r\n    for (var key in watch) {\r\n      var handler = watch[key]\r\n      if (Array.isArray(handler)) {\r\n        for (var i = 0; i < handler.length; i++) {\r\n          createWatcher(vm, key, handler[i])\r\n        }\r\n      } else {\r\n        createWatcher(vm, key, handler)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createWatcher (vm, key, handler) {\r\n  var options\r\n  if (isPlainObject(handler)) {\r\n    options = handler\r\n    handler = handler.handler\r\n  }\r\n  if (typeof handler === 'string') {\r\n    handler = vm[handler]\r\n  }\r\n  vm.$watch(key, handler, options)\r\n}\r\n\r\nfunction stateMixin (Vue) {\r\n  // flow somehow has problems with directly declared definition object\r\n  // when using Object.defineProperty, so we have to procedurally build up\r\n  // the object here.\r\n  var dataDef = {}\r\n  dataDef.get = function () {\r\n    return this._data\r\n  }\r\n  {\r\n    dataDef.set = function (newData) {\r\n      warn(\r\n        'Avoid replacing instance root $data. ' +\r\n        'Use nested data properties instead.',\r\n        this\r\n      )\r\n    }\r\n  }\r\n  Object.defineProperty(Vue.prototype, '$data', dataDef)\r\n\r\n  Vue.prototype.$set = set\r\n  Vue.prototype.$delete = del\r\n\r\n  Vue.prototype.$watch = function (\r\n    expOrFn,\r\n    cb,\r\n    options\r\n  ) {\r\n    var vm = this\r\n    options = options || {}\r\n    options.user = true\r\n    var watcher = new Watcher(vm, expOrFn, cb, options)\r\n    if (options.immediate) {\r\n      cb.call(vm, watcher.value)\r\n    }\r\n    return function unwatchFn () {\r\n      watcher.teardown()\r\n    }\r\n  }\r\n}\r\n\r\nfunction proxy (vm, key) {\r\n  if (!isReserved(key)) {\r\n    Object.defineProperty(vm, key, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      get: function proxyGetter () {\r\n        return vm._data[key]\r\n      },\r\n      set: function proxySetter (val) {\r\n        vm._data[key] = val\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar VNode = function VNode (\r\n  tag,\r\n  data,\r\n  children,\r\n  text,\r\n  elm,\r\n  ns,\r\n  context,\r\n  componentOptions\r\n) {\r\n  this.tag = tag\r\n  this.data = data\r\n  this.children = children\r\n  this.text = text\r\n  this.elm = elm\r\n  this.ns = ns\r\n  this.context = context\r\n  this.key = data && data.key\r\n  this.componentOptions = componentOptions\r\n  this.child = undefined\r\n  this.parent = undefined\r\n  this.raw = false\r\n  this.isStatic = false\r\n  this.isRootInsert = true\r\n  this.isComment = false\r\n  this.isCloned = false\r\n};\r\n\r\nvar emptyVNode = function () {\r\n  var node = new VNode()\r\n  node.text = ''\r\n  node.isComment = true\r\n  return node\r\n}\r\n\r\n// optimized shallow clone\r\n// used for static nodes and slot nodes because they may be reused across\r\n// multiple renders, cloning them avoids errors when DOM manipulations rely\r\n// on their elm reference.\r\nfunction cloneVNode (vnode) {\r\n  var cloned = new VNode(\r\n    vnode.tag,\r\n    vnode.data,\r\n    vnode.children,\r\n    vnode.text,\r\n    vnode.elm,\r\n    vnode.ns,\r\n    vnode.context,\r\n    vnode.componentOptions\r\n  )\r\n  cloned.isStatic = vnode.isStatic\r\n  cloned.key = vnode.key\r\n  cloned.isCloned = true\r\n  return cloned\r\n}\r\n\r\nfunction cloneVNodes (vnodes) {\r\n  var res = new Array(vnodes.length)\r\n  for (var i = 0; i < vnodes.length; i++) {\r\n    res[i] = cloneVNode(vnodes[i])\r\n  }\r\n  return res\r\n}\r\n\r\n/*  */\r\n\r\nfunction normalizeChildren (\r\n  children,\r\n  ns,\r\n  nestedIndex\r\n) {\r\n  if (isPrimitive(children)) {\r\n    return [createTextVNode(children)]\r\n  }\r\n  if (Array.isArray(children)) {\r\n    var res = []\r\n    for (var i = 0, l = children.length; i < l; i++) {\r\n      var c = children[i]\r\n      var last = res[res.length - 1]\r\n      //  nested\r\n      if (Array.isArray(c)) {\r\n        res.push.apply(res, normalizeChildren(c, ns, i))\r\n      } else if (isPrimitive(c)) {\r\n        if (last && last.text) {\r\n          last.text += String(c)\r\n        } else if (c !== '') {\r\n          // convert primitive to vnode\r\n          res.push(createTextVNode(c))\r\n        }\r\n      } else if (c instanceof VNode) {\r\n        if (c.text && last && last.text) {\r\n          last.text += c.text\r\n        } else {\r\n          // inherit parent namespace\r\n          if (ns) {\r\n            applyNS(c, ns)\r\n          }\r\n          // default key for nested array children (likely generated by v-for)\r\n          if (c.tag && c.key == null && nestedIndex != null) {\r\n            c.key = \"__vlist_\" + nestedIndex + \"_\" + i + \"__\"\r\n          }\r\n          res.push(c)\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  }\r\n}\r\n\r\nfunction createTextVNode (val) {\r\n  return new VNode(undefined, undefined, undefined, String(val))\r\n}\r\n\r\nfunction applyNS (vnode, ns) {\r\n  if (vnode.tag && !vnode.ns) {\r\n    vnode.ns = ns\r\n    if (vnode.children) {\r\n      for (var i = 0, l = vnode.children.length; i < l; i++) {\r\n        applyNS(vnode.children[i], ns)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction getFirstComponentChild (children) {\r\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\r\n}\r\n\r\nfunction mergeVNodeHook (def$$1, key, hook) {\r\n  var oldHook = def$$1[key]\r\n  if (oldHook) {\r\n    var injectedHash = def$$1.__injected || (def$$1.__injected = {})\r\n    if (!injectedHash[key]) {\r\n      injectedHash[key] = true\r\n      def$$1[key] = function () {\r\n        oldHook.apply(this, arguments)\r\n        hook.apply(this, arguments)\r\n      }\r\n    }\r\n  } else {\r\n    def$$1[key] = hook\r\n  }\r\n}\r\n\r\nfunction updateListeners (\r\n  on,\r\n  oldOn,\r\n  add,\r\n  remove$$1\r\n) {\r\n  var name, cur, old, fn, event, capture\r\n  for (name in on) {\r\n    cur = on[name]\r\n    old = oldOn[name]\r\n    if (!cur) {\r\n      \"development\" !== 'production' && warn(\r\n        (\"Handler for event \\\"\" + name + \"\\\" is undefined.\")\r\n      )\r\n    } else if (!old) {\r\n      capture = name.charAt(0) === '!'\r\n      event = capture ? name.slice(1) : name\r\n      if (Array.isArray(cur)) {\r\n        add(event, (cur.invoker = arrInvoker(cur)), capture)\r\n      } else {\r\n        if (!cur.invoker) {\r\n          fn = cur\r\n          cur = on[name] = {}\r\n          cur.fn = fn\r\n          cur.invoker = fnInvoker(cur)\r\n        }\r\n        add(event, cur.invoker, capture)\r\n      }\r\n    } else if (cur !== old) {\r\n      if (Array.isArray(old)) {\r\n        old.length = cur.length\r\n        for (var i = 0; i < old.length; i++) { old[i] = cur[i] }\r\n        on[name] = old\r\n      } else {\r\n        old.fn = cur\r\n        on[name] = old\r\n      }\r\n    }\r\n  }\r\n  for (name in oldOn) {\r\n    if (!on[name]) {\r\n      event = name.charAt(0) === '!' ? name.slice(1) : name\r\n      remove$$1(event, oldOn[name].invoker)\r\n    }\r\n  }\r\n}\r\n\r\nfunction arrInvoker (arr) {\r\n  return function (ev) {\r\n    var arguments$1 = arguments;\r\n\r\n    var single = arguments.length === 1\r\n    for (var i = 0; i < arr.length; i++) {\r\n      single ? arr[i](ev) : arr[i].apply(null, arguments$1)\r\n    }\r\n  }\r\n}\r\n\r\nfunction fnInvoker (o) {\r\n  return function (ev) {\r\n    var single = arguments.length === 1\r\n    single ? o.fn(ev) : o.fn.apply(null, arguments)\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar activeInstance = null\r\n\r\nfunction initLifecycle (vm) {\r\n  var options = vm.$options\r\n\r\n  // locate first non-abstract parent\r\n  var parent = options.parent\r\n  if (parent && !options.abstract) {\r\n    while (parent.$options.abstract && parent.$parent) {\r\n      parent = parent.$parent\r\n    }\r\n    parent.$children.push(vm)\r\n  }\r\n\r\n  vm.$parent = parent\r\n  vm.$root = parent ? parent.$root : vm\r\n\r\n  vm.$children = []\r\n  vm.$refs = {}\r\n\r\n  vm._watcher = null\r\n  vm._inactive = false\r\n  vm._isMounted = false\r\n  vm._isDestroyed = false\r\n  vm._isBeingDestroyed = false\r\n}\r\n\r\nfunction lifecycleMixin (Vue) {\r\n  Vue.prototype._mount = function (\r\n    el,\r\n    hydrating\r\n  ) {\r\n    var vm = this\r\n    vm.$el = el\r\n    if (!vm.$options.render) {\r\n      vm.$options.render = emptyVNode\r\n      {\r\n        /* istanbul ignore if */\r\n        if (vm.$options.template) {\r\n          warn(\r\n            'You are using the runtime-only build of Vue where the template ' +\r\n            'option is not available. Either pre-compile the templates into ' +\r\n            'render functions, or use the compiler-included build.',\r\n            vm\r\n          )\r\n        } else {\r\n          warn(\r\n            'Failed to mount component: template or render function not defined.',\r\n            vm\r\n          )\r\n        }\r\n      }\r\n    }\r\n    callHook(vm, 'beforeMount')\r\n    vm._watcher = new Watcher(vm, function () {\r\n      vm._update(vm._render(), hydrating)\r\n    }, noop)\r\n    hydrating = false\r\n    // root instance, call mounted on self\r\n    // mounted is called for child components in its inserted hook\r\n    if (vm.$root === vm) {\r\n      vm._isMounted = true\r\n      callHook(vm, 'mounted')\r\n    }\r\n    return vm\r\n  }\r\n\r\n  Vue.prototype._update = function (vnode, hydrating) {\r\n    var vm = this\r\n    if (vm._isMounted) {\r\n      callHook(vm, 'beforeUpdate')\r\n    }\r\n    var prevEl = vm.$el\r\n    var prevActiveInstance = activeInstance\r\n    activeInstance = vm\r\n    var prevVnode = vm._vnode\r\n    vm._vnode = vnode\r\n    if (!prevVnode) {\r\n      // Vue.prototype.__patch__ is injected in entry points\r\n      // based on the rendering backend used.\r\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating)\r\n    } else {\r\n      vm.$el = vm.__patch__(prevVnode, vnode)\r\n    }\r\n    activeInstance = prevActiveInstance\r\n    // update __vue__ reference\r\n    if (prevEl) {\r\n      prevEl.__vue__ = null\r\n    }\r\n    if (vm.$el) {\r\n      vm.$el.__vue__ = vm\r\n    }\r\n    // if parent is an HOC, update its $el as well\r\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\r\n      vm.$parent.$el = vm.$el\r\n    }\r\n    if (vm._isMounted) {\r\n      callHook(vm, 'updated')\r\n    }\r\n  }\r\n\r\n  Vue.prototype._updateFromParent = function (\r\n    propsData,\r\n    listeners,\r\n    parentVnode,\r\n    renderChildren\r\n  ) {\r\n    var vm = this\r\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren)\r\n    vm.$options._parentVnode = parentVnode\r\n    vm.$options._renderChildren = renderChildren\r\n    // update props\r\n    if (propsData && vm.$options.props) {\r\n      observerState.shouldConvert = false\r\n      {\r\n        observerState.isSettingProps = true\r\n      }\r\n      var propKeys = vm.$options._propKeys || []\r\n      for (var i = 0; i < propKeys.length; i++) {\r\n        var key = propKeys[i]\r\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm)\r\n      }\r\n      observerState.shouldConvert = true\r\n      {\r\n        observerState.isSettingProps = false\r\n      }\r\n    }\r\n    // update listeners\r\n    if (listeners) {\r\n      var oldListeners = vm.$options._parentListeners\r\n      vm.$options._parentListeners = listeners\r\n      vm._updateListeners(listeners, oldListeners)\r\n    }\r\n    // resolve slots + force update if has children\r\n    if (hasChildren) {\r\n      vm.$slots = resolveSlots(renderChildren, vm._renderContext)\r\n      vm.$forceUpdate()\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$forceUpdate = function () {\r\n    var vm = this\r\n    if (vm._watcher) {\r\n      vm._watcher.update()\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$destroy = function () {\r\n    var vm = this\r\n    if (vm._isBeingDestroyed) {\r\n      return\r\n    }\r\n    callHook(vm, 'beforeDestroy')\r\n    vm._isBeingDestroyed = true\r\n    // remove self from parent\r\n    var parent = vm.$parent\r\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\r\n      remove$1(parent.$children, vm)\r\n    }\r\n    // teardown watchers\r\n    if (vm._watcher) {\r\n      vm._watcher.teardown()\r\n    }\r\n    var i = vm._watchers.length\r\n    while (i--) {\r\n      vm._watchers[i].teardown()\r\n    }\r\n    // remove reference from data ob\r\n    // frozen object may not have observer.\r\n    if (vm._data.__ob__) {\r\n      vm._data.__ob__.vmCount--\r\n    }\r\n    // call the last hook...\r\n    vm._isDestroyed = true\r\n    callHook(vm, 'destroyed')\r\n    // turn off all instance listeners.\r\n    vm.$off()\r\n    // remove __vue__ reference\r\n    if (vm.$el) {\r\n      vm.$el.__vue__ = null\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook (vm, hook) {\r\n  var handlers = vm.$options[hook]\r\n  if (handlers) {\r\n    for (var i = 0, j = handlers.length; i < j; i++) {\r\n      handlers[i].call(vm)\r\n    }\r\n  }\r\n  vm.$emit('hook:' + hook)\r\n}\r\n\r\n/*  */\r\n\r\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 }\r\nvar hooksToMerge = Object.keys(hooks)\r\n\r\nfunction createComponent (\r\n  Ctor,\r\n  data,\r\n  context,\r\n  children,\r\n  tag\r\n) {\r\n  if (!Ctor) {\r\n    return\r\n  }\r\n\r\n  if (isObject(Ctor)) {\r\n    Ctor = Vue$3.extend(Ctor)\r\n  }\r\n\r\n  if (typeof Ctor !== 'function') {\r\n    {\r\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context)\r\n    }\r\n    return\r\n  }\r\n\r\n  // async component\r\n  if (!Ctor.cid) {\r\n    if (Ctor.resolved) {\r\n      Ctor = Ctor.resolved\r\n    } else {\r\n      Ctor = resolveAsyncComponent(Ctor, function () {\r\n        // it's ok to queue this on every render because\r\n        // $forceUpdate is buffered by the scheduler.\r\n        context.$forceUpdate()\r\n      })\r\n      if (!Ctor) {\r\n        // return nothing if this is indeed an async component\r\n        // wait for the callback to trigger parent update.\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  data = data || {}\r\n\r\n  // extract props\r\n  var propsData = extractProps(data, Ctor)\r\n\r\n  // functional component\r\n  if (Ctor.options.functional) {\r\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\r\n  }\r\n\r\n  // extract listeners, since these needs to be treated as\r\n  // child component listeners instead of DOM listeners\r\n  var listeners = data.on\r\n  // replace with listeners with .native modifier\r\n  data.on = data.nativeOn\r\n\r\n  if (Ctor.options.abstract) {\r\n    // abstract components do not keep anything\r\n    // other than props & listeners\r\n    data = {}\r\n  }\r\n\r\n  // merge component management hooks onto the placeholder node\r\n  mergeHooks(data)\r\n\r\n  // return a placeholder vnode\r\n  var name = Ctor.options.name || tag\r\n  var vnode = new VNode(\r\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\r\n    data, undefined, undefined, undefined, undefined, context,\r\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\r\n  )\r\n  return vnode\r\n}\r\n\r\nfunction createFunctionalComponent (\r\n  Ctor,\r\n  propsData,\r\n  data,\r\n  context,\r\n  children\r\n) {\r\n  var props = {}\r\n  var propOptions = Ctor.options.props\r\n  if (propOptions) {\r\n    for (var key in propOptions) {\r\n      props[key] = validateProp(key, propOptions, propsData)\r\n    }\r\n  }\r\n  return Ctor.options.render.call(\r\n    null,\r\n    // ensure the createElement function in functional components\r\n    // gets a unique context - this is necessary for correct named slot check\r\n    bind$1(createElement, { _self: Object.create(context) }),\r\n    {\r\n      props: props,\r\n      data: data,\r\n      parent: context,\r\n      children: normalizeChildren(children),\r\n      slots: function () { return resolveSlots(children, context); }\r\n    }\r\n  )\r\n}\r\n\r\nfunction createComponentInstanceForVnode (\r\n  vnode, // we know it's MountedComponentVNode but flow doesn't\r\n  parent // activeInstance in lifecycle state\r\n) {\r\n  var vnodeComponentOptions = vnode.componentOptions\r\n  var options = {\r\n    _isComponent: true,\r\n    parent: parent,\r\n    propsData: vnodeComponentOptions.propsData,\r\n    _componentTag: vnodeComponentOptions.tag,\r\n    _parentVnode: vnode,\r\n    _parentListeners: vnodeComponentOptions.listeners,\r\n    _renderChildren: vnodeComponentOptions.children\r\n  }\r\n  // check inline-template render functions\r\n  var inlineTemplate = vnode.data.inlineTemplate\r\n  if (inlineTemplate) {\r\n    options.render = inlineTemplate.render\r\n    options.staticRenderFns = inlineTemplate.staticRenderFns\r\n  }\r\n  return new vnodeComponentOptions.Ctor(options)\r\n}\r\n\r\nfunction init (vnode, hydrating) {\r\n  if (!vnode.child || vnode.child._isDestroyed) {\r\n    var child = vnode.child = createComponentInstanceForVnode(vnode, activeInstance)\r\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating)\r\n  }\r\n}\r\n\r\nfunction prepatch (\r\n  oldVnode,\r\n  vnode\r\n) {\r\n  var options = vnode.componentOptions\r\n  var child = vnode.child = oldVnode.child\r\n  child._updateFromParent(\r\n    options.propsData, // updated props\r\n    options.listeners, // updated listeners\r\n    vnode, // new parent vnode\r\n    options.children // new children\r\n  )\r\n}\r\n\r\nfunction insert (vnode) {\r\n  if (!vnode.child._isMounted) {\r\n    vnode.child._isMounted = true\r\n    callHook(vnode.child, 'mounted')\r\n  }\r\n  if (vnode.data.keepAlive) {\r\n    vnode.child._inactive = false\r\n    callHook(vnode.child, 'activated')\r\n  }\r\n}\r\n\r\nfunction destroy$1 (vnode) {\r\n  if (!vnode.child._isDestroyed) {\r\n    if (!vnode.data.keepAlive) {\r\n      vnode.child.$destroy()\r\n    } else {\r\n      vnode.child._inactive = true\r\n      callHook(vnode.child, 'deactivated')\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveAsyncComponent (\r\n  factory,\r\n  cb\r\n) {\r\n  if (factory.requested) {\r\n    // pool callbacks\r\n    factory.pendingCallbacks.push(cb)\r\n  } else {\r\n    factory.requested = true\r\n    var cbs = factory.pendingCallbacks = [cb]\r\n    var sync = true\r\n\r\n    var resolve = function (res) {\r\n      if (isObject(res)) {\r\n        res = Vue$3.extend(res)\r\n      }\r\n      // cache resolved\r\n      factory.resolved = res\r\n      // invoke callbacks only if this is not a synchronous resolve\r\n      // (async resolves are shimmed as synchronous during SSR)\r\n      if (!sync) {\r\n        for (var i = 0, l = cbs.length; i < l; i++) {\r\n          cbs[i](res)\r\n        }\r\n      }\r\n    }\r\n\r\n    var reject = function (reason) {\r\n      \"development\" !== 'production' && warn(\r\n        \"Failed to resolve async component: \" + (String(factory)) +\r\n        (reason ? (\"\\nReason: \" + reason) : '')\r\n      )\r\n    }\r\n\r\n    var res = factory(resolve, reject)\r\n\r\n    // handle promise\r\n    if (res && typeof res.then === 'function' && !factory.resolved) {\r\n      res.then(resolve, reject)\r\n    }\r\n\r\n    sync = false\r\n    // return in case resolved synchronously\r\n    return factory.resolved\r\n  }\r\n}\r\n\r\nfunction extractProps (data, Ctor) {\r\n  // we are only extrating raw values here.\r\n  // validation and default values are handled in the child\r\n  // component itself.\r\n  var propOptions = Ctor.options.props\r\n  if (!propOptions) {\r\n    return\r\n  }\r\n  var res = {}\r\n  var attrs = data.attrs;\r\n  var props = data.props;\r\n  var domProps = data.domProps;\r\n  if (attrs || props || domProps) {\r\n    for (var key in propOptions) {\r\n      var altKey = hyphenate(key)\r\n      checkProp(res, props, key, altKey, true) ||\r\n      checkProp(res, attrs, key, altKey) ||\r\n      checkProp(res, domProps, key, altKey)\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nfunction checkProp (\r\n  res,\r\n  hash,\r\n  key,\r\n  altKey,\r\n  preserve\r\n) {\r\n  if (hash) {\r\n    if (hasOwn(hash, key)) {\r\n      res[key] = hash[key]\r\n      if (!preserve) {\r\n        delete hash[key]\r\n      }\r\n      return true\r\n    } else if (hasOwn(hash, altKey)) {\r\n      res[key] = hash[altKey]\r\n      if (!preserve) {\r\n        delete hash[altKey]\r\n      }\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction mergeHooks (data) {\r\n  if (!data.hook) {\r\n    data.hook = {}\r\n  }\r\n  for (var i = 0; i < hooksToMerge.length; i++) {\r\n    var key = hooksToMerge[i]\r\n    var fromParent = data.hook[key]\r\n    var ours = hooks[key]\r\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours\r\n  }\r\n}\r\n\r\nfunction mergeHook$1 (a, b) {\r\n  // since all hooks have at most two args, use fixed args\r\n  // to avoid having to use fn.apply().\r\n  return function (_, __) {\r\n    a(_, __)\r\n    b(_, __)\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\n// wrapper function for providing a more flexible interface\r\n// without getting yelled at by flow\r\nfunction createElement (\r\n  tag,\r\n  data,\r\n  children\r\n) {\r\n  if (data && (Array.isArray(data) || typeof data !== 'object')) {\r\n    children = data\r\n    data = undefined\r\n  }\r\n  // make sure to use real instance instead of proxy as context\r\n  return _createElement(this._self, tag, data, children)\r\n}\r\n\r\nfunction _createElement (\r\n  context,\r\n  tag,\r\n  data,\r\n  children\r\n) {\r\n  if (data && data.__ob__) {\r\n    \"development\" !== 'production' && warn(\r\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\r\n      'Always create fresh vnode data objects in each render!',\r\n      context\r\n    )\r\n    return\r\n  }\r\n  if (!tag) {\r\n    // in case of component :is set to falsy value\r\n    return emptyVNode()\r\n  }\r\n  if (typeof tag === 'string') {\r\n    var Ctor\r\n    var ns = config.getTagNamespace(tag)\r\n    if (config.isReservedTag(tag)) {\r\n      // platform built-in elements\r\n      return new VNode(\r\n        tag, data, normalizeChildren(children, ns),\r\n        undefined, undefined, ns, context\r\n      )\r\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\r\n      // component\r\n      return createComponent(Ctor, data, context, children, tag)\r\n    } else {\r\n      // unknown or unlisted namespaced elements\r\n      // check at runtime because it may get assigned a namespace when its\r\n      // parent normalizes children\r\n      return new VNode(\r\n        tag, data, normalizeChildren(children, ns),\r\n        undefined, undefined, ns, context\r\n      )\r\n    }\r\n  } else {\r\n    // direct component options / constructor\r\n    return createComponent(tag, data, context, children)\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nfunction initRender (vm) {\r\n  vm.$vnode = null // the placeholder node in parent tree\r\n  vm._vnode = null // the root of the child tree\r\n  vm._staticTrees = null\r\n  vm._renderContext = vm.$options._parentVnode && vm.$options._parentVnode.context\r\n  vm.$slots = resolveSlots(vm.$options._renderChildren, vm._renderContext)\r\n  // bind the public createElement fn to this instance\r\n  // so that we get proper render context inside it.\r\n  vm.$createElement = bind$1(createElement, vm)\r\n  if (vm.$options.el) {\r\n    vm.$mount(vm.$options.el)\r\n  }\r\n}\r\n\r\nfunction renderMixin (Vue) {\r\n  Vue.prototype.$nextTick = function (fn) {\r\n    nextTick(fn, this)\r\n  }\r\n\r\n  Vue.prototype._render = function () {\r\n    var vm = this\r\n    var ref = vm.$options;\r\n    var render = ref.render;\r\n    var staticRenderFns = ref.staticRenderFns;\r\n    var _parentVnode = ref._parentVnode;\r\n\r\n    if (vm._isMounted) {\r\n      // clone slot nodes on re-renders\r\n      for (var key in vm.$slots) {\r\n        vm.$slots[key] = cloneVNodes(vm.$slots[key])\r\n      }\r\n    }\r\n\r\n    if (staticRenderFns && !vm._staticTrees) {\r\n      vm._staticTrees = []\r\n    }\r\n    // set parent vnode. this allows render functions to have access\r\n    // to the data on the placeholder node.\r\n    vm.$vnode = _parentVnode\r\n    // render self\r\n    var vnode\r\n    try {\r\n      vnode = render.call(vm._renderProxy, vm.$createElement)\r\n    } catch (e) {\r\n      {\r\n        warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"))\r\n      }\r\n      /* istanbul ignore else */\r\n      if (config.errorHandler) {\r\n        config.errorHandler.call(null, e, vm)\r\n      } else {\r\n        if (config._isServer) {\r\n          throw e\r\n        } else {\r\n          setTimeout(function () { throw e }, 0)\r\n        }\r\n      }\r\n      // return previous vnode to prevent render error causing blank component\r\n      vnode = vm._vnode\r\n    }\r\n    // return empty vnode in case the render function errored out\r\n    if (!(vnode instanceof VNode)) {\r\n      if (\"development\" !== 'production' && Array.isArray(vnode)) {\r\n        warn(\r\n          'Multiple root nodes returned from render function. Render function ' +\r\n          'should return a single root node.',\r\n          vm\r\n        )\r\n      }\r\n      vnode = emptyVNode()\r\n    }\r\n    // set parent\r\n    vnode.parent = _parentVnode\r\n    return vnode\r\n  }\r\n\r\n  // shorthands used in render functions\r\n  Vue.prototype._h = createElement\r\n  // toString for mustaches\r\n  Vue.prototype._s = _toString\r\n  // number conversion\r\n  Vue.prototype._n = toNumber\r\n  // empty vnode\r\n  Vue.prototype._e = emptyVNode\r\n  // loose equal\r\n  Vue.prototype._q = looseEqual\r\n  // loose indexOf\r\n  Vue.prototype._i = looseIndexOf\r\n\r\n  // render static tree by index\r\n  Vue.prototype._m = function renderStatic (\r\n    index,\r\n    isInFor\r\n  ) {\r\n    var tree = this._staticTrees[index]\r\n    // if has already-rendered static tree and not inside v-for,\r\n    // we can reuse the same tree by doing a shallow clone.\r\n    if (tree && !isInFor) {\r\n      return Array.isArray(tree)\r\n        ? cloneVNodes(tree)\r\n        : cloneVNode(tree)\r\n    }\r\n    // otherwise, render a fresh tree.\r\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy)\r\n    if (Array.isArray(tree)) {\r\n      for (var i = 0; i < tree.length; i++) {\r\n        tree[i].isStatic = true\r\n        tree[i].key = \"__static__\" + index + \"_\" + i\r\n      }\r\n    } else {\r\n      tree.isStatic = true\r\n      tree.key = \"__static__\" + index\r\n    }\r\n    return tree\r\n  }\r\n\r\n  // filter resolution helper\r\n  var identity = function (_) { return _; }\r\n  Vue.prototype._f = function resolveFilter (id) {\r\n    return resolveAsset(this.$options, 'filters', id, true) || identity\r\n  }\r\n\r\n  // render v-for\r\n  Vue.prototype._l = function renderList (\r\n    val,\r\n    render\r\n  ) {\r\n    var ret, i, l, keys, key\r\n    if (Array.isArray(val)) {\r\n      ret = new Array(val.length)\r\n      for (i = 0, l = val.length; i < l; i++) {\r\n        ret[i] = render(val[i], i)\r\n      }\r\n    } else if (typeof val === 'number') {\r\n      ret = new Array(val)\r\n      for (i = 0; i < val; i++) {\r\n        ret[i] = render(i + 1, i)\r\n      }\r\n    } else if (isObject(val)) {\r\n      keys = Object.keys(val)\r\n      ret = new Array(keys.length)\r\n      for (i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i]\r\n        ret[i] = render(val[key], key, i)\r\n      }\r\n    }\r\n    return ret\r\n  }\r\n\r\n  // renderSlot\r\n  Vue.prototype._t = function (\r\n    name,\r\n    fallback\r\n  ) {\r\n    var slotNodes = this.$slots[name]\r\n    // warn duplicate slot usage\r\n    if (slotNodes && \"development\" !== 'production') {\r\n      slotNodes._rendered && warn(\r\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\r\n        \"- this will likely cause render errors.\",\r\n        this\r\n      )\r\n      slotNodes._rendered = true\r\n    }\r\n    return slotNodes || fallback\r\n  }\r\n\r\n  // apply v-bind object\r\n  Vue.prototype._b = function bindProps (\r\n    data,\r\n    value,\r\n    asProp\r\n  ) {\r\n    if (value) {\r\n      if (!isObject(value)) {\r\n        \"development\" !== 'production' && warn(\r\n          'v-bind without argument expects an Object or Array value',\r\n          this\r\n        )\r\n      } else {\r\n        if (Array.isArray(value)) {\r\n          value = toObject(value)\r\n        }\r\n        for (var key in value) {\r\n          if (key === 'class' || key === 'style') {\r\n            data[key] = value[key]\r\n          } else {\r\n            var hash = asProp || config.mustUseProp(key)\r\n              ? data.domProps || (data.domProps = {})\r\n              : data.attrs || (data.attrs = {})\r\n            hash[key] = value[key]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return data\r\n  }\r\n\r\n  // expose v-on keyCodes\r\n  Vue.prototype._k = function getKeyCodes (key) {\r\n    return config.keyCodes[key]\r\n  }\r\n}\r\n\r\nfunction resolveSlots (\r\n  renderChildren,\r\n  context\r\n) {\r\n  var slots = {}\r\n  if (!renderChildren) {\r\n    return slots\r\n  }\r\n  var children = normalizeChildren(renderChildren) || []\r\n  var defaultSlot = []\r\n  var name, child\r\n  for (var i = 0, l = children.length; i < l; i++) {\r\n    child = children[i]\r\n    // named slots should only be respected if the vnode was rendered in the\r\n    // same context.\r\n    if (child.context === context &&\r\n        child.data && (name = child.data.slot)) {\r\n      var slot = (slots[name] || (slots[name] = []))\r\n      if (child.tag === 'template') {\r\n        slot.push.apply(slot, child.children)\r\n      } else {\r\n        slot.push(child)\r\n      }\r\n    } else {\r\n      defaultSlot.push(child)\r\n    }\r\n  }\r\n  // ignore single whitespace\r\n  if (defaultSlot.length && !(\r\n    defaultSlot.length === 1 &&\r\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\r\n  )) {\r\n    slots.default = defaultSlot\r\n  }\r\n  return slots\r\n}\r\n\r\n/*  */\r\n\r\nfunction initEvents (vm) {\r\n  vm._events = Object.create(null)\r\n  // init parent attached events\r\n  var listeners = vm.$options._parentListeners\r\n  var on = bind$1(vm.$on, vm)\r\n  var off = bind$1(vm.$off, vm)\r\n  vm._updateListeners = function (listeners, oldListeners) {\r\n    updateListeners(listeners, oldListeners || {}, on, off)\r\n  }\r\n  if (listeners) {\r\n    vm._updateListeners(listeners)\r\n  }\r\n}\r\n\r\nfunction eventsMixin (Vue) {\r\n  Vue.prototype.$on = function (event, fn) {\r\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn)\r\n    return vm\r\n  }\r\n\r\n  Vue.prototype.$once = function (event, fn) {\r\n    var vm = this\r\n    function on () {\r\n      vm.$off(event, on)\r\n      fn.apply(vm, arguments)\r\n    }\r\n    on.fn = fn\r\n    vm.$on(event, on)\r\n    return vm\r\n  }\r\n\r\n  Vue.prototype.$off = function (event, fn) {\r\n    var vm = this\r\n    // all\r\n    if (!arguments.length) {\r\n      vm._events = Object.create(null)\r\n      return vm\r\n    }\r\n    // specific event\r\n    var cbs = vm._events[event]\r\n    if (!cbs) {\r\n      return vm\r\n    }\r\n    if (arguments.length === 1) {\r\n      vm._events[event] = null\r\n      return vm\r\n    }\r\n    // specific handler\r\n    var cb\r\n    var i = cbs.length\r\n    while (i--) {\r\n      cb = cbs[i]\r\n      if (cb === fn || cb.fn === fn) {\r\n        cbs.splice(i, 1)\r\n        break\r\n      }\r\n    }\r\n    return vm\r\n  }\r\n\r\n  Vue.prototype.$emit = function (event) {\r\n    var vm = this\r\n    var cbs = vm._events[event]\r\n    if (cbs) {\r\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs\r\n      var args = toArray(arguments, 1)\r\n      for (var i = 0, l = cbs.length; i < l; i++) {\r\n        cbs[i].apply(vm, args)\r\n      }\r\n    }\r\n    return vm\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar uid = 0\r\n\r\nfunction initMixin (Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    var vm = this\r\n    // a uid\r\n    vm._uid = uid++\r\n    // a flag to avoid this being observed\r\n    vm._isVue = true\r\n    // merge options\r\n    if (options && options._isComponent) {\r\n      // optimize internal component instantiation\r\n      // since dynamic options merging is pretty slow, and none of the\r\n      // internal component options needs special treatment.\r\n      initInternalComponent(vm, options)\r\n    } else {\r\n      vm.$options = mergeOptions(\r\n        resolveConstructorOptions(vm),\r\n        options || {},\r\n        vm\r\n      )\r\n    }\r\n    /* istanbul ignore else */\r\n    {\r\n      initProxy(vm)\r\n    }\r\n    // expose real self\r\n    vm._self = vm\r\n    initLifecycle(vm)\r\n    initEvents(vm)\r\n    callHook(vm, 'beforeCreate')\r\n    initState(vm)\r\n    callHook(vm, 'created')\r\n    initRender(vm)\r\n  }\r\n\r\n  function initInternalComponent (vm, options) {\r\n    var opts = vm.$options = Object.create(resolveConstructorOptions(vm))\r\n    // doing this because it's faster than dynamic enumeration.\r\n    opts.parent = options.parent\r\n    opts.propsData = options.propsData\r\n    opts._parentVnode = options._parentVnode\r\n    opts._parentListeners = options._parentListeners\r\n    opts._renderChildren = options._renderChildren\r\n    opts._componentTag = options._componentTag\r\n    if (options.render) {\r\n      opts.render = options.render\r\n      opts.staticRenderFns = options.staticRenderFns\r\n    }\r\n  }\r\n\r\n  function resolveConstructorOptions (vm) {\r\n    var Ctor = vm.constructor\r\n    var options = Ctor.options\r\n    if (Ctor.super) {\r\n      var superOptions = Ctor.super.options\r\n      var cachedSuperOptions = Ctor.superOptions\r\n      if (superOptions !== cachedSuperOptions) {\r\n        // super option changed\r\n        Ctor.superOptions = superOptions\r\n        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions)\r\n        if (options.name) {\r\n          options.components[options.name] = Ctor\r\n        }\r\n      }\r\n    }\r\n    return options\r\n  }\r\n}\r\n\r\nfunction Vue$3 (options) {\r\n  if (\"development\" !== 'production' &&\r\n    !(this instanceof Vue$3)) {\r\n    warn('Vue is a constructor and should be called with the `new` keyword')\r\n  }\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue$3)\r\nstateMixin(Vue$3)\r\neventsMixin(Vue$3)\r\nlifecycleMixin(Vue$3)\r\nrenderMixin(Vue$3)\r\n\r\nvar warn = noop\r\nvar formatComponentName\r\n\r\n{\r\n  var hasConsole = typeof console !== 'undefined'\r\n\r\n  warn = function (msg, vm) {\r\n    if (hasConsole && (!config.silent)) {\r\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\r\n        vm ? formatLocation(formatComponentName(vm)) : ''\r\n      ))\r\n    }\r\n  }\r\n\r\n  formatComponentName = function (vm) {\r\n    if (vm.$root === vm) {\r\n      return 'root instance'\r\n    }\r\n    var name = vm._isVue\r\n      ? vm.$options.name || vm.$options._componentTag\r\n      : vm.name\r\n    return name ? (\"component <\" + name + \">\") : \"anonymous component\"\r\n  }\r\n\r\n  var formatLocation = function (str) {\r\n    if (str === 'anonymous component') {\r\n      str += \" - use the \\\"name\\\" option for better debugging messages.\"\r\n    }\r\n    return (\"(found in \" + str + \")\")\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\n/**\r\n * Option overwriting strategies are functions that handle\r\n * how to merge a parent option value and a child option\r\n * value into the final value.\r\n */\r\nvar strats = config.optionMergeStrategies\r\n\r\n/**\r\n * Options with restrictions\r\n */\r\n{\r\n  strats.el = strats.propsData = function (parent, child, vm, key) {\r\n    if (!vm) {\r\n      warn(\r\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\r\n        'creation with the `new` keyword.'\r\n      )\r\n    }\r\n    return defaultStrat(parent, child)\r\n  }\r\n\r\n  strats.name = function (parent, child, vm) {\r\n    if (vm && child) {\r\n      warn(\r\n        'options \"name\" can only be used as a component definition option, ' +\r\n        'not during instance creation.'\r\n      )\r\n    }\r\n    return defaultStrat(parent, child)\r\n  }\r\n}\r\n\r\n/**\r\n * Helper that recursively merges two data objects together.\r\n */\r\nfunction mergeData (to, from) {\r\n  var key, toVal, fromVal\r\n  for (key in from) {\r\n    toVal = to[key]\r\n    fromVal = from[key]\r\n    if (!hasOwn(to, key)) {\r\n      set(to, key, fromVal)\r\n    } else if (isObject(toVal) && isObject(fromVal)) {\r\n      mergeData(toVal, fromVal)\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\n/**\r\n * Data\r\n */\r\nstrats.data = function (\r\n  parentVal,\r\n  childVal,\r\n  vm\r\n) {\r\n  if (!vm) {\r\n    // in a Vue.extend merge, both should be functions\r\n    if (!childVal) {\r\n      return parentVal\r\n    }\r\n    if (typeof childVal !== 'function') {\r\n      \"development\" !== 'production' && warn(\r\n        'The \"data\" option should be a function ' +\r\n        'that returns a per-instance value in component ' +\r\n        'definitions.',\r\n        vm\r\n      )\r\n      return parentVal\r\n    }\r\n    if (!parentVal) {\r\n      return childVal\r\n    }\r\n    // when parentVal & childVal are both present,\r\n    // we need to return a function that returns the\r\n    // merged result of both functions... no need to\r\n    // check if parentVal is a function here because\r\n    // it has to be a function to pass previous merges.\r\n    return function mergedDataFn () {\r\n      return mergeData(\r\n        childVal.call(this),\r\n        parentVal.call(this)\r\n      )\r\n    }\r\n  } else if (parentVal || childVal) {\r\n    return function mergedInstanceDataFn () {\r\n      // instance merge\r\n      var instanceData = typeof childVal === 'function'\r\n        ? childVal.call(vm)\r\n        : childVal\r\n      var defaultData = typeof parentVal === 'function'\r\n        ? parentVal.call(vm)\r\n        : undefined\r\n      if (instanceData) {\r\n        return mergeData(instanceData, defaultData)\r\n      } else {\r\n        return defaultData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Hooks and param attributes are merged as arrays.\r\n */\r\nfunction mergeHook (\r\n  parentVal,\r\n  childVal\r\n) {\r\n  return childVal\r\n    ? parentVal\r\n      ? parentVal.concat(childVal)\r\n      : Array.isArray(childVal)\r\n        ? childVal\r\n        : [childVal]\r\n    : parentVal\r\n}\r\n\r\nconfig._lifecycleHooks.forEach(function (hook) {\r\n  strats[hook] = mergeHook\r\n})\r\n\r\n/**\r\n * Assets\r\n *\r\n * When a vm is present (instance creation), we need to do\r\n * a three-way merge between constructor options, instance\r\n * options and parent options.\r\n */\r\nfunction mergeAssets (parentVal, childVal) {\r\n  var res = Object.create(parentVal || null)\r\n  return childVal\r\n    ? extend(res, childVal)\r\n    : res\r\n}\r\n\r\nconfig._assetTypes.forEach(function (type) {\r\n  strats[type + 's'] = mergeAssets\r\n})\r\n\r\n/**\r\n * Watchers.\r\n *\r\n * Watchers hashes should not overwrite one\r\n * another, so we merge them as arrays.\r\n */\r\nstrats.watch = function (parentVal, childVal) {\r\n  /* istanbul ignore if */\r\n  if (!childVal) { return parentVal }\r\n  if (!parentVal) { return childVal }\r\n  var ret = {}\r\n  extend(ret, parentVal)\r\n  for (var key in childVal) {\r\n    var parent = ret[key]\r\n    var child = childVal[key]\r\n    if (parent && !Array.isArray(parent)) {\r\n      parent = [parent]\r\n    }\r\n    ret[key] = parent\r\n      ? parent.concat(child)\r\n      : [child]\r\n  }\r\n  return ret\r\n}\r\n\r\n/**\r\n * Other object hashes.\r\n */\r\nstrats.props =\r\nstrats.methods =\r\nstrats.computed = function (parentVal, childVal) {\r\n  if (!childVal) { return parentVal }\r\n  if (!parentVal) { return childVal }\r\n  var ret = Object.create(null)\r\n  extend(ret, parentVal)\r\n  extend(ret, childVal)\r\n  return ret\r\n}\r\n\r\n/**\r\n * Default strategy.\r\n */\r\nvar defaultStrat = function (parentVal, childVal) {\r\n  return childVal === undefined\r\n    ? parentVal\r\n    : childVal\r\n}\r\n\r\n/**\r\n * Make sure component options get converted to actual\r\n * constructors.\r\n */\r\nfunction normalizeComponents (options) {\r\n  if (options.components) {\r\n    var components = options.components\r\n    var def\r\n    for (var key in components) {\r\n      var lower = key.toLowerCase()\r\n      if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\r\n        \"development\" !== 'production' && warn(\r\n          'Do not use built-in or reserved HTML elements as component ' +\r\n          'id: ' + key\r\n        )\r\n        continue\r\n      }\r\n      def = components[key]\r\n      if (isPlainObject(def)) {\r\n        components[key] = Vue$3.extend(def)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure all props option syntax are normalized into the\r\n * Object-based format.\r\n */\r\nfunction normalizeProps (options) {\r\n  var props = options.props\r\n  if (!props) { return }\r\n  var res = {}\r\n  var i, val, name\r\n  if (Array.isArray(props)) {\r\n    i = props.length\r\n    while (i--) {\r\n      val = props[i]\r\n      if (typeof val === 'string') {\r\n        name = camelize(val)\r\n        res[name] = { type: null }\r\n      } else {\r\n        warn('props must be strings when using array syntax.')\r\n      }\r\n    }\r\n  } else if (isPlainObject(props)) {\r\n    for (var key in props) {\r\n      val = props[key]\r\n      name = camelize(key)\r\n      res[name] = isPlainObject(val)\r\n        ? val\r\n        : { type: val }\r\n    }\r\n  }\r\n  options.props = res\r\n}\r\n\r\n/**\r\n * Normalize raw function directives into object format.\r\n */\r\nfunction normalizeDirectives (options) {\r\n  var dirs = options.directives\r\n  if (dirs) {\r\n    for (var key in dirs) {\r\n      var def = dirs[key]\r\n      if (typeof def === 'function') {\r\n        dirs[key] = { bind: def, update: def }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Merge two option objects into a new one.\r\n * Core utility used in both instantiation and inheritance.\r\n */\r\nfunction mergeOptions (\r\n  parent,\r\n  child,\r\n  vm\r\n) {\r\n  normalizeComponents(child)\r\n  normalizeProps(child)\r\n  normalizeDirectives(child)\r\n  var extendsFrom = child.extends\r\n  if (extendsFrom) {\r\n    parent = typeof extendsFrom === 'function'\r\n      ? mergeOptions(parent, extendsFrom.options, vm)\r\n      : mergeOptions(parent, extendsFrom, vm)\r\n  }\r\n  if (child.mixins) {\r\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\r\n      var mixin = child.mixins[i]\r\n      if (mixin.prototype instanceof Vue$3) {\r\n        mixin = mixin.options\r\n      }\r\n      parent = mergeOptions(parent, mixin, vm)\r\n    }\r\n  }\r\n  var options = {}\r\n  var key\r\n  for (key in parent) {\r\n    mergeField(key)\r\n  }\r\n  for (key in child) {\r\n    if (!hasOwn(parent, key)) {\r\n      mergeField(key)\r\n    }\r\n  }\r\n  function mergeField (key) {\r\n    var strat = strats[key] || defaultStrat\r\n    options[key] = strat(parent[key], child[key], vm, key)\r\n  }\r\n  return options\r\n}\r\n\r\n/**\r\n * Resolve an asset.\r\n * This function is used because child instances need access\r\n * to assets defined in its ancestor chain.\r\n */\r\nfunction resolveAsset (\r\n  options,\r\n  type,\r\n  id,\r\n  warnMissing\r\n) {\r\n  /* istanbul ignore if */\r\n  if (typeof id !== 'string') {\r\n    return\r\n  }\r\n  var assets = options[type]\r\n  var res = assets[id] ||\r\n    // camelCase ID\r\n    assets[camelize(id)] ||\r\n    // Pascal Case ID\r\n    assets[capitalize(camelize(id))]\r\n  if (\"development\" !== 'production' && warnMissing && !res) {\r\n    warn(\r\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\r\n      options\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\n/*  */\r\n\r\nfunction validateProp (\r\n  key,\r\n  propOptions,\r\n  propsData,\r\n  vm\r\n) {\r\n  var prop = propOptions[key]\r\n  var absent = !hasOwn(propsData, key)\r\n  var value = propsData[key]\r\n  // handle boolean props\r\n  if (getType(prop.type) === 'Boolean') {\r\n    if (absent && !hasOwn(prop, 'default')) {\r\n      value = false\r\n    } else if (value === '' || value === hyphenate(key)) {\r\n      value = true\r\n    }\r\n  }\r\n  // check default value\r\n  if (value === undefined) {\r\n    value = getPropDefaultValue(vm, prop, key)\r\n    // since the default value is a fresh copy,\r\n    // make sure to observe it.\r\n    var prevShouldConvert = observerState.shouldConvert\r\n    observerState.shouldConvert = true\r\n    observe(value)\r\n    observerState.shouldConvert = prevShouldConvert\r\n  }\r\n  {\r\n    assertProp(prop, key, value, vm, absent)\r\n  }\r\n  return value\r\n}\r\n\r\n/**\r\n * Get the default value of a prop.\r\n */\r\nfunction getPropDefaultValue (vm, prop, name) {\r\n  // no default, return undefined\r\n  if (!hasOwn(prop, 'default')) {\r\n    return undefined\r\n  }\r\n  var def = prop.default\r\n  // warn against non-factory defaults for Object & Array\r\n  if (isObject(def)) {\r\n    \"development\" !== 'production' && warn(\r\n      'Invalid default value for prop \"' + name + '\": ' +\r\n      'Props with type Object/Array must use a factory function ' +\r\n      'to return the default value.',\r\n      vm\r\n    )\r\n  }\r\n  // call factory function for non-Function types\r\n  return typeof def === 'function' && prop.type !== Function\r\n    ? def.call(vm)\r\n    : def\r\n}\r\n\r\n/**\r\n * Assert whether a prop is valid.\r\n */\r\nfunction assertProp (\r\n  prop,\r\n  name,\r\n  value,\r\n  vm,\r\n  absent\r\n) {\r\n  if (prop.required && absent) {\r\n    warn(\r\n      'Missing required prop: \"' + name + '\"',\r\n      vm\r\n    )\r\n    return\r\n  }\r\n  if (value == null && !prop.required) {\r\n    return\r\n  }\r\n  var type = prop.type\r\n  var valid = !type || type === true\r\n  var expectedTypes = []\r\n  if (type) {\r\n    if (!Array.isArray(type)) {\r\n      type = [type]\r\n    }\r\n    for (var i = 0; i < type.length && !valid; i++) {\r\n      var assertedType = assertType(value, type[i])\r\n      expectedTypes.push(assertedType.expectedType)\r\n      valid = assertedType.valid\r\n    }\r\n  }\r\n  if (!valid) {\r\n    warn(\r\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\r\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\r\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\r\n      vm\r\n    )\r\n    return\r\n  }\r\n  var validator = prop.validator\r\n  if (validator) {\r\n    if (!validator(value)) {\r\n      warn(\r\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\r\n        vm\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Assert the type of a value\r\n */\r\nfunction assertType (value, type) {\r\n  var valid\r\n  var expectedType = getType(type)\r\n  if (expectedType === 'String') {\r\n    valid = typeof value === (expectedType = 'string')\r\n  } else if (expectedType === 'Number') {\r\n    valid = typeof value === (expectedType = 'number')\r\n  } else if (expectedType === 'Boolean') {\r\n    valid = typeof value === (expectedType = 'boolean')\r\n  } else if (expectedType === 'Function') {\r\n    valid = typeof value === (expectedType = 'function')\r\n  } else if (expectedType === 'Object') {\r\n    valid = isPlainObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = Array.isArray(value)\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid: valid,\r\n    expectedType: expectedType\r\n  }\r\n}\r\n\r\n/**\r\n * Use function string name to check built-in types,\r\n * because a simple equality check will fail when running\r\n * across different vms / iframes.\r\n */\r\nfunction getType (fn) {\r\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/)\r\n  return match && match[1]\r\n}\r\n\r\n\r\n\r\nvar util = Object.freeze({\r\n\tdefineReactive: defineReactive$$1,\r\n\t_toString: _toString,\r\n\ttoNumber: toNumber,\r\n\tmakeMap: makeMap,\r\n\tisBuiltInTag: isBuiltInTag,\r\n\tremove: remove$1,\r\n\thasOwn: hasOwn,\r\n\tisPrimitive: isPrimitive,\r\n\tcached: cached,\r\n\tcamelize: camelize,\r\n\tcapitalize: capitalize,\r\n\thyphenate: hyphenate,\r\n\tbind: bind$1,\r\n\ttoArray: toArray,\r\n\textend: extend,\r\n\tisObject: isObject,\r\n\tisPlainObject: isPlainObject,\r\n\ttoObject: toObject,\r\n\tnoop: noop,\r\n\tno: no,\r\n\tgenStaticKeys: genStaticKeys,\r\n\tlooseEqual: looseEqual,\r\n\tlooseIndexOf: looseIndexOf,\r\n\tisReserved: isReserved,\r\n\tdef: def,\r\n\tparsePath: parsePath,\r\n\thasProto: hasProto,\r\n\tinBrowser: inBrowser,\r\n\tUA: UA,\r\n\tisIE: isIE,\r\n\tisIE9: isIE9,\r\n\tisEdge: isEdge,\r\n\tisAndroid: isAndroid,\r\n\tisIOS: isIOS,\r\n\tdevtools: devtools,\r\n\tnextTick: nextTick,\r\n\tget _Set () { return _Set; },\r\n\tmergeOptions: mergeOptions,\r\n\tresolveAsset: resolveAsset,\r\n\tget warn () { return warn; },\r\n\tget formatComponentName () { return formatComponentName; },\r\n\tvalidateProp: validateProp\r\n});\r\n\r\n/*  */\r\n\r\nfunction initUse (Vue) {\r\n  Vue.use = function (plugin) {\r\n    /* istanbul ignore if */\r\n    if (plugin.installed) {\r\n      return\r\n    }\r\n    // additional parameters\r\n    var args = toArray(arguments, 1)\r\n    args.unshift(this)\r\n    if (typeof plugin.install === 'function') {\r\n      plugin.install.apply(plugin, args)\r\n    } else {\r\n      plugin.apply(null, args)\r\n    }\r\n    plugin.installed = true\r\n    return this\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nfunction initMixin$1 (Vue) {\r\n  Vue.mixin = function (mixin) {\r\n    Vue.options = mergeOptions(Vue.options, mixin)\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nfunction initExtend (Vue) {\r\n  /**\r\n   * Each instance constructor, including Vue, has a unique\r\n   * cid. This enables us to create wrapped \"child\r\n   * constructors\" for prototypal inheritance and cache them.\r\n   */\r\n  Vue.cid = 0\r\n  var cid = 1\r\n\r\n  /**\r\n   * Class inheritance\r\n   */\r\n  Vue.extend = function (extendOptions) {\r\n    extendOptions = extendOptions || {}\r\n    var Super = this\r\n    var isFirstExtend = Super.cid === 0\r\n    if (isFirstExtend && extendOptions._Ctor) {\r\n      return extendOptions._Ctor\r\n    }\r\n    var name = extendOptions.name || Super.options.name\r\n    {\r\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\r\n        warn(\r\n          'Invalid component name: \"' + name + '\". Component names ' +\r\n          'can only contain alphanumeric characaters and the hyphen.'\r\n        )\r\n        name = null\r\n      }\r\n    }\r\n    var Sub = function VueComponent (options) {\r\n      this._init(options)\r\n    }\r\n    Sub.prototype = Object.create(Super.prototype)\r\n    Sub.prototype.constructor = Sub\r\n    Sub.cid = cid++\r\n    Sub.options = mergeOptions(\r\n      Super.options,\r\n      extendOptions\r\n    )\r\n    Sub['super'] = Super\r\n    // allow further extension\r\n    Sub.extend = Super.extend\r\n    // create asset registers, so extended classes\r\n    // can have their private assets too.\r\n    config._assetTypes.forEach(function (type) {\r\n      Sub[type] = Super[type]\r\n    })\r\n    // enable recursive self-lookup\r\n    if (name) {\r\n      Sub.options.components[name] = Sub\r\n    }\r\n    // keep a reference to the super options at extension time.\r\n    // later at instantiation we can check if Super's options have\r\n    // been updated.\r\n    Sub.superOptions = Super.options\r\n    Sub.extendOptions = extendOptions\r\n    // cache constructor\r\n    if (isFirstExtend) {\r\n      extendOptions._Ctor = Sub\r\n    }\r\n    return Sub\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nfunction initAssetRegisters (Vue) {\r\n  /**\r\n   * Create asset registration methods.\r\n   */\r\n  config._assetTypes.forEach(function (type) {\r\n    Vue[type] = function (\r\n      id,\r\n      definition\r\n    ) {\r\n      if (!definition) {\r\n        return this.options[type + 's'][id]\r\n      } else {\r\n        /* istanbul ignore if */\r\n        {\r\n          if (type === 'component' && config.isReservedTag(id)) {\r\n            warn(\r\n              'Do not use built-in or reserved HTML elements as component ' +\r\n              'id: ' + id\r\n            )\r\n          }\r\n        }\r\n        if (type === 'component' && isPlainObject(definition)) {\r\n          definition.name = definition.name || id\r\n          definition = Vue.extend(definition)\r\n        }\r\n        if (type === 'directive' && typeof definition === 'function') {\r\n          definition = { bind: definition, update: definition }\r\n        }\r\n        this.options[type + 's'][id] = definition\r\n        return definition\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nvar KeepAlive = {\r\n  name: 'keep-alive',\r\n  abstract: true,\r\n  created: function created () {\r\n    this.cache = Object.create(null)\r\n  },\r\n  render: function render () {\r\n    var vnode = getFirstComponentChild(this.$slots.default)\r\n    if (vnode && vnode.componentOptions) {\r\n      var opts = vnode.componentOptions\r\n      var key = vnode.key == null\r\n        // same constructor may get registered as different local components\r\n        // so cid alone is not enough (#3269)\r\n        ? opts.Ctor.cid + '::' + opts.tag\r\n        : vnode.key\r\n      if (this.cache[key]) {\r\n        vnode.child = this.cache[key].child\r\n      } else {\r\n        this.cache[key] = vnode\r\n      }\r\n      vnode.data.keepAlive = true\r\n    }\r\n    return vnode\r\n  },\r\n  destroyed: function destroyed () {\r\n    var this$1 = this;\r\n\r\n    for (var key in this.cache) {\r\n      var vnode = this$1.cache[key]\r\n      callHook(vnode.child, 'deactivated')\r\n      vnode.child.$destroy()\r\n    }\r\n  }\r\n}\r\n\r\nvar builtInComponents = {\r\n  KeepAlive: KeepAlive\r\n}\r\n\r\n/*  */\r\n\r\nfunction initGlobalAPI (Vue) {\r\n  // config\r\n  var configDef = {}\r\n  configDef.get = function () { return config; }\r\n  {\r\n    configDef.set = function () {\r\n      warn(\r\n        'Do not replace the Vue.config object, set individual fields instead.'\r\n      )\r\n    }\r\n  }\r\n  Object.defineProperty(Vue, 'config', configDef)\r\n  Vue.util = util\r\n  Vue.set = set\r\n  Vue.delete = del\r\n  Vue.nextTick = nextTick\r\n\r\n  Vue.options = Object.create(null)\r\n  config._assetTypes.forEach(function (type) {\r\n    Vue.options[type + 's'] = Object.create(null)\r\n  })\r\n\r\n  extend(Vue.options.components, builtInComponents)\r\n\r\n  initUse(Vue)\r\n  initMixin$1(Vue)\r\n  initExtend(Vue)\r\n  initAssetRegisters(Vue)\r\n}\r\n\r\ninitGlobalAPI(Vue$3)\r\n\r\nObject.defineProperty(Vue$3.prototype, '$isServer', {\r\n  get: function () { return config._isServer; }\r\n})\r\n\r\nVue$3.version = '2.0.1'\r\n\r\n/*  */\r\n\r\n// attributes that should be using props for binding\r\nvar mustUseProp = makeMap('value,selected,checked,muted')\r\n\r\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck')\r\n\r\nvar isBooleanAttr = makeMap(\r\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\r\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\r\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\r\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\r\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\r\n  'truespeed,typemustmatch,visible'\r\n)\r\n\r\nvar isAttr = makeMap(\r\n  'accept,accept-charset,accesskey,action,align,alt,async,autocomplete,' +\r\n  'autofocus,autoplay,autosave,bgcolor,border,buffered,challenge,charset,' +\r\n  'checked,cite,class,code,codebase,color,cols,colspan,content,http-equiv,' +\r\n  'name,contenteditable,contextmenu,controls,coords,data,datetime,default,' +\r\n  'defer,dir,dirname,disabled,download,draggable,dropzone,enctype,method,for,' +\r\n  'form,formaction,headers,<th>,height,hidden,high,href,hreflang,http-equiv,' +\r\n  'icon,id,ismap,itemprop,keytype,kind,label,lang,language,list,loop,low,' +\r\n  'manifest,max,maxlength,media,method,GET,POST,min,multiple,email,file,' +\r\n  'muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,' +\r\n  'preload,radiogroup,readonly,rel,required,reversed,rows,rowspan,sandbox,' +\r\n  'scope,scoped,seamless,selected,shape,size,type,text,password,sizes,span,' +\r\n  'spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,' +\r\n  'target,title,type,usemap,value,width,wrap'\r\n)\r\n\r\n\r\n\r\nvar xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nvar isXlink = function (name) {\r\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\r\n}\r\n\r\nvar getXlinkProp = function (name) {\r\n  return isXlink(name) ? name.slice(6, name.length) : ''\r\n}\r\n\r\nvar isFalsyAttrValue = function (val) {\r\n  return val == null || val === false\r\n}\r\n\r\n/*  */\r\n\r\nfunction genClassForVnode (vnode) {\r\n  var data = vnode.data\r\n  var parentNode = vnode\r\n  var childNode = vnode\r\n  while (childNode.child) {\r\n    childNode = childNode.child._vnode\r\n    if (childNode.data) {\r\n      data = mergeClassData(childNode.data, data)\r\n    }\r\n  }\r\n  while ((parentNode = parentNode.parent)) {\r\n    if (parentNode.data) {\r\n      data = mergeClassData(data, parentNode.data)\r\n    }\r\n  }\r\n  return genClassFromData(data)\r\n}\r\n\r\nfunction mergeClassData (child, parent) {\r\n  return {\r\n    staticClass: concat(child.staticClass, parent.staticClass),\r\n    class: child.class\r\n      ? [child.class, parent.class]\r\n      : parent.class\r\n  }\r\n}\r\n\r\nfunction genClassFromData (data) {\r\n  var dynamicClass = data.class\r\n  var staticClass = data.staticClass\r\n  if (staticClass || dynamicClass) {\r\n    return concat(staticClass, stringifyClass(dynamicClass))\r\n  }\r\n  /* istanbul ignore next */\r\n  return ''\r\n}\r\n\r\nfunction concat (a, b) {\r\n  return a ? b ? (a + ' ' + b) : a : (b || '')\r\n}\r\n\r\nfunction stringifyClass (value) {\r\n  var res = ''\r\n  if (!value) {\r\n    return res\r\n  }\r\n  if (typeof value === 'string') {\r\n    return value\r\n  }\r\n  if (Array.isArray(value)) {\r\n    var stringified\r\n    for (var i = 0, l = value.length; i < l; i++) {\r\n      if (value[i]) {\r\n        if ((stringified = stringifyClass(value[i]))) {\r\n          res += stringified + ' '\r\n        }\r\n      }\r\n    }\r\n    return res.slice(0, -1)\r\n  }\r\n  if (isObject(value)) {\r\n    for (var key in value) {\r\n      if (value[key]) { res += key + ' ' }\r\n    }\r\n    return res.slice(0, -1)\r\n  }\r\n  /* istanbul ignore next */\r\n  return res\r\n}\r\n\r\n/*  */\r\n\r\nvar namespaceMap = {\r\n  svg: 'http://www.w3.org/2000/svg',\r\n  math: 'http://www.w3.org/1998/Math/MathML'\r\n}\r\n\r\nvar isHTMLTag = makeMap(\r\n  'html,body,base,head,link,meta,style,title,' +\r\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\r\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\r\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\r\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\r\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\r\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\r\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\r\n  'output,progress,select,textarea,' +\r\n  'details,dialog,menu,menuitem,summary,' +\r\n  'content,element,shadow,template'\r\n)\r\n\r\nvar isUnaryTag = makeMap(\r\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\r\n  'link,meta,param,source,track,wbr',\r\n  true\r\n)\r\n\r\n// Elements that you can, intentionally, leave open\r\n// (and which close themselves)\r\nvar canBeLeftOpenTag = makeMap(\r\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source',\r\n  true\r\n)\r\n\r\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\r\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\r\nvar isNonPhrasingTag = makeMap(\r\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\r\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\r\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\r\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\r\n  'title,tr,track',\r\n  true\r\n)\r\n\r\n// this map is intentionally selective, only covering SVG elements that may\r\n// contain child elements.\r\nvar isSVG = makeMap(\r\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font,' +\r\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\r\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\r\n  true\r\n)\r\n\r\nvar isPreTag = function (tag) { return tag === 'pre'; }\r\n\r\nvar isReservedTag = function (tag) {\r\n  return isHTMLTag(tag) || isSVG(tag)\r\n}\r\n\r\nfunction getTagNamespace (tag) {\r\n  if (isSVG(tag)) {\r\n    return 'svg'\r\n  }\r\n  // basic support for MathML\r\n  // note it doesn't support other MathML elements being component roots\r\n  if (tag === 'math') {\r\n    return 'math'\r\n  }\r\n}\r\n\r\nvar unknownElementCache = Object.create(null)\r\nfunction isUnknownElement (tag) {\r\n  /* istanbul ignore if */\r\n  if (!inBrowser) {\r\n    return true\r\n  }\r\n  if (isReservedTag(tag)) {\r\n    return false\r\n  }\r\n  tag = tag.toLowerCase()\r\n  /* istanbul ignore if */\r\n  if (unknownElementCache[tag] != null) {\r\n    return unknownElementCache[tag]\r\n  }\r\n  var el = document.createElement(tag)\r\n  if (tag.indexOf('-') > -1) {\r\n    // http://stackoverflow.com/a/28210364/1070244\r\n    return (unknownElementCache[tag] = (\r\n      el.constructor === window.HTMLUnknownElement ||\r\n      el.constructor === window.HTMLElement\r\n    ))\r\n  } else {\r\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\n/**\r\n * Query an element selector if it's not an element already.\r\n */\r\nfunction query (el) {\r\n  if (typeof el === 'string') {\r\n    var selector = el\r\n    el = document.querySelector(el)\r\n    if (!el) {\r\n      \"development\" !== 'production' && warn(\r\n        'Cannot find element: ' + selector\r\n      )\r\n      return document.createElement('div')\r\n    }\r\n  }\r\n  return el\r\n}\r\n\r\n/*  */\r\n\r\nfunction createElement$1 (tagName) {\r\n  return document.createElement(tagName)\r\n}\r\n\r\nfunction createElementNS (namespace, tagName) {\r\n  return document.createElementNS(namespaceMap[namespace], tagName)\r\n}\r\n\r\nfunction createTextNode (text) {\r\n  return document.createTextNode(text)\r\n}\r\n\r\nfunction createComment (text) {\r\n  return document.createComment(text)\r\n}\r\n\r\nfunction insertBefore (parentNode, newNode, referenceNode) {\r\n  parentNode.insertBefore(newNode, referenceNode)\r\n}\r\n\r\nfunction removeChild (node, child) {\r\n  node.removeChild(child)\r\n}\r\n\r\nfunction appendChild (node, child) {\r\n  node.appendChild(child)\r\n}\r\n\r\nfunction parentNode (node) {\r\n  return node.parentNode\r\n}\r\n\r\nfunction nextSibling (node) {\r\n  return node.nextSibling\r\n}\r\n\r\nfunction tagName (node) {\r\n  return node.tagName\r\n}\r\n\r\nfunction setTextContent (node, text) {\r\n  node.textContent = text\r\n}\r\n\r\nfunction childNodes (node) {\r\n  return node.childNodes\r\n}\r\n\r\nfunction setAttribute (node, key, val) {\r\n  node.setAttribute(key, val)\r\n}\r\n\r\n\r\nvar nodeOps = Object.freeze({\r\n\tcreateElement: createElement$1,\r\n\tcreateElementNS: createElementNS,\r\n\tcreateTextNode: createTextNode,\r\n\tcreateComment: createComment,\r\n\tinsertBefore: insertBefore,\r\n\tremoveChild: removeChild,\r\n\tappendChild: appendChild,\r\n\tparentNode: parentNode,\r\n\tnextSibling: nextSibling,\r\n\ttagName: tagName,\r\n\tsetTextContent: setTextContent,\r\n\tchildNodes: childNodes,\r\n\tsetAttribute: setAttribute\r\n});\r\n\r\n/*  */\r\n\r\nvar ref = {\r\n  create: function create (_, vnode) {\r\n    registerRef(vnode)\r\n  },\r\n  update: function update (oldVnode, vnode) {\r\n    if (oldVnode.data.ref !== vnode.data.ref) {\r\n      registerRef(oldVnode, true)\r\n      registerRef(vnode)\r\n    }\r\n  },\r\n  destroy: function destroy (vnode) {\r\n    registerRef(vnode, true)\r\n  }\r\n}\r\n\r\nfunction registerRef (vnode, isRemoval) {\r\n  var key = vnode.data.ref\r\n  if (!key) { return }\r\n\r\n  var vm = vnode.context\r\n  var ref = vnode.child || vnode.elm\r\n  var refs = vm.$refs\r\n  if (isRemoval) {\r\n    if (Array.isArray(refs[key])) {\r\n      remove$1(refs[key], ref)\r\n    } else if (refs[key] === ref) {\r\n      refs[key] = undefined\r\n    }\r\n  } else {\r\n    if (vnode.data.refInFor) {\r\n      if (Array.isArray(refs[key])) {\r\n        refs[key].push(ref)\r\n      } else {\r\n        refs[key] = [ref]\r\n      }\r\n    } else {\r\n      refs[key] = ref\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Virtual DOM patching algorithm based on Snabbdom by\r\n * Simon Friis Vindum (@paldepind)\r\n * Licensed under the MIT License\r\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\r\n *\r\n * modified by Evan You (@yyx990803)\r\n *\r\n\r\n/*\r\n * Not type-checking this because this file is perf-critical and the cost\r\n * of making flow understand it is not worth it.\r\n */\r\n\r\nvar emptyData = {}\r\nvar emptyNode = new VNode('', emptyData, [])\r\nvar hooks$1 = ['create', 'update', 'postpatch', 'remove', 'destroy']\r\n\r\nfunction isUndef (s) {\r\n  return s == null\r\n}\r\n\r\nfunction isDef (s) {\r\n  return s != null\r\n}\r\n\r\nfunction sameVnode (vnode1, vnode2) {\r\n  return (\r\n    vnode1.key === vnode2.key &&\r\n    vnode1.tag === vnode2.tag &&\r\n    vnode1.isComment === vnode2.isComment &&\r\n    !vnode1.data === !vnode2.data\r\n  )\r\n}\r\n\r\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\r\n  var i, key\r\n  var map = {}\r\n  for (i = beginIdx; i <= endIdx; ++i) {\r\n    key = children[i].key\r\n    if (isDef(key)) { map[key] = i }\r\n  }\r\n  return map\r\n}\r\n\r\nfunction createPatchFunction (backend) {\r\n  var i, j\r\n  var cbs = {}\r\n\r\n  var modules = backend.modules;\r\n  var nodeOps = backend.nodeOps;\r\n\r\n  for (i = 0; i < hooks$1.length; ++i) {\r\n    cbs[hooks$1[i]] = []\r\n    for (j = 0; j < modules.length; ++j) {\r\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]) }\r\n    }\r\n  }\r\n\r\n  function emptyNodeAt (elm) {\r\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\r\n  }\r\n\r\n  function createRmCb (childElm, listeners) {\r\n    function remove$$1 () {\r\n      if (--remove$$1.listeners === 0) {\r\n        removeElement(childElm)\r\n      }\r\n    }\r\n    remove$$1.listeners = listeners\r\n    return remove$$1\r\n  }\r\n\r\n  function removeElement (el) {\r\n    var parent = nodeOps.parentNode(el)\r\n    nodeOps.removeChild(parent, el)\r\n  }\r\n\r\n  function createElm (vnode, insertedVnodeQueue, nested) {\r\n    var i\r\n    var data = vnode.data\r\n    vnode.isRootInsert = !nested\r\n    if (isDef(data)) {\r\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode) }\r\n      // after calling the init hook, if the vnode is a child component\r\n      // it should've created a child instance and mounted it. the child\r\n      // component also has set the placeholder vnode's elm.\r\n      // in that case we can just return the element and be done.\r\n      if (isDef(i = vnode.child)) {\r\n        initComponent(vnode, insertedVnodeQueue)\r\n        return vnode.elm\r\n      }\r\n    }\r\n    var children = vnode.children\r\n    var tag = vnode.tag\r\n    if (isDef(tag)) {\r\n      {\r\n        if (\r\n          !vnode.ns &&\r\n          !(config.ignoredElements && config.ignoredElements.indexOf(tag) > -1) &&\r\n          config.isUnknownElement(tag)\r\n        ) {\r\n          warn(\r\n            'Unknown custom element: <' + tag + '> - did you ' +\r\n            'register the component correctly? For recursive components, ' +\r\n            'make sure to provide the \"name\" option.',\r\n            vnode.context\r\n          )\r\n        }\r\n      }\r\n      vnode.elm = vnode.ns\r\n        ? nodeOps.createElementNS(vnode.ns, tag)\r\n        : nodeOps.createElement(tag)\r\n      setScope(vnode)\r\n      createChildren(vnode, children, insertedVnodeQueue)\r\n      if (isDef(data)) {\r\n        invokeCreateHooks(vnode, insertedVnodeQueue)\r\n      }\r\n    } else if (vnode.isComment) {\r\n      vnode.elm = nodeOps.createComment(vnode.text)\r\n    } else {\r\n      vnode.elm = nodeOps.createTextNode(vnode.text)\r\n    }\r\n    return vnode.elm\r\n  }\r\n\r\n  function createChildren (vnode, children, insertedVnodeQueue) {\r\n    if (Array.isArray(children)) {\r\n      for (var i = 0; i < children.length; ++i) {\r\n        nodeOps.appendChild(vnode.elm, createElm(children[i], insertedVnodeQueue, true))\r\n      }\r\n    } else if (isPrimitive(vnode.text)) {\r\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text))\r\n    }\r\n  }\r\n\r\n  function isPatchable (vnode) {\r\n    while (vnode.child) {\r\n      vnode = vnode.child._vnode\r\n    }\r\n    return isDef(vnode.tag)\r\n  }\r\n\r\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\r\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\r\n      cbs.create[i$1](emptyNode, vnode)\r\n    }\r\n    i = vnode.data.hook // Reuse variable\r\n    if (isDef(i)) {\r\n      if (i.create) { i.create(emptyNode, vnode) }\r\n      if (i.insert) { insertedVnodeQueue.push(vnode) }\r\n    }\r\n  }\r\n\r\n  function initComponent (vnode, insertedVnodeQueue) {\r\n    if (vnode.data.pendingInsert) {\r\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert)\r\n    }\r\n    vnode.elm = vnode.child.$el\r\n    if (isPatchable(vnode)) {\r\n      invokeCreateHooks(vnode, insertedVnodeQueue)\r\n      setScope(vnode)\r\n    } else {\r\n      // empty component root.\r\n      // skip all element-related modules except for ref (#3455)\r\n      registerRef(vnode)\r\n      // make sure to invoke the insert hook\r\n      insertedVnodeQueue.push(vnode)\r\n    }\r\n  }\r\n\r\n  // set scope id attribute for scoped CSS.\r\n  // this is implemented as a special case to avoid the overhead\r\n  // of going through the normal attribute patching process.\r\n  function setScope (vnode) {\r\n    var i\r\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\r\n      nodeOps.setAttribute(vnode.elm, i, '')\r\n    }\r\n    if (isDef(i = activeInstance) &&\r\n        i !== vnode.context &&\r\n        isDef(i = i.$options._scopeId)) {\r\n      nodeOps.setAttribute(vnode.elm, i, '')\r\n    }\r\n  }\r\n\r\n  function addVnodes (parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\r\n    for (; startIdx <= endIdx; ++startIdx) {\r\n      nodeOps.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before)\r\n    }\r\n  }\r\n\r\n  function invokeDestroyHook (vnode) {\r\n    var i, j\r\n    var data = vnode.data\r\n    if (isDef(data)) {\r\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode) }\r\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode) }\r\n    }\r\n    if (isDef(i = vnode.child) && !data.keepAlive) {\r\n      invokeDestroyHook(i._vnode)\r\n    }\r\n    if (isDef(i = vnode.children)) {\r\n      for (j = 0; j < vnode.children.length; ++j) {\r\n        invokeDestroyHook(vnode.children[j])\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\r\n    for (; startIdx <= endIdx; ++startIdx) {\r\n      var ch = vnodes[startIdx]\r\n      if (isDef(ch)) {\r\n        if (isDef(ch.tag)) {\r\n          removeAndInvokeRemoveHook(ch)\r\n          invokeDestroyHook(ch)\r\n        } else { // Text node\r\n          nodeOps.removeChild(parentElm, ch.elm)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeAndInvokeRemoveHook (vnode, rm) {\r\n    if (rm || isDef(vnode.data)) {\r\n      var listeners = cbs.remove.length + 1\r\n      if (!rm) {\r\n        // directly removing\r\n        rm = createRmCb(vnode.elm, listeners)\r\n      } else {\r\n        // we have a recursively passed down rm callback\r\n        // increase the listeners count\r\n        rm.listeners += listeners\r\n      }\r\n      // recursively invoke hooks on child component root node\r\n      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\r\n        removeAndInvokeRemoveHook(i, rm)\r\n      }\r\n      for (i = 0; i < cbs.remove.length; ++i) {\r\n        cbs.remove[i](vnode, rm)\r\n      }\r\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\r\n        i(vnode, rm)\r\n      } else {\r\n        rm()\r\n      }\r\n    } else {\r\n      removeElement(vnode.elm)\r\n    }\r\n  }\r\n\r\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\r\n    var oldStartIdx = 0\r\n    var newStartIdx = 0\r\n    var oldEndIdx = oldCh.length - 1\r\n    var oldStartVnode = oldCh[0]\r\n    var oldEndVnode = oldCh[oldEndIdx]\r\n    var newEndIdx = newCh.length - 1\r\n    var newStartVnode = newCh[0]\r\n    var newEndVnode = newCh[newEndIdx]\r\n    var oldKeyToIdx, idxInOld, elmToMove, before\r\n\r\n    // removeOnly is a special flag used only by <transition-group>\r\n    // to ensure removed elements stay in correct relative positions\r\n    // during leaving transitions\r\n    var canMove = !removeOnly\r\n\r\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n      if (isUndef(oldStartVnode)) {\r\n        oldStartVnode = oldCh[++oldStartIdx] // Vnode has been moved left\r\n      } else if (isUndef(oldEndVnode)) {\r\n        oldEndVnode = oldCh[--oldEndIdx]\r\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\r\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue)\r\n        oldStartVnode = oldCh[++oldStartIdx]\r\n        newStartVnode = newCh[++newStartIdx]\r\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\r\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue)\r\n        oldEndVnode = oldCh[--oldEndIdx]\r\n        newEndVnode = newCh[--newEndIdx]\r\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\r\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue)\r\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\r\n        oldStartVnode = oldCh[++oldStartIdx]\r\n        newEndVnode = newCh[--newEndIdx]\r\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\r\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue)\r\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\r\n        oldEndVnode = oldCh[--oldEndIdx]\r\n        newStartVnode = newCh[++newStartIdx]\r\n      } else {\r\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx) }\r\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null\r\n        if (isUndef(idxInOld)) { // New element\r\n          nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm)\r\n          newStartVnode = newCh[++newStartIdx]\r\n        } else {\r\n          elmToMove = oldCh[idxInOld]\r\n          /* istanbul ignore if */\r\n          if (\"development\" !== 'production' && !elmToMove) {\r\n            warn(\r\n              'It seems there are duplicate keys that is causing an update error. ' +\r\n              'Make sure each v-for item has a unique key.'\r\n            )\r\n          }\r\n          if (elmToMove.tag !== newStartVnode.tag) {\r\n            // same key but different element. treat as new element\r\n            nodeOps.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm)\r\n            newStartVnode = newCh[++newStartIdx]\r\n          } else {\r\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue)\r\n            oldCh[idxInOld] = undefined\r\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm)\r\n            newStartVnode = newCh[++newStartIdx]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (oldStartIdx > oldEndIdx) {\r\n      before = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm\r\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue)\r\n    } else if (newStartIdx > newEndIdx) {\r\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx)\r\n    }\r\n  }\r\n\r\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\r\n    if (oldVnode === vnode) {\r\n      return\r\n    }\r\n    // reuse element for static trees.\r\n    // note we only do this if the vnode is cloned -\r\n    // if the new node is not cloned it means the render functions have been\r\n    // reset by the hot-reload-api and we need to do a proper re-render.\r\n    if (vnode.isStatic &&\r\n        oldVnode.isStatic &&\r\n        vnode.key === oldVnode.key &&\r\n        vnode.isCloned) {\r\n      vnode.elm = oldVnode.elm\r\n      return\r\n    }\r\n    var i, hook\r\n    var hasData = isDef(i = vnode.data)\r\n    if (hasData && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\r\n      i(oldVnode, vnode)\r\n    }\r\n    var elm = vnode.elm = oldVnode.elm\r\n    var oldCh = oldVnode.children\r\n    var ch = vnode.children\r\n    if (hasData && isPatchable(vnode)) {\r\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode) }\r\n      if (isDef(hook) && isDef(i = hook.update)) { i(oldVnode, vnode) }\r\n    }\r\n    if (isUndef(vnode.text)) {\r\n      if (isDef(oldCh) && isDef(ch)) {\r\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly) }\r\n      } else if (isDef(ch)) {\r\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, '') }\r\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue)\r\n      } else if (isDef(oldCh)) {\r\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1)\r\n      } else if (isDef(oldVnode.text)) {\r\n        nodeOps.setTextContent(elm, '')\r\n      }\r\n    } else if (oldVnode.text !== vnode.text) {\r\n      nodeOps.setTextContent(elm, vnode.text)\r\n    }\r\n    if (hasData) {\r\n      for (i = 0; i < cbs.postpatch.length; ++i) { cbs.postpatch[i](oldVnode, vnode) }\r\n      if (isDef(hook) && isDef(i = hook.postpatch)) { i(oldVnode, vnode) }\r\n    }\r\n  }\r\n\r\n  function invokeInsertHook (vnode, queue, initial) {\r\n    // delay insert hooks for component root nodes, invoke them after the\r\n    // element is really inserted\r\n    if (initial && vnode.parent) {\r\n      vnode.parent.data.pendingInsert = queue\r\n    } else {\r\n      for (var i = 0; i < queue.length; ++i) {\r\n        queue[i].data.hook.insert(queue[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  var bailed = false\r\n  function hydrate (elm, vnode, insertedVnodeQueue) {\r\n    {\r\n      if (!assertNodeMatch(elm, vnode)) {\r\n        return false\r\n      }\r\n    }\r\n    vnode.elm = elm\r\n    var tag = vnode.tag;\r\n    var data = vnode.data;\r\n    var children = vnode.children;\r\n    if (isDef(data)) {\r\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */) }\r\n      if (isDef(i = vnode.child)) {\r\n        // child component. it should have hydrated its own tree.\r\n        initComponent(vnode, insertedVnodeQueue)\r\n        return true\r\n      }\r\n    }\r\n    if (isDef(tag)) {\r\n      if (isDef(children)) {\r\n        var childNodes = nodeOps.childNodes(elm)\r\n        // empty element, allow client to pick up and populate children\r\n        if (!childNodes.length) {\r\n          createChildren(vnode, children, insertedVnodeQueue)\r\n        } else {\r\n          var childrenMatch = true\r\n          if (childNodes.length !== children.length) {\r\n            childrenMatch = false\r\n          } else {\r\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\r\n              if (!hydrate(childNodes[i$1], children[i$1], insertedVnodeQueue)) {\r\n                childrenMatch = false\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (!childrenMatch) {\r\n            if (\"development\" !== 'production' &&\r\n                typeof console !== 'undefined' &&\r\n                !bailed) {\r\n              bailed = true\r\n              console.warn('Parent: ', elm)\r\n              console.warn('Mismatching childNodes vs. VNodes: ', childNodes, children)\r\n            }\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      if (isDef(data)) {\r\n        invokeCreateHooks(vnode, insertedVnodeQueue)\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  function assertNodeMatch (node, vnode) {\r\n    if (vnode.tag) {\r\n      return (\r\n        vnode.tag.indexOf('vue-component') === 0 ||\r\n        vnode.tag === nodeOps.tagName(node).toLowerCase()\r\n      )\r\n    } else {\r\n      return _toString(vnode.text) === node.data\r\n    }\r\n  }\r\n\r\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\r\n    var elm, parent\r\n    var isInitialPatch = false\r\n    var insertedVnodeQueue = []\r\n\r\n    if (!oldVnode) {\r\n      // empty mount, create new root element\r\n      isInitialPatch = true\r\n      createElm(vnode, insertedVnodeQueue)\r\n    } else {\r\n      var isRealElement = isDef(oldVnode.nodeType)\r\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\r\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly)\r\n      } else {\r\n        if (isRealElement) {\r\n          // mounting to a real element\r\n          // check if this is server-rendered content and if we can perform\r\n          // a successful hydration.\r\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\r\n            oldVnode.removeAttribute('server-rendered')\r\n            hydrating = true\r\n          }\r\n          if (hydrating) {\r\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\r\n              invokeInsertHook(vnode, insertedVnodeQueue, true)\r\n              return oldVnode\r\n            } else {\r\n              warn(\r\n                'The client-side rendered virtual DOM tree is not matching ' +\r\n                'server-rendered content. This is likely caused by incorrect ' +\r\n                'HTML markup, for example nesting block-level elements inside ' +\r\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\r\n                'full client-side render.'\r\n              )\r\n            }\r\n          }\r\n          // either not server-rendered, or hydration failed.\r\n          // create an empty node and replace it\r\n          oldVnode = emptyNodeAt(oldVnode)\r\n        }\r\n        elm = oldVnode.elm\r\n        parent = nodeOps.parentNode(elm)\r\n\r\n        createElm(vnode, insertedVnodeQueue)\r\n\r\n        // component root element replaced.\r\n        // update parent placeholder node element.\r\n        if (vnode.parent) {\r\n          vnode.parent.elm = vnode.elm\r\n          if (isPatchable(vnode)) {\r\n            for (var i = 0; i < cbs.create.length; ++i) {\r\n              cbs.create[i](emptyNode, vnode.parent)\r\n            }\r\n          }\r\n        }\r\n\r\n        if (parent !== null) {\r\n          nodeOps.insertBefore(parent, vnode.elm, nodeOps.nextSibling(elm))\r\n          removeVnodes(parent, [oldVnode], 0, 0)\r\n        } else if (isDef(oldVnode.tag)) {\r\n          invokeDestroyHook(oldVnode)\r\n        }\r\n      }\r\n    }\r\n\r\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch)\r\n    return vnode.elm\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar directives = {\r\n  create: function bindDirectives (oldVnode, vnode) {\r\n    var hasInsert = false\r\n    forEachDirective(oldVnode, vnode, function (def, dir) {\r\n      callHook$1(def, dir, 'bind', vnode, oldVnode)\r\n      if (def.inserted) {\r\n        hasInsert = true\r\n      }\r\n    })\r\n    if (hasInsert) {\r\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\r\n        applyDirectives(oldVnode, vnode, 'inserted')\r\n      })\r\n    }\r\n  },\r\n  update: function updateDirectives (oldVnode, vnode) {\r\n    applyDirectives(oldVnode, vnode, 'update')\r\n    // if old vnode has directives but new vnode doesn't\r\n    // we need to teardown the directives on the old one.\r\n    if (oldVnode.data.directives && !vnode.data.directives) {\r\n      applyDirectives(oldVnode, oldVnode, 'unbind')\r\n    }\r\n  },\r\n  postpatch: function postupdateDirectives (oldVnode, vnode) {\r\n    applyDirectives(oldVnode, vnode, 'componentUpdated')\r\n  },\r\n  destroy: function unbindDirectives (vnode) {\r\n    applyDirectives(vnode, vnode, 'unbind')\r\n  }\r\n}\r\n\r\nvar emptyModifiers = Object.create(null)\r\n\r\nfunction forEachDirective (\r\n  oldVnode,\r\n  vnode,\r\n  fn\r\n) {\r\n  var dirs = vnode.data.directives\r\n  if (dirs) {\r\n    for (var i = 0; i < dirs.length; i++) {\r\n      var dir = dirs[i]\r\n      var def = resolveAsset(vnode.context.$options, 'directives', dir.name, true)\r\n      if (def) {\r\n        var oldDirs = oldVnode && oldVnode.data.directives\r\n        if (oldDirs) {\r\n          dir.oldValue = oldDirs[i].value\r\n        }\r\n        if (!dir.modifiers) {\r\n          dir.modifiers = emptyModifiers\r\n        }\r\n        fn(def, dir)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction applyDirectives (\r\n  oldVnode,\r\n  vnode,\r\n  hook\r\n) {\r\n  forEachDirective(oldVnode, vnode, function (def, dir) {\r\n    callHook$1(def, dir, hook, vnode, oldVnode)\r\n  })\r\n}\r\n\r\nfunction callHook$1 (def, dir, hook, vnode, oldVnode) {\r\n  var fn = def && def[hook]\r\n  if (fn) {\r\n    fn(vnode.elm, dir, vnode, oldVnode)\r\n  }\r\n}\r\n\r\nvar baseModules = [\r\n  ref,\r\n  directives\r\n]\r\n\r\n/*  */\r\n\r\nfunction updateAttrs (oldVnode, vnode) {\r\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\r\n    return\r\n  }\r\n  var key, cur, old\r\n  var elm = vnode.elm\r\n  var oldAttrs = oldVnode.data.attrs || {}\r\n  var attrs = vnode.data.attrs || {}\r\n  // clone observed objects, as the user probably wants to mutate it\r\n  if (attrs.__ob__) {\r\n    attrs = vnode.data.attrs = extend({}, attrs)\r\n  }\r\n\r\n  for (key in attrs) {\r\n    cur = attrs[key]\r\n    old = oldAttrs[key]\r\n    if (old !== cur) {\r\n      setAttr(elm, key, cur)\r\n    }\r\n  }\r\n  for (key in oldAttrs) {\r\n    if (attrs[key] == null) {\r\n      if (isXlink(key)) {\r\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key))\r\n      } else if (!isEnumeratedAttr(key)) {\r\n        elm.removeAttribute(key)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setAttr (el, key, value) {\r\n  if (isBooleanAttr(key)) {\r\n    // set attribute for blank value\r\n    // e.g. <option disabled>Select one</option>\r\n    if (isFalsyAttrValue(value)) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, key)\r\n    }\r\n  } else if (isEnumeratedAttr(key)) {\r\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true')\r\n  } else if (isXlink(key)) {\r\n    if (isFalsyAttrValue(value)) {\r\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (isFalsyAttrValue(value)) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, value)\r\n    }\r\n  }\r\n}\r\n\r\nvar attrs = {\r\n  create: updateAttrs,\r\n  update: updateAttrs\r\n}\r\n\r\n/*  */\r\n\r\nfunction updateClass (oldVnode, vnode) {\r\n  var el = vnode.elm\r\n  var data = vnode.data\r\n  var oldData = oldVnode.data\r\n  if (!data.staticClass && !data.class &&\r\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\r\n    return\r\n  }\r\n\r\n  var cls = genClassForVnode(vnode)\r\n\r\n  // handle transition classes\r\n  var transitionClass = el._transitionClasses\r\n  if (transitionClass) {\r\n    cls = concat(cls, stringifyClass(transitionClass))\r\n  }\r\n\r\n  // set the class\r\n  if (cls !== el._prevClass) {\r\n    el.setAttribute('class', cls)\r\n    el._prevClass = cls\r\n  }\r\n}\r\n\r\nvar klass = {\r\n  create: updateClass,\r\n  update: updateClass\r\n}\r\n\r\n// skip type checking this file because we need to attach private properties\r\n// to elements\r\n\r\nfunction updateDOMListeners (oldVnode, vnode) {\r\n  if (!oldVnode.data.on && !vnode.data.on) {\r\n    return\r\n  }\r\n  var on = vnode.data.on || {}\r\n  var oldOn = oldVnode.data.on || {}\r\n  var add = vnode.elm._v_add || (vnode.elm._v_add = function (event, handler, capture) {\r\n    vnode.elm.addEventListener(event, handler, capture)\r\n  })\r\n  var remove = vnode.elm._v_remove || (vnode.elm._v_remove = function (event, handler) {\r\n    vnode.elm.removeEventListener(event, handler)\r\n  })\r\n  updateListeners(on, oldOn, add, remove)\r\n}\r\n\r\nvar events = {\r\n  create: updateDOMListeners,\r\n  update: updateDOMListeners\r\n}\r\n\r\n/*  */\r\n\r\nfunction updateDOMProps (oldVnode, vnode) {\r\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\r\n    return\r\n  }\r\n  var key, cur\r\n  var elm = vnode.elm\r\n  var oldProps = oldVnode.data.domProps || {}\r\n  var props = vnode.data.domProps || {}\r\n  // clone observed objects, as the user probably wants to mutate it\r\n  if (props.__ob__) {\r\n    props = vnode.data.domProps = extend({}, props)\r\n  }\r\n\r\n  for (key in oldProps) {\r\n    if (props[key] == null) {\r\n      elm[key] = undefined\r\n    }\r\n  }\r\n  for (key in props) {\r\n    // ignore children if the node has textContent or innerHTML,\r\n    // as these will throw away existing DOM nodes and cause removal errors\r\n    // on subsequent patches (#3360)\r\n    if ((key === 'textContent' || key === 'innerHTML') && vnode.children) {\r\n      vnode.children.length = 0\r\n    }\r\n    cur = props[key]\r\n    if (key === 'value') {\r\n      // store value as _value as well since\r\n      // non-string values will be stringified\r\n      elm._value = cur\r\n      // avoid resetting cursor position when value is the same\r\n      var strCur = cur == null ? '' : String(cur)\r\n      if (elm.value !== strCur) {\r\n        elm.value = strCur\r\n      }\r\n    } else {\r\n      elm[key] = cur\r\n    }\r\n  }\r\n}\r\n\r\nvar domProps = {\r\n  create: updateDOMProps,\r\n  update: updateDOMProps\r\n}\r\n\r\n/*  */\r\n\r\nvar prefixes = ['Webkit', 'Moz', 'ms']\r\n\r\nvar testEl\r\nvar normalize = cached(function (prop) {\r\n  testEl = testEl || document.createElement('div')\r\n  prop = camelize(prop)\r\n  if (prop !== 'filter' && (prop in testEl.style)) {\r\n    return prop\r\n  }\r\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1)\r\n  for (var i = 0; i < prefixes.length; i++) {\r\n    var prefixed = prefixes[i] + upper\r\n    if (prefixed in testEl.style) {\r\n      return prefixed\r\n    }\r\n  }\r\n})\r\n\r\nfunction updateStyle (oldVnode, vnode) {\r\n  if ((!oldVnode.data || !oldVnode.data.style) && !vnode.data.style) {\r\n    return\r\n  }\r\n  var cur, name\r\n  var el = vnode.elm\r\n  var oldStyle = oldVnode.data.style || {}\r\n  var style = vnode.data.style || {}\r\n\r\n  // handle string\r\n  if (typeof style === 'string') {\r\n    el.style.cssText = style\r\n    return\r\n  }\r\n\r\n  var needClone = style.__ob__\r\n\r\n  // handle array syntax\r\n  if (Array.isArray(style)) {\r\n    style = vnode.data.style = toObject(style)\r\n  }\r\n\r\n  // clone the style for future updates,\r\n  // in case the user mutates the style object in-place.\r\n  if (needClone) {\r\n    style = vnode.data.style = extend({}, style)\r\n  }\r\n\r\n  for (name in oldStyle) {\r\n    if (!style[name]) {\r\n      el.style[normalize(name)] = ''\r\n    }\r\n  }\r\n  for (name in style) {\r\n    cur = style[name]\r\n    if (cur !== oldStyle[name]) {\r\n      // ie9 setting to null has no effect, must use empty string\r\n      el.style[normalize(name)] = cur == null ? '' : cur\r\n    }\r\n  }\r\n}\r\n\r\nvar style = {\r\n  create: updateStyle,\r\n  update: updateStyle\r\n}\r\n\r\n/*  */\r\n\r\n/**\r\n * Add class with compatibility for SVG since classList is not supported on\r\n * SVG elements in IE\r\n */\r\nfunction addClass (el, cls) {\r\n  /* istanbul ignore else */\r\n  if (el.classList) {\r\n    if (cls.indexOf(' ') > -1) {\r\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); })\r\n    } else {\r\n      el.classList.add(cls)\r\n    }\r\n  } else {\r\n    var cur = ' ' + el.getAttribute('class') + ' '\r\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\r\n      el.setAttribute('class', (cur + cls).trim())\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Remove class with compatibility for SVG since classList is not supported on\r\n * SVG elements in IE\r\n */\r\nfunction removeClass (el, cls) {\r\n  /* istanbul ignore else */\r\n  if (el.classList) {\r\n    if (cls.indexOf(' ') > -1) {\r\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); })\r\n    } else {\r\n      el.classList.remove(cls)\r\n    }\r\n  } else {\r\n    var cur = ' ' + el.getAttribute('class') + ' '\r\n    var tar = ' ' + cls + ' '\r\n    while (cur.indexOf(tar) >= 0) {\r\n      cur = cur.replace(tar, ' ')\r\n    }\r\n    el.setAttribute('class', cur.trim())\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar hasTransition = inBrowser && !isIE9\r\nvar TRANSITION = 'transition'\r\nvar ANIMATION = 'animation'\r\n\r\n// Transition property/event sniffing\r\nvar transitionProp = 'transition'\r\nvar transitionEndEvent = 'transitionend'\r\nvar animationProp = 'animation'\r\nvar animationEndEvent = 'animationend'\r\nif (hasTransition) {\r\n  /* istanbul ignore if */\r\n  if (window.ontransitionend === undefined &&\r\n    window.onwebkittransitionend !== undefined) {\r\n    transitionProp = 'WebkitTransition'\r\n    transitionEndEvent = 'webkitTransitionEnd'\r\n  }\r\n  if (window.onanimationend === undefined &&\r\n    window.onwebkitanimationend !== undefined) {\r\n    animationProp = 'WebkitAnimation'\r\n    animationEndEvent = 'webkitAnimationEnd'\r\n  }\r\n}\r\n\r\nvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout\r\nfunction nextFrame (fn) {\r\n  raf(function () {\r\n    raf(fn)\r\n  })\r\n}\r\n\r\nfunction addTransitionClass (el, cls) {\r\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls)\r\n  addClass(el, cls)\r\n}\r\n\r\nfunction removeTransitionClass (el, cls) {\r\n  if (el._transitionClasses) {\r\n    remove$1(el._transitionClasses, cls)\r\n  }\r\n  removeClass(el, cls)\r\n}\r\n\r\nfunction whenTransitionEnds (\r\n  el,\r\n  expectedType,\r\n  cb\r\n) {\r\n  var ref = getTransitionInfo(el, expectedType);\r\n  var type = ref.type;\r\n  var timeout = ref.timeout;\r\n  var propCount = ref.propCount;\r\n  if (!type) { return cb() }\r\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent\r\n  var ended = 0\r\n  var end = function () {\r\n    el.removeEventListener(event, onEnd)\r\n    cb()\r\n  }\r\n  var onEnd = function (e) {\r\n    if (e.target === el) {\r\n      if (++ended >= propCount) {\r\n        end()\r\n      }\r\n    }\r\n  }\r\n  setTimeout(function () {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(event, onEnd)\r\n}\r\n\r\nvar transformRE = /\\b(transform|all)(,|$)/\r\n\r\nfunction getTransitionInfo (el, expectedType) {\r\n  var styles = window.getComputedStyle(el)\r\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ')\r\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ')\r\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations)\r\n  var animationDelays = styles[animationProp + 'Delay'].split(', ')\r\n  var animationDurations = styles[animationProp + 'Duration'].split(', ')\r\n  var animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  var type\r\n  var timeout = 0\r\n  var propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type = timeout > 0\r\n      ? transitionTimeout > animationTimeout\r\n        ? TRANSITION\r\n        : ANIMATION\r\n      : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  var hasTransform =\r\n    type === TRANSITION &&\r\n    transformRE.test(styles[transitionProp + 'Property'])\r\n  return {\r\n    type: type,\r\n    timeout: timeout,\r\n    propCount: propCount,\r\n    hasTransform: hasTransform\r\n  }\r\n}\r\n\r\nfunction getTimeout (delays, durations) {\r\n  return Math.max.apply(null, durations.map(function (d, i) {\r\n    return toMs(d) + toMs(delays[i])\r\n  }))\r\n}\r\n\r\nfunction toMs (s) {\r\n  return Number(s.slice(0, -1)) * 1000\r\n}\r\n\r\n/*  */\r\n\r\nfunction enter (vnode) {\r\n  var el = vnode.elm\r\n\r\n  // call leave callback now\r\n  if (el._leaveCb) {\r\n    el._leaveCb.cancelled = true\r\n    el._leaveCb()\r\n  }\r\n\r\n  var data = resolveTransition(vnode.data.transition)\r\n  if (!data) {\r\n    return\r\n  }\r\n\r\n  /* istanbul ignore if */\r\n  if (el._enterCb || el.nodeType !== 1) {\r\n    return\r\n  }\r\n\r\n  var css = data.css;\r\n  var type = data.type;\r\n  var enterClass = data.enterClass;\r\n  var enterActiveClass = data.enterActiveClass;\r\n  var appearClass = data.appearClass;\r\n  var appearActiveClass = data.appearActiveClass;\r\n  var beforeEnter = data.beforeEnter;\r\n  var enter = data.enter;\r\n  var afterEnter = data.afterEnter;\r\n  var enterCancelled = data.enterCancelled;\r\n  var beforeAppear = data.beforeAppear;\r\n  var appear = data.appear;\r\n  var afterAppear = data.afterAppear;\r\n  var appearCancelled = data.appearCancelled;\r\n\r\n  // activeInstance will always be the <transition> component managing this\r\n  // transition. One edge case to check is when the <transition> is placed\r\n  // as the root node of a child component. In that case we need to check\r\n  // <transition>'s parent for appear check.\r\n  var transitionNode = activeInstance.$vnode\r\n  var context = transitionNode && transitionNode.parent\r\n    ? transitionNode.parent.context\r\n    : activeInstance\r\n\r\n  var isAppear = !context._isMounted || !vnode.isRootInsert\r\n\r\n  if (isAppear && !appear && appear !== '') {\r\n    return\r\n  }\r\n\r\n  var startClass = isAppear ? appearClass : enterClass\r\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass\r\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter\r\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter\r\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter\r\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled\r\n\r\n  var expectsCSS = css !== false && !isIE9\r\n  var userWantsControl =\r\n    enterHook &&\r\n    // enterHook may be a bound method which exposes\r\n    // the length of original fn as _length\r\n    (enterHook._length || enterHook.length) > 1\r\n\r\n  var cb = el._enterCb = once(function () {\r\n    if (expectsCSS) {\r\n      removeTransitionClass(el, activeClass)\r\n    }\r\n    if (cb.cancelled) {\r\n      if (expectsCSS) {\r\n        removeTransitionClass(el, startClass)\r\n      }\r\n      enterCancelledHook && enterCancelledHook(el)\r\n    } else {\r\n      afterEnterHook && afterEnterHook(el)\r\n    }\r\n    el._enterCb = null\r\n  })\r\n\r\n  if (!vnode.data.show) {\r\n    // remove pending leave element on enter by injecting an insert hook\r\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\r\n      var parent = el.parentNode\r\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key]\r\n      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {\r\n        pendingNode.elm._leaveCb()\r\n      }\r\n      enterHook && enterHook(el, cb)\r\n    })\r\n  }\r\n\r\n  // start enter transition\r\n  beforeEnterHook && beforeEnterHook(el)\r\n  if (expectsCSS) {\r\n    addTransitionClass(el, startClass)\r\n    addTransitionClass(el, activeClass)\r\n    nextFrame(function () {\r\n      removeTransitionClass(el, startClass)\r\n      if (!cb.cancelled && !userWantsControl) {\r\n        whenTransitionEnds(el, type, cb)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (vnode.data.show) {\r\n    enterHook && enterHook(el, cb)\r\n  }\r\n\r\n  if (!expectsCSS && !userWantsControl) {\r\n    cb()\r\n  }\r\n}\r\n\r\nfunction leave (vnode, rm) {\r\n  var el = vnode.elm\r\n\r\n  // call enter callback now\r\n  if (el._enterCb) {\r\n    el._enterCb.cancelled = true\r\n    el._enterCb()\r\n  }\r\n\r\n  var data = resolveTransition(vnode.data.transition)\r\n  if (!data) {\r\n    return rm()\r\n  }\r\n\r\n  /* istanbul ignore if */\r\n  if (el._leaveCb || el.nodeType !== 1) {\r\n    return\r\n  }\r\n\r\n  var css = data.css;\r\n  var type = data.type;\r\n  var leaveClass = data.leaveClass;\r\n  var leaveActiveClass = data.leaveActiveClass;\r\n  var beforeLeave = data.beforeLeave;\r\n  var leave = data.leave;\r\n  var afterLeave = data.afterLeave;\r\n  var leaveCancelled = data.leaveCancelled;\r\n  var delayLeave = data.delayLeave;\r\n\r\n  var expectsCSS = css !== false && !isIE9\r\n  var userWantsControl =\r\n    leave &&\r\n    // leave hook may be a bound method which exposes\r\n    // the length of original fn as _length\r\n    (leave._length || leave.length) > 1\r\n\r\n  var cb = el._leaveCb = once(function () {\r\n    if (el.parentNode && el.parentNode._pending) {\r\n      el.parentNode._pending[vnode.key] = null\r\n    }\r\n    if (expectsCSS) {\r\n      removeTransitionClass(el, leaveActiveClass)\r\n    }\r\n    if (cb.cancelled) {\r\n      if (expectsCSS) {\r\n        removeTransitionClass(el, leaveClass)\r\n      }\r\n      leaveCancelled && leaveCancelled(el)\r\n    } else {\r\n      rm()\r\n      afterLeave && afterLeave(el)\r\n    }\r\n    el._leaveCb = null\r\n  })\r\n\r\n  if (delayLeave) {\r\n    delayLeave(performLeave)\r\n  } else {\r\n    performLeave()\r\n  }\r\n\r\n  function performLeave () {\r\n    // the delayed leave may have already been cancelled\r\n    if (cb.cancelled) {\r\n      return\r\n    }\r\n    // record leaving element\r\n    if (!vnode.data.show) {\r\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode\r\n    }\r\n    beforeLeave && beforeLeave(el)\r\n    if (expectsCSS) {\r\n      addTransitionClass(el, leaveClass)\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(function () {\r\n        removeTransitionClass(el, leaveClass)\r\n        if (!cb.cancelled && !userWantsControl) {\r\n          whenTransitionEnds(el, type, cb)\r\n        }\r\n      })\r\n    }\r\n    leave && leave(el, cb)\r\n    if (!expectsCSS && !userWantsControl) {\r\n      cb()\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveTransition (def$$1) {\r\n  if (!def$$1) {\r\n    return\r\n  }\r\n  /* istanbul ignore else */\r\n  if (typeof def$$1 === 'object') {\r\n    var res = {}\r\n    if (def$$1.css !== false) {\r\n      extend(res, autoCssTransition(def$$1.name || 'v'))\r\n    }\r\n    extend(res, def$$1)\r\n    return res\r\n  } else if (typeof def$$1 === 'string') {\r\n    return autoCssTransition(def$$1)\r\n  }\r\n}\r\n\r\nvar autoCssTransition = cached(function (name) {\r\n  return {\r\n    enterClass: (name + \"-enter\"),\r\n    leaveClass: (name + \"-leave\"),\r\n    appearClass: (name + \"-enter\"),\r\n    enterActiveClass: (name + \"-enter-active\"),\r\n    leaveActiveClass: (name + \"-leave-active\"),\r\n    appearActiveClass: (name + \"-enter-active\")\r\n  }\r\n})\r\n\r\nfunction once (fn) {\r\n  var called = false\r\n  return function () {\r\n    if (!called) {\r\n      called = true\r\n      fn()\r\n    }\r\n  }\r\n}\r\n\r\nvar transition = inBrowser ? {\r\n  create: function create (_, vnode) {\r\n    if (!vnode.data.show) {\r\n      enter(vnode)\r\n    }\r\n  },\r\n  remove: function remove (vnode, rm) {\r\n    /* istanbul ignore else */\r\n    if (!vnode.data.show) {\r\n      leave(vnode, rm)\r\n    } else {\r\n      rm()\r\n    }\r\n  }\r\n} : {}\r\n\r\nvar platformModules = [\r\n  attrs,\r\n  klass,\r\n  events,\r\n  domProps,\r\n  style,\r\n  transition\r\n]\r\n\r\n/*  */\r\n\r\n// the directive module should be applied last, after all\r\n// built-in modules have been applied.\r\nvar modules = platformModules.concat(baseModules)\r\n\r\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules })\r\n\r\n/**\r\n * Not type checking this file because flow doesn't like attaching\r\n * properties to Elements.\r\n */\r\n\r\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_\\-]*)?$/\r\n\r\n/* istanbul ignore if */\r\nif (isIE9) {\r\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\r\n  document.addEventListener('selectionchange', function () {\r\n    var el = document.activeElement\r\n    if (el && el.vmodel) {\r\n      trigger(el, 'input')\r\n    }\r\n  })\r\n}\r\n\r\nvar model = {\r\n  bind: function bind (el, binding, vnode) {\r\n    {\r\n      if (!modelableTagRE.test(vnode.tag)) {\r\n        warn(\r\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\r\n          'If you are working with contenteditable, it\\'s recommended to ' +\r\n          'wrap a library dedicated for that purpose inside a custom component.',\r\n          vnode.context\r\n        )\r\n      }\r\n    }\r\n    if (vnode.tag === 'select') {\r\n      setSelected(el, binding, vnode.context)\r\n      /* istanbul ignore if */\r\n      if (isIE || isEdge) {\r\n        var cb = function () {\r\n          setSelected(el, binding, vnode.context)\r\n        }\r\n        nextTick(cb)\r\n        setTimeout(cb, 0)\r\n      }\r\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\r\n      if (!isAndroid) {\r\n        el.addEventListener('compositionstart', onCompositionStart)\r\n        el.addEventListener('compositionend', onCompositionEnd)\r\n      }\r\n      /* istanbul ignore if */\r\n      if (isIE9) {\r\n        el.vmodel = true\r\n      }\r\n    }\r\n  },\r\n  componentUpdated: function componentUpdated (el, binding, vnode) {\r\n    if (vnode.tag === 'select') {\r\n      setSelected(el, binding, vnode.context)\r\n      // in case the options rendered by v-for have changed,\r\n      // it's possible that the value is out-of-sync with the rendered options.\r\n      // detect such cases and filter out values that no longer has a matchig\r\n      // option in the DOM.\r\n      var needReset = el.multiple\r\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\r\n        : hasNoMatchingOption(binding.value, el.options)\r\n      if (needReset) {\r\n        trigger(el, 'change')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setSelected (el, binding, vm) {\r\n  var value = binding.value\r\n  var isMultiple = el.multiple\r\n  if (isMultiple && !Array.isArray(value)) {\r\n    \"development\" !== 'production' && warn(\r\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\r\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\r\n      vm\r\n    )\r\n    return\r\n  }\r\n  var selected, option\r\n  for (var i = 0, l = el.options.length; i < l; i++) {\r\n    option = el.options[i]\r\n    if (isMultiple) {\r\n      selected = looseIndexOf(value, getValue(option)) > -1\r\n      if (option.selected !== selected) {\r\n        option.selected = selected\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) {\r\n          el.selectedIndex = i\r\n        }\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\nfunction hasNoMatchingOption (value, options) {\r\n  for (var i = 0, l = options.length; i < l; i++) {\r\n    if (looseEqual(getValue(options[i]), value)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getValue (option) {\r\n  return '_value' in option\r\n    ? option._value\r\n    : option.value\r\n}\r\n\r\nfunction onCompositionStart (e) {\r\n  e.target.composing = true\r\n}\r\n\r\nfunction onCompositionEnd (e) {\r\n  e.target.composing = false\r\n  trigger(e.target, 'input')\r\n}\r\n\r\nfunction trigger (el, type) {\r\n  var e = document.createEvent('HTMLEvents')\r\n  e.initEvent(type, true, true)\r\n  el.dispatchEvent(e)\r\n}\r\n\r\n/*  */\r\n\r\n// recursively search for possible transition defined inside the component root\r\nfunction locateNode (vnode) {\r\n  return vnode.child && (!vnode.data || !vnode.data.transition)\r\n    ? locateNode(vnode.child._vnode)\r\n    : vnode\r\n}\r\n\r\nvar show = {\r\n  bind: function bind (el, ref, vnode) {\r\n    var value = ref.value;\r\n\r\n    vnode = locateNode(vnode)\r\n    var transition = vnode.data && vnode.data.transition\r\n    if (value && transition && !isIE9) {\r\n      enter(vnode)\r\n    }\r\n    var originalDisplay = el.style.display === 'none' ? '' : el.style.display\r\n    el.style.display = value ? originalDisplay : 'none'\r\n    el.__vOriginalDisplay = originalDisplay\r\n  },\r\n  update: function update (el, ref, vnode) {\r\n    var value = ref.value;\r\n    var oldValue = ref.oldValue;\r\n\r\n    /* istanbul ignore if */\r\n    if (value === oldValue) { return }\r\n    vnode = locateNode(vnode)\r\n    var transition = vnode.data && vnode.data.transition\r\n    if (transition && !isIE9) {\r\n      if (value) {\r\n        enter(vnode)\r\n        el.style.display = el.__vOriginalDisplay\r\n      } else {\r\n        leave(vnode, function () {\r\n          el.style.display = 'none'\r\n        })\r\n      }\r\n    } else {\r\n      el.style.display = value ? el.__vOriginalDisplay : 'none'\r\n    }\r\n  }\r\n}\r\n\r\nvar platformDirectives = {\r\n  model: model,\r\n  show: show\r\n}\r\n\r\n/*  */\r\n\r\n// Provides transition support for a single element/component.\r\n// supports transition mode (out-in / in-out)\r\n\r\nvar transitionProps = {\r\n  name: String,\r\n  appear: Boolean,\r\n  css: Boolean,\r\n  mode: String,\r\n  type: String,\r\n  enterClass: String,\r\n  leaveClass: String,\r\n  enterActiveClass: String,\r\n  leaveActiveClass: String,\r\n  appearClass: String,\r\n  appearActiveClass: String\r\n}\r\n\r\n// in case the child is also an abstract component, e.g. <keep-alive>\r\n// we want to recrusively retrieve the real component to be rendered\r\nfunction getRealChild (vnode) {\r\n  var compOptions = vnode && vnode.componentOptions\r\n  if (compOptions && compOptions.Ctor.options.abstract) {\r\n    return getRealChild(getFirstComponentChild(compOptions.children))\r\n  } else {\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction extractTransitionData (comp) {\r\n  var data = {}\r\n  var options = comp.$options\r\n  // props\r\n  for (var key in options.propsData) {\r\n    data[key] = comp[key]\r\n  }\r\n  // events.\r\n  // extract listeners and pass them directly to the transition methods\r\n  var listeners = options._parentListeners\r\n  for (var key$1 in listeners) {\r\n    data[camelize(key$1)] = listeners[key$1].fn\r\n  }\r\n  return data\r\n}\r\n\r\nfunction placeholder (h, rawChild) {\r\n  return /\\d-keep-alive$/.test(rawChild.tag)\r\n    ? h('keep-alive')\r\n    : null\r\n}\r\n\r\nfunction hasParentTransition (vnode) {\r\n  while ((vnode = vnode.parent)) {\r\n    if (vnode.data.transition) {\r\n      return true\r\n    }\r\n  }\r\n}\r\n\r\nvar Transition = {\r\n  name: 'transition',\r\n  props: transitionProps,\r\n  abstract: true,\r\n  render: function render (h) {\r\n    var this$1 = this;\r\n\r\n    var children = this.$slots.default\r\n    if (!children) {\r\n      return\r\n    }\r\n\r\n    // filter out text nodes (possible whitespaces)\r\n    children = children.filter(function (c) { return c.tag; })\r\n    /* istanbul ignore if */\r\n    if (!children.length) {\r\n      return\r\n    }\r\n\r\n    // warn multiple elements\r\n    if (\"development\" !== 'production' && children.length > 1) {\r\n      warn(\r\n        '<transition> can only be used on a single element. Use ' +\r\n        '<transition-group> for lists.',\r\n        this.$parent\r\n      )\r\n    }\r\n\r\n    var mode = this.mode\r\n\r\n    // warn invalid mode\r\n    if (\"development\" !== 'production' &&\r\n        mode && mode !== 'in-out' && mode !== 'out-in') {\r\n      warn(\r\n        'invalid <transition> mode: ' + mode,\r\n        this.$parent\r\n      )\r\n    }\r\n\r\n    var rawChild = children[0]\r\n\r\n    // if this is a component root node and the component's\r\n    // parent container node also has transition, skip.\r\n    if (hasParentTransition(this.$vnode)) {\r\n      return rawChild\r\n    }\r\n\r\n    // apply transition data to child\r\n    // use getRealChild() to ignore abstract components e.g. keep-alive\r\n    var child = getRealChild(rawChild)\r\n    /* istanbul ignore if */\r\n    if (!child) {\r\n      return rawChild\r\n    }\r\n\r\n    if (this._leaving) {\r\n      return placeholder(h, rawChild)\r\n    }\r\n\r\n    child.key = child.key == null || child.isStatic\r\n      ? (\"__v\" + (child.tag + this._uid) + \"__\")\r\n      : child.key\r\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this)\r\n    var oldRawChild = this._vnode\r\n    var oldChild = getRealChild(oldRawChild)\r\n\r\n    // mark v-show\r\n    // so that the transition module can hand over the control to the directive\r\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\r\n      child.data.show = true\r\n    }\r\n\r\n    if (oldChild && oldChild.data && oldChild.key !== child.key) {\r\n      // replace old child transition data with fresh one\r\n      // important for dynamic transitions!\r\n      var oldData = oldChild.data.transition = extend({}, data)\r\n\r\n      // handle transition mode\r\n      if (mode === 'out-in') {\r\n        // return placeholder node and queue update when leave finishes\r\n        this._leaving = true\r\n        mergeVNodeHook(oldData, 'afterLeave', function () {\r\n          this$1._leaving = false\r\n          this$1.$forceUpdate()\r\n        })\r\n        return placeholder(h, rawChild)\r\n      } else if (mode === 'in-out') {\r\n        var delayedLeave\r\n        var performLeave = function () { delayedLeave() }\r\n        mergeVNodeHook(data, 'afterEnter', performLeave)\r\n        mergeVNodeHook(data, 'enterCancelled', performLeave)\r\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\r\n          delayedLeave = leave\r\n        })\r\n      }\r\n    }\r\n\r\n    return rawChild\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\n// Provides transition support for list items.\r\n// supports move transitions using the FLIP technique.\r\n\r\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\r\n// it doesn't guarantee the relative positioning of removed elements,\r\n// we force transition-group to update its children into two passes:\r\n// in the first pass, we remove all nodes that need to be removed,\r\n// triggering their leaving transition; in the second pass, we insert/move\r\n// into the final disired state. This way in the second pass removed\r\n// nodes will remain where they should be.\r\n\r\nvar props = extend({\r\n  tag: String,\r\n  moveClass: String\r\n}, transitionProps)\r\n\r\ndelete props.mode\r\n\r\nvar TransitionGroup = {\r\n  props: props,\r\n\r\n  render: function render (h) {\r\n    var tag = this.tag || this.$vnode.data.tag || 'span'\r\n    var map = Object.create(null)\r\n    var prevChildren = this.prevChildren = this.children\r\n    var rawChildren = this.$slots.default || []\r\n    var children = this.children = []\r\n    var transitionData = extractTransitionData(this)\r\n\r\n    for (var i = 0; i < rawChildren.length; i++) {\r\n      var c = rawChildren[i]\r\n      if (c.tag) {\r\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\r\n          children.push(c)\r\n          map[c.key] = c\r\n          ;(c.data || (c.data = {})).transition = transitionData\r\n        } else {\r\n          var opts = c.componentOptions\r\n          var name = opts\r\n            ? (opts.Ctor.options.name || opts.tag)\r\n            : c.tag\r\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"))\r\n        }\r\n      }\r\n    }\r\n\r\n    if (prevChildren) {\r\n      var kept = []\r\n      var removed = []\r\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\r\n        var c$1 = prevChildren[i$1]\r\n        c$1.data.transition = transitionData\r\n        c$1.data.pos = c$1.elm.getBoundingClientRect()\r\n        if (map[c$1.key]) {\r\n          kept.push(c$1)\r\n        } else {\r\n          removed.push(c$1)\r\n        }\r\n      }\r\n      this.kept = h(tag, null, kept)\r\n      this.removed = removed\r\n    }\r\n\r\n    return h(tag, null, children)\r\n  },\r\n\r\n  beforeUpdate: function beforeUpdate () {\r\n    // force removing pass\r\n    this.__patch__(\r\n      this._vnode,\r\n      this.kept,\r\n      false, // hydrating\r\n      true // removeOnly (!important, avoids unnecessary moves)\r\n    )\r\n    this._vnode = this.kept\r\n  },\r\n\r\n  updated: function updated () {\r\n    var children = this.prevChildren\r\n    var moveClass = this.moveClass || (this.name + '-move')\r\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\r\n      return\r\n    }\r\n\r\n    // we divide the work into three loops to avoid mixing DOM reads and writes\r\n    // in each iteration - which helps prevent layout thrashing.\r\n    children.forEach(callPendingCbs)\r\n    children.forEach(recordPosition)\r\n    children.forEach(applyTranslation)\r\n\r\n    // force reflow to put everything in position\r\n    var f = document.body.offsetHeight // eslint-disable-line\r\n\r\n    children.forEach(function (c) {\r\n      if (c.data.moved) {\r\n        var el = c.elm\r\n        var s = el.style\r\n        addTransitionClass(el, moveClass)\r\n        s.transform = s.WebkitTransform = s.transitionDuration = ''\r\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener(transitionEndEvent, cb)\r\n            el._moveCb = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    hasMove: function hasMove (el, moveClass) {\r\n      /* istanbul ignore if */\r\n      if (!hasTransition) {\r\n        return false\r\n      }\r\n      if (this._hasMove != null) {\r\n        return this._hasMove\r\n      }\r\n      addTransitionClass(el, moveClass)\r\n      var info = getTransitionInfo(el)\r\n      removeTransitionClass(el, moveClass)\r\n      return (this._hasMove = info.hasTransform)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callPendingCbs (c) {\r\n  /* istanbul ignore if */\r\n  if (c.elm._moveCb) {\r\n    c.elm._moveCb()\r\n  }\r\n  /* istanbul ignore if */\r\n  if (c.elm._enterCb) {\r\n    c.elm._enterCb()\r\n  }\r\n}\r\n\r\nfunction recordPosition (c) {\r\n  c.data.newPos = c.elm.getBoundingClientRect()\r\n}\r\n\r\nfunction applyTranslation (c) {\r\n  var oldPos = c.data.pos\r\n  var newPos = c.data.newPos\r\n  var dx = oldPos.left - newPos.left\r\n  var dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    c.data.moved = true\r\n    var s = c.elm.style\r\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\"\r\n    s.transitionDuration = '0s'\r\n  }\r\n}\r\n\r\nvar platformComponents = {\r\n  Transition: Transition,\r\n  TransitionGroup: TransitionGroup\r\n}\r\n\r\n/*  */\r\n\r\n// install platform specific utils\r\nVue$3.config.isUnknownElement = isUnknownElement\r\nVue$3.config.isReservedTag = isReservedTag\r\nVue$3.config.getTagNamespace = getTagNamespace\r\nVue$3.config.mustUseProp = mustUseProp\r\n\r\n// install platform runtime directives & components\r\nextend(Vue$3.options.directives, platformDirectives)\r\nextend(Vue$3.options.components, platformComponents)\r\n\r\n// install platform patch function\r\nVue$3.prototype.__patch__ = config._isServer ? noop : patch$1\r\n\r\n// wrap mount\r\nVue$3.prototype.$mount = function (\r\n  el,\r\n  hydrating\r\n) {\r\n  el = el && !config._isServer ? query(el) : undefined\r\n  return this._mount(el, hydrating)\r\n}\r\n\r\n// devtools global hook\r\n/* istanbul ignore next */\r\nsetTimeout(function () {\r\n  if (config.devtools) {\r\n    if (devtools) {\r\n      devtools.emit('init', Vue$3)\r\n    } else if (\r\n      \"development\" !== 'production' &&\r\n      inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)\r\n    ) {\r\n      console.log(\r\n        'Download the Vue Devtools for a better development experience:\\n' +\r\n        'https://github.com/vuejs/vue-devtools'\r\n      )\r\n    }\r\n  }\r\n}, 0)\r\n\r\n/*  */\r\n\r\n// check whether current browser encodes a char inside attribute values\r\nfunction shouldDecode (content, encoded) {\r\n  var div = document.createElement('div')\r\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\"\r\n  return div.innerHTML.indexOf(encoded) > 0\r\n}\r\n\r\n// According to\r\n// https://w3c.github.io/DOM-Parsing/#dfn-serializing-an-attribute-value\r\n// when serializing innerHTML, <, >, \", & should be encoded as entities.\r\n// However, only some browsers, e.g. PhantomJS, encodes < and >.\r\n// this causes problems with the in-browser parser.\r\nvar shouldDecodeTags = inBrowser ? shouldDecode('>', '&gt;') : false\r\n\r\n// #3663\r\n// IE encodes newlines inside attribute values while other browsers don't\r\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false\r\n\r\n/*  */\r\n\r\nvar decoder = document.createElement('div')\r\n\r\nfunction decodeHTML (html) {\r\n  decoder.innerHTML = html\r\n  return decoder.textContent\r\n}\r\n\r\n/**\r\n * Not type-checking this file because it's mostly vendor code.\r\n */\r\n\r\n/*!\r\n * HTML Parser By John Resig (ejohn.org)\r\n * Modified by Juriy \"kangax\" Zaytsev\r\n * Original code by Erik Arvidsson, Mozilla Public License\r\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\r\n */\r\n\r\n// Regular Expressions for parsing tags and attributes\r\nvar singleAttrIdentifier = /([^\\s\"'<>\\/=]+)/\r\nvar singleAttrAssign = /(?:=)/\r\nvar singleAttrValues = [\r\n  // attr value double quotes\r\n  /\"([^\"]*)\"+/.source,\r\n  // attr value, single quotes\r\n  /'([^']*)'+/.source,\r\n  // attr value, no quotes\r\n  /([^\\s\"'=<>`]+)/.source\r\n]\r\nvar attribute = new RegExp(\r\n  '^\\\\s*' + singleAttrIdentifier.source +\r\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\r\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\r\n)\r\n\r\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\r\n// but for Vue templates we can enforce a simple charset\r\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*'\r\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')'\r\nvar startTagOpen = new RegExp('^<' + qnameCapture)\r\nvar startTagClose = /^\\s*(\\/?)>/\r\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>')\r\nvar doctype = /^<!DOCTYPE [^>]+>/i\r\n\r\nvar IS_REGEX_CAPTURING_BROKEN = false\r\n'x'.replace(/x(.)?/g, function (m, g) {\r\n  IS_REGEX_CAPTURING_BROKEN = g === ''\r\n})\r\n\r\n// Special Elements (can contain anything)\r\nvar isSpecialTag = makeMap('script,style', true)\r\n\r\nvar reCache = {}\r\n\r\nvar ltRE = /&lt;/g\r\nvar gtRE = /&gt;/g\r\nvar nlRE = /&#10;/g\r\nvar ampRE = /&amp;/g\r\nvar quoteRE = /&quot;/g\r\n\r\nfunction decodeAttr (value, shouldDecodeTags, shouldDecodeNewlines) {\r\n  if (shouldDecodeTags) {\r\n    value = value.replace(ltRE, '<').replace(gtRE, '>')\r\n  }\r\n  if (shouldDecodeNewlines) {\r\n    value = value.replace(nlRE, '\\n')\r\n  }\r\n  return value.replace(ampRE, '&').replace(quoteRE, '\"')\r\n}\r\n\r\nfunction parseHTML (html, options) {\r\n  var stack = []\r\n  var expectHTML = options.expectHTML\r\n  var isUnaryTag$$1 = options.isUnaryTag || no\r\n  var isFromDOM = options.isFromDOM\r\n  var index = 0\r\n  var last, lastTag\r\n  while (html) {\r\n    last = html\r\n    // Make sure we're not in a script or style element\r\n    if (!lastTag || !isSpecialTag(lastTag)) {\r\n      var textEnd = html.indexOf('<')\r\n      if (textEnd === 0) {\r\n        // Comment:\r\n        if (/^<!--/.test(html)) {\r\n          var commentEnd = html.indexOf('-->')\r\n\r\n          if (commentEnd >= 0) {\r\n            advance(commentEnd + 3)\r\n            continue\r\n          }\r\n        }\r\n\r\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\r\n        if (/^<!\\[/.test(html)) {\r\n          var conditionalEnd = html.indexOf(']>')\r\n\r\n          if (conditionalEnd >= 0) {\r\n            advance(conditionalEnd + 2)\r\n            continue\r\n          }\r\n        }\r\n\r\n        // Doctype:\r\n        var doctypeMatch = html.match(doctype)\r\n        if (doctypeMatch) {\r\n          advance(doctypeMatch[0].length)\r\n          continue\r\n        }\r\n\r\n        // End tag:\r\n        var endTagMatch = html.match(endTag)\r\n        if (endTagMatch) {\r\n          var curIndex = index\r\n          advance(endTagMatch[0].length)\r\n          parseEndTag(endTagMatch[0], endTagMatch[1], curIndex, index)\r\n          continue\r\n        }\r\n\r\n        // Start tag:\r\n        var startTagMatch = parseStartTag()\r\n        if (startTagMatch) {\r\n          handleStartTag(startTagMatch)\r\n          continue\r\n        }\r\n      }\r\n\r\n      var text = void 0\r\n      if (textEnd >= 0) {\r\n        text = html.substring(0, textEnd)\r\n        advance(textEnd)\r\n      } else {\r\n        text = html\r\n        html = ''\r\n      }\r\n\r\n      if (options.chars) {\r\n        options.chars(text)\r\n      }\r\n    } else {\r\n      var stackedTag = lastTag.toLowerCase()\r\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'))\r\n      var endTagLength = 0\r\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\r\n        endTagLength = endTag.length\r\n        if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\r\n          text = text\r\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\r\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>/g, '$1')\r\n        }\r\n        if (options.chars) {\r\n          options.chars(text)\r\n        }\r\n        return ''\r\n      })\r\n      index += html.length - rest.length\r\n      html = rest\r\n      parseEndTag('</' + stackedTag + '>', stackedTag, index - endTagLength, index)\r\n    }\r\n\r\n    if (html === last) {\r\n      throw new Error('Error parsing template:\\n\\n' + html)\r\n    }\r\n  }\r\n\r\n  // Clean up any remaining tags\r\n  parseEndTag()\r\n\r\n  function advance (n) {\r\n    index += n\r\n    html = html.substring(n)\r\n  }\r\n\r\n  function parseStartTag () {\r\n    var start = html.match(startTagOpen)\r\n    if (start) {\r\n      var match = {\r\n        tagName: start[1],\r\n        attrs: [],\r\n        start: index\r\n      }\r\n      advance(start[0].length)\r\n      var end, attr\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        advance(attr[0].length)\r\n        match.attrs.push(attr)\r\n      }\r\n      if (end) {\r\n        match.unarySlash = end[1]\r\n        advance(end[0].length)\r\n        match.end = index\r\n        return match\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleStartTag (match) {\r\n    var tagName = match.tagName\r\n    var unarySlash = match.unarySlash\r\n\r\n    if (expectHTML) {\r\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\r\n        parseEndTag('', lastTag)\r\n      }\r\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\r\n        parseEndTag('', tagName)\r\n      }\r\n    }\r\n\r\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash\r\n\r\n    var l = match.attrs.length\r\n    var attrs = new Array(l)\r\n    for (var i = 0; i < l; i++) {\r\n      var args = match.attrs[i]\r\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\r\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\r\n        if (args[3] === '') { delete args[3] }\r\n        if (args[4] === '') { delete args[4] }\r\n        if (args[5] === '') { delete args[5] }\r\n      }\r\n      var value = args[3] || args[4] || args[5] || ''\r\n      attrs[i] = {\r\n        name: args[1],\r\n        value: isFromDOM ? decodeAttr(\r\n          value,\r\n          options.shouldDecodeTags,\r\n          options.shouldDecodeNewlines\r\n        ) : value\r\n      }\r\n    }\r\n\r\n    if (!unary) {\r\n      stack.push({ tag: tagName, attrs: attrs })\r\n      lastTag = tagName\r\n      unarySlash = ''\r\n    }\r\n\r\n    if (options.start) {\r\n      options.start(tagName, attrs, unary, match.start, match.end)\r\n    }\r\n  }\r\n\r\n  function parseEndTag (tag, tagName, start, end) {\r\n    var pos\r\n    if (start == null) { start = index }\r\n    if (end == null) { end = index }\r\n\r\n    // Find the closest opened tag of the same type\r\n    if (tagName) {\r\n      var needle = tagName.toLowerCase()\r\n      for (pos = stack.length - 1; pos >= 0; pos--) {\r\n        if (stack[pos].tag.toLowerCase() === needle) {\r\n          break\r\n        }\r\n      }\r\n    } else {\r\n      // If no tag name is provided, clean shop\r\n      pos = 0\r\n    }\r\n\r\n    if (pos >= 0) {\r\n      // Close all the open elements, up the stack\r\n      for (var i = stack.length - 1; i >= pos; i--) {\r\n        if (options.end) {\r\n          options.end(stack[i].tag, start, end)\r\n        }\r\n      }\r\n\r\n      // Remove the open elements from the stack\r\n      stack.length = pos\r\n      lastTag = pos && stack[pos - 1].tag\r\n    } else if (tagName.toLowerCase() === 'br') {\r\n      if (options.start) {\r\n        options.start(tagName, [], true, start, end)\r\n      }\r\n    } else if (tagName.toLowerCase() === 'p') {\r\n      if (options.start) {\r\n        options.start(tagName, [], false, start, end)\r\n      }\r\n      if (options.end) {\r\n        options.end(tagName, start, end)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nfunction parseFilters (exp) {\r\n  var inSingle = false\r\n  var inDouble = false\r\n  var curly = 0\r\n  var square = 0\r\n  var paren = 0\r\n  var lastFilterIndex = 0\r\n  var c, prev, i, expression, filters\r\n\r\n  for (i = 0; i < exp.length; i++) {\r\n    prev = c\r\n    c = exp.charCodeAt(i)\r\n    if (inSingle) {\r\n      // check single quote\r\n      if (c === 0x27 && prev !== 0x5C) { inSingle = !inSingle }\r\n    } else if (inDouble) {\r\n      // check double quote\r\n      if (c === 0x22 && prev !== 0x5C) { inDouble = !inDouble }\r\n    } else if (\r\n      c === 0x7C && // pipe\r\n      exp.charCodeAt(i + 1) !== 0x7C &&\r\n      exp.charCodeAt(i - 1) !== 0x7C &&\r\n      !curly && !square && !paren\r\n    ) {\r\n      if (expression === undefined) {\r\n        // first filter, end of expression\r\n        lastFilterIndex = i + 1\r\n        expression = exp.slice(0, i).trim()\r\n      } else {\r\n        pushFilter()\r\n      }\r\n    } else {\r\n      switch (c) {\r\n        case 0x22: inDouble = true; break // \"\r\n        case 0x27: inSingle = true; break // '\r\n        case 0x28: paren++; break         // (\r\n        case 0x29: paren--; break         // )\r\n        case 0x5B: square++; break        // [\r\n        case 0x5D: square--; break        // ]\r\n        case 0x7B: curly++; break         // {\r\n        case 0x7D: curly--; break         // }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (expression === undefined) {\r\n    expression = exp.slice(0, i).trim()\r\n  } else if (lastFilterIndex !== 0) {\r\n    pushFilter()\r\n  }\r\n\r\n  function pushFilter () {\r\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim())\r\n    lastFilterIndex = i + 1\r\n  }\r\n\r\n  if (filters) {\r\n    for (i = 0; i < filters.length; i++) {\r\n      expression = wrapFilter(expression, filters[i])\r\n    }\r\n  }\r\n\r\n  return expression\r\n}\r\n\r\nfunction wrapFilter (exp, filter) {\r\n  var i = filter.indexOf('(')\r\n  if (i < 0) {\r\n    // _f: resolveFilter\r\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\r\n  } else {\r\n    var name = filter.slice(0, i)\r\n    var args = filter.slice(i + 1)\r\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g\r\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\n\r\nvar buildRegex = cached(function (delimiters) {\r\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&')\r\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&')\r\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\r\n})\r\n\r\nfunction parseText (\r\n  text,\r\n  delimiters\r\n) {\r\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE\r\n  if (!tagRE.test(text)) {\r\n    return\r\n  }\r\n  var tokens = []\r\n  var lastIndex = tagRE.lastIndex = 0\r\n  var match, index\r\n  while ((match = tagRE.exec(text))) {\r\n    index = match.index\r\n    // push text token\r\n    if (index > lastIndex) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n    }\r\n    // tag token\r\n    var exp = parseFilters(match[1].trim())\r\n    tokens.push((\"_s(\" + exp + \")\"))\r\n    lastIndex = index + match[0].length\r\n  }\r\n  if (lastIndex < text.length) {\r\n    tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n  }\r\n  return tokens.join('+')\r\n}\r\n\r\n/*  */\r\n\r\nfunction baseWarn (msg) {\r\n  console.error((\"[Vue parser]: \" + msg))\r\n}\r\n\r\nfunction pluckModuleFunction (\r\n  modules,\r\n  key\r\n) {\r\n  return modules\r\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\r\n    : []\r\n}\r\n\r\nfunction addProp (el, name, value) {\r\n  (el.props || (el.props = [])).push({ name: name, value: value })\r\n}\r\n\r\nfunction addAttr (el, name, value) {\r\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value })\r\n}\r\n\r\nfunction addDirective (\r\n  el,\r\n  name,\r\n  value,\r\n  arg,\r\n  modifiers\r\n) {\r\n  (el.directives || (el.directives = [])).push({ name: name, value: value, arg: arg, modifiers: modifiers })\r\n}\r\n\r\nfunction addHandler (\r\n  el,\r\n  name,\r\n  value,\r\n  modifiers,\r\n  important\r\n) {\r\n  // check capture modifier\r\n  if (modifiers && modifiers.capture) {\r\n    delete modifiers.capture\r\n    name = '!' + name // mark the event as captured\r\n  }\r\n  var events\r\n  if (modifiers && modifiers.native) {\r\n    delete modifiers.native\r\n    events = el.nativeEvents || (el.nativeEvents = {})\r\n  } else {\r\n    events = el.events || (el.events = {})\r\n  }\r\n  var newHandler = { value: value, modifiers: modifiers }\r\n  var handlers = events[name]\r\n  /* istanbul ignore if */\r\n  if (Array.isArray(handlers)) {\r\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler)\r\n  } else if (handlers) {\r\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler]\r\n  } else {\r\n    events[name] = newHandler\r\n  }\r\n}\r\n\r\nfunction getBindingAttr (\r\n  el,\r\n  name,\r\n  getStatic\r\n) {\r\n  var dynamicValue =\r\n    getAndRemoveAttr(el, ':' + name) ||\r\n    getAndRemoveAttr(el, 'v-bind:' + name)\r\n  if (dynamicValue != null) {\r\n    return dynamicValue\r\n  } else if (getStatic !== false) {\r\n    var staticValue = getAndRemoveAttr(el, name)\r\n    if (staticValue != null) {\r\n      return JSON.stringify(staticValue)\r\n    }\r\n  }\r\n}\r\n\r\nfunction getAndRemoveAttr (el, name) {\r\n  var val\r\n  if ((val = el.attrsMap[name]) != null) {\r\n    var list = el.attrsList\r\n    for (var i = 0, l = list.length; i < l; i++) {\r\n      if (list[i].name === name) {\r\n        list.splice(i, 1)\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return val\r\n}\r\n\r\n/*  */\r\n\r\nvar dirRE = /^v-|^@|^:/\r\nvar forAliasRE = /(.*)\\s+(?:in|of)\\s+(.*)/\r\nvar forIteratorRE = /\\(([^,]*),([^,]*)(?:,([^,]*))?\\)/\r\nvar bindRE = /^:|^v-bind:/\r\nvar onRE = /^@|^v-on:/\r\nvar argRE = /:(.*)$/\r\nvar modifierRE = /\\.[^\\.]+/g\r\n\r\nvar decodeHTMLCached = cached(decodeHTML)\r\n\r\n// configurable state\r\nvar warn$1\r\nvar platformGetTagNamespace\r\nvar platformMustUseProp\r\nvar platformIsPreTag\r\nvar preTransforms\r\nvar transforms\r\nvar postTransforms\r\nvar delimiters\r\n\r\n/**\r\n * Convert HTML string to AST.\r\n */\r\nfunction parse (\r\n  template,\r\n  options\r\n) {\r\n  warn$1 = options.warn || baseWarn\r\n  platformGetTagNamespace = options.getTagNamespace || no\r\n  platformMustUseProp = options.mustUseProp || no\r\n  platformIsPreTag = options.isPreTag || no\r\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode')\r\n  transforms = pluckModuleFunction(options.modules, 'transformNode')\r\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode')\r\n  delimiters = options.delimiters\r\n  var stack = []\r\n  var preserveWhitespace = options.preserveWhitespace !== false\r\n  var root\r\n  var currentParent\r\n  var inVPre = false\r\n  var inPre = false\r\n  var warned = false\r\n  parseHTML(template, {\r\n    expectHTML: options.expectHTML,\r\n    isUnaryTag: options.isUnaryTag,\r\n    isFromDOM: options.isFromDOM,\r\n    shouldDecodeTags: options.shouldDecodeTags,\r\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\r\n    start: function start (tag, attrs, unary) {\r\n      // check namespace.\r\n      // inherit parent ns if there is one\r\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag)\r\n\r\n      // handle IE svg bug\r\n      /* istanbul ignore if */\r\n      if (options.isIE && ns === 'svg') {\r\n        attrs = guardIESVGBug(attrs)\r\n      }\r\n\r\n      var element = {\r\n        type: 1,\r\n        tag: tag,\r\n        attrsList: attrs,\r\n        attrsMap: makeAttrsMap(attrs),\r\n        parent: currentParent,\r\n        children: []\r\n      }\r\n      if (ns) {\r\n        element.ns = ns\r\n      }\r\n\r\n      if (\"client\" !== 'server' && isForbiddenTag(element)) {\r\n        element.forbidden = true\r\n        \"development\" !== 'production' && warn$1(\r\n          'Templates should only be responsible for mapping the state to the ' +\r\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\r\n          \"<\" + tag + \">.\"\r\n        )\r\n      }\r\n\r\n      // apply pre-transforms\r\n      for (var i = 0; i < preTransforms.length; i++) {\r\n        preTransforms[i](element, options)\r\n      }\r\n\r\n      if (!inVPre) {\r\n        processPre(element)\r\n        if (element.pre) {\r\n          inVPre = true\r\n        }\r\n      }\r\n      if (platformIsPreTag(element.tag)) {\r\n        inPre = true\r\n      }\r\n      if (inVPre) {\r\n        processRawAttrs(element)\r\n      } else {\r\n        processFor(element)\r\n        processIf(element)\r\n        processOnce(element)\r\n        processKey(element)\r\n\r\n        // determine whether this is a plain element after\r\n        // removing structural attributes\r\n        element.plain = !element.key && !attrs.length\r\n\r\n        processRef(element)\r\n        processSlot(element)\r\n        processComponent(element)\r\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\r\n          transforms[i$1](element, options)\r\n        }\r\n        processAttrs(element)\r\n      }\r\n\r\n      function checkRootConstraints (el) {\r\n        {\r\n          if (el.tag === 'slot' || el.tag === 'template') {\r\n            warn$1(\r\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\r\n              'contain multiple nodes:\\n' + template\r\n            )\r\n          }\r\n          if (el.attrsMap.hasOwnProperty('v-for')) {\r\n            warn$1(\r\n              'Cannot use v-for on stateful component root element because ' +\r\n              'it renders multiple elements:\\n' + template\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      // tree management\r\n      if (!root) {\r\n        root = element\r\n        checkRootConstraints(root)\r\n      } else if (\"development\" !== 'production' && !stack.length && !warned) {\r\n        // allow 2 root elements with v-if and v-else\r\n        if ((root.attrsMap.hasOwnProperty('v-if') && element.attrsMap.hasOwnProperty('v-else'))) {\r\n          checkRootConstraints(element)\r\n        } else {\r\n          warned = true\r\n          warn$1(\r\n            (\"Component template should contain exactly one root element:\\n\\n\" + template)\r\n          )\r\n        }\r\n      }\r\n      if (currentParent && !element.forbidden) {\r\n        if (element.else) {\r\n          processElse(element, currentParent)\r\n        } else {\r\n          currentParent.children.push(element)\r\n          element.parent = currentParent\r\n        }\r\n      }\r\n      if (!unary) {\r\n        currentParent = element\r\n        stack.push(element)\r\n      }\r\n      // apply post-transforms\r\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\r\n        postTransforms[i$2](element, options)\r\n      }\r\n    },\r\n\r\n    end: function end () {\r\n      // remove trailing whitespace\r\n      var element = stack[stack.length - 1]\r\n      var lastNode = element.children[element.children.length - 1]\r\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ') {\r\n        element.children.pop()\r\n      }\r\n      // pop stack\r\n      stack.length -= 1\r\n      currentParent = stack[stack.length - 1]\r\n      // check pre state\r\n      if (element.pre) {\r\n        inVPre = false\r\n      }\r\n      if (platformIsPreTag(element.tag)) {\r\n        inPre = false\r\n      }\r\n    },\r\n\r\n    chars: function chars (text) {\r\n      if (!currentParent) {\r\n        if (\"development\" !== 'production' && !warned) {\r\n          warned = true\r\n          warn$1(\r\n            'Component template should contain exactly one root element:\\n\\n' + template\r\n          )\r\n        }\r\n        return\r\n      }\r\n      text = inPre || text.trim()\r\n        ? decodeHTMLCached(text)\r\n        // only preserve whitespace if its not right after a starting tag\r\n        : preserveWhitespace && currentParent.children.length ? ' ' : ''\r\n      if (text) {\r\n        var expression\r\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\r\n          currentParent.children.push({\r\n            type: 2,\r\n            expression: expression,\r\n            text: text\r\n          })\r\n        } else {\r\n          currentParent.children.push({\r\n            type: 3,\r\n            text: text\r\n          })\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return root\r\n}\r\n\r\nfunction processPre (el) {\r\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\r\n    el.pre = true\r\n  }\r\n}\r\n\r\nfunction processRawAttrs (el) {\r\n  var l = el.attrsList.length\r\n  if (l) {\r\n    var attrs = el.attrs = new Array(l)\r\n    for (var i = 0; i < l; i++) {\r\n      attrs[i] = {\r\n        name: el.attrsList[i].name,\r\n        value: JSON.stringify(el.attrsList[i].value)\r\n      }\r\n    }\r\n  } else if (!el.pre) {\r\n    // non root node in pre blocks with no attributes\r\n    el.plain = true\r\n  }\r\n}\r\n\r\nfunction processKey (el) {\r\n  var exp = getBindingAttr(el, 'key')\r\n  if (exp) {\r\n    if (\"development\" !== 'production' && el.tag === 'template') {\r\n      warn$1(\"<template> cannot be keyed. Place the key on real elements instead.\")\r\n    }\r\n    el.key = exp\r\n  }\r\n}\r\n\r\nfunction processRef (el) {\r\n  var ref = getBindingAttr(el, 'ref')\r\n  if (ref) {\r\n    el.ref = ref\r\n    el.refInFor = checkInFor(el)\r\n  }\r\n}\r\n\r\nfunction processFor (el) {\r\n  var exp\r\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\r\n    var inMatch = exp.match(forAliasRE)\r\n    if (!inMatch) {\r\n      \"development\" !== 'production' && warn$1(\r\n        (\"Invalid v-for expression: \" + exp)\r\n      )\r\n      return\r\n    }\r\n    el.for = inMatch[2].trim()\r\n    var alias = inMatch[1].trim()\r\n    var iteratorMatch = alias.match(forIteratorRE)\r\n    if (iteratorMatch) {\r\n      el.alias = iteratorMatch[1].trim()\r\n      el.iterator1 = iteratorMatch[2].trim()\r\n      if (iteratorMatch[3]) {\r\n        el.iterator2 = iteratorMatch[3].trim()\r\n      }\r\n    } else {\r\n      el.alias = alias\r\n    }\r\n  }\r\n}\r\n\r\nfunction processIf (el) {\r\n  var exp = getAndRemoveAttr(el, 'v-if')\r\n  if (exp) {\r\n    el.if = exp\r\n  }\r\n  if (getAndRemoveAttr(el, 'v-else') != null) {\r\n    el.else = true\r\n  }\r\n}\r\n\r\nfunction processElse (el, parent) {\r\n  var prev = findPrevElement(parent.children)\r\n  if (prev && prev.if) {\r\n    prev.elseBlock = el\r\n  } else {\r\n    warn$1(\r\n      (\"v-else used on element <\" + (el.tag) + \"> without corresponding v-if.\")\r\n    )\r\n  }\r\n}\r\n\r\nfunction processOnce (el) {\r\n  var once = getAndRemoveAttr(el, 'v-once')\r\n  if (once != null) {\r\n    el.once = true\r\n  }\r\n}\r\n\r\nfunction processSlot (el) {\r\n  if (el.tag === 'slot') {\r\n    el.slotName = getBindingAttr(el, 'name')\r\n  } else {\r\n    var slotTarget = getBindingAttr(el, 'slot')\r\n    if (slotTarget) {\r\n      el.slotTarget = slotTarget\r\n    }\r\n  }\r\n}\r\n\r\nfunction processComponent (el) {\r\n  var binding\r\n  if ((binding = getBindingAttr(el, 'is'))) {\r\n    el.component = binding\r\n  }\r\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\r\n    el.inlineTemplate = true\r\n  }\r\n}\r\n\r\nfunction processAttrs (el) {\r\n  var list = el.attrsList\r\n  var i, l, name, value, arg, modifiers, isProp\r\n  for (i = 0, l = list.length; i < l; i++) {\r\n    name = list[i].name\r\n    value = list[i].value\r\n    if (dirRE.test(name)) {\r\n      // mark element as dynamic\r\n      el.hasBindings = true\r\n      // modifiers\r\n      modifiers = parseModifiers(name)\r\n      if (modifiers) {\r\n        name = name.replace(modifierRE, '')\r\n      }\r\n      if (bindRE.test(name)) { // v-bind\r\n        name = name.replace(bindRE, '')\r\n        if (modifiers && modifiers.prop) {\r\n          isProp = true\r\n          name = camelize(name)\r\n          if (name === 'innerHtml') { name = 'innerHTML' }\r\n        }\r\n        if (isProp || platformMustUseProp(name)) {\r\n          addProp(el, name, value)\r\n        } else {\r\n          addAttr(el, name, value)\r\n        }\r\n      } else if (onRE.test(name)) { // v-on\r\n        name = name.replace(onRE, '')\r\n        addHandler(el, name, value, modifiers)\r\n      } else { // normal directives\r\n        name = name.replace(dirRE, '')\r\n        // parse arg\r\n        var argMatch = name.match(argRE)\r\n        if (argMatch && (arg = argMatch[1])) {\r\n          name = name.slice(0, -(arg.length + 1))\r\n        }\r\n        addDirective(el, name, value, arg, modifiers)\r\n      }\r\n    } else {\r\n      // literal attribute\r\n      {\r\n        var expression = parseText(value, delimiters)\r\n        if (expression) {\r\n          warn$1(\r\n            name + \"=\\\"\" + value + \"\\\": \" +\r\n            'Interpolation inside attributes has been deprecated. ' +\r\n            'Use v-bind or the colon shorthand instead.'\r\n          )\r\n        }\r\n      }\r\n      addAttr(el, name, JSON.stringify(value))\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkInFor (el) {\r\n  var parent = el\r\n  while (parent) {\r\n    if (parent.for !== undefined) {\r\n      return true\r\n    }\r\n    parent = parent.parent\r\n  }\r\n  return false\r\n}\r\n\r\nfunction parseModifiers (name) {\r\n  var match = name.match(modifierRE)\r\n  if (match) {\r\n    var ret = {}\r\n    match.forEach(function (m) { ret[m.slice(1)] = true })\r\n    return ret\r\n  }\r\n}\r\n\r\nfunction makeAttrsMap (attrs) {\r\n  var map = {}\r\n  for (var i = 0, l = attrs.length; i < l; i++) {\r\n    if (\"development\" !== 'production' && map[attrs[i].name]) {\r\n      warn$1('duplicate attribute: ' + attrs[i].name)\r\n    }\r\n    map[attrs[i].name] = attrs[i].value\r\n  }\r\n  return map\r\n}\r\n\r\nfunction findPrevElement (children) {\r\n  var i = children.length\r\n  while (i--) {\r\n    if (children[i].tag) { return children[i] }\r\n  }\r\n}\r\n\r\nfunction isForbiddenTag (el) {\r\n  return (\r\n    el.tag === 'style' ||\r\n    (el.tag === 'script' && (\r\n      !el.attrsMap.type ||\r\n      el.attrsMap.type === 'text/javascript'\r\n    ))\r\n  )\r\n}\r\n\r\nvar ieNSBug = /^xmlns:NS\\d+/\r\nvar ieNSPrefix = /^NS\\d+:/\r\n\r\n/* istanbul ignore next */\r\nfunction guardIESVGBug (attrs) {\r\n  var res = []\r\n  for (var i = 0; i < attrs.length; i++) {\r\n    var attr = attrs[i]\r\n    if (!ieNSBug.test(attr.name)) {\r\n      attr.name = attr.name.replace(ieNSPrefix, '')\r\n      res.push(attr)\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\n/*  */\r\n\r\nvar isStaticKey\r\nvar isPlatformReservedTag\r\n\r\nvar genStaticKeysCached = cached(genStaticKeys$1)\r\n\r\n/**\r\n * Goal of the optimizier: walk the generated template AST tree\r\n * and detect sub-trees that are purely static, i.e. parts of\r\n * the DOM that never needs to change.\r\n *\r\n * Once we detect these sub-trees, we can:\r\n *\r\n * 1. Hoist them into constants, so that we no longer need to\r\n *    create fresh nodes for them on each re-render;\r\n * 2. Completely skip them in the patching process.\r\n */\r\nfunction optimize (root, options) {\r\n  if (!root) { return }\r\n  isStaticKey = genStaticKeysCached(options.staticKeys || '')\r\n  isPlatformReservedTag = options.isReservedTag || (function () { return false; })\r\n  // first pass: mark all non-static nodes.\r\n  markStatic(root)\r\n  // second pass: mark static roots.\r\n  markStaticRoots(root, false)\r\n}\r\n\r\nfunction genStaticKeys$1 (keys) {\r\n  return makeMap(\r\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\r\n    (keys ? ',' + keys : '')\r\n  )\r\n}\r\n\r\nfunction markStatic (node) {\r\n  node.static = isStatic(node)\r\n  if (node.type === 1) {\r\n    for (var i = 0, l = node.children.length; i < l; i++) {\r\n      var child = node.children[i]\r\n      markStatic(child)\r\n      if (!child.static) {\r\n        node.static = false\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction markStaticRoots (node, isInFor) {\r\n  if (node.type === 1) {\r\n    if (node.once || node.static) {\r\n      node.staticRoot = true\r\n      node.staticInFor = isInFor\r\n      return\r\n    }\r\n    if (node.children) {\r\n      for (var i = 0, l = node.children.length; i < l; i++) {\r\n        markStaticRoots(node.children[i], !!node.for)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction isStatic (node) {\r\n  if (node.type === 2) { // expression\r\n    return false\r\n  }\r\n  if (node.type === 3) { // text\r\n    return true\r\n  }\r\n  return !!(node.pre || (\r\n    !node.hasBindings && // no dynamic bindings\r\n    !node.if && !node.for && // not v-if or v-for or v-else\r\n    !isBuiltInTag(node.tag) && // not a built-in\r\n    isPlatformReservedTag(node.tag) && // not a component\r\n    Object.keys(node).every(isStaticKey)\r\n  ))\r\n}\r\n\r\n/*  */\r\n\r\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/\r\n\r\n// keyCode aliases\r\nvar keyCodes = {\r\n  esc: 27,\r\n  tab: 9,\r\n  enter: 13,\r\n  space: 32,\r\n  up: 38,\r\n  left: 37,\r\n  right: 39,\r\n  down: 40,\r\n  'delete': [8, 46]\r\n}\r\n\r\nvar modifierCode = {\r\n  stop: '$event.stopPropagation();',\r\n  prevent: '$event.preventDefault();',\r\n  self: 'if($event.target !== $event.currentTarget)return;'\r\n}\r\n\r\nfunction genHandlers (events, native) {\r\n  var res = native ? 'nativeOn:{' : 'on:{'\r\n  for (var name in events) {\r\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(events[name])) + \",\"\r\n  }\r\n  return res.slice(0, -1) + '}'\r\n}\r\n\r\nfunction genHandler (\r\n  handler\r\n) {\r\n  if (!handler) {\r\n    return 'function(){}'\r\n  } else if (Array.isArray(handler)) {\r\n    return (\"[\" + (handler.map(genHandler).join(',')) + \"]\")\r\n  } else if (!handler.modifiers) {\r\n    return simplePathRE.test(handler.value)\r\n      ? handler.value\r\n      : (\"function($event){\" + (handler.value) + \"}\")\r\n  } else {\r\n    var code = ''\r\n    var keys = []\r\n    for (var key in handler.modifiers) {\r\n      if (modifierCode[key]) {\r\n        code += modifierCode[key]\r\n      } else {\r\n        keys.push(key)\r\n      }\r\n    }\r\n    if (keys.length) {\r\n      code = genKeyFilter(keys) + code\r\n    }\r\n    var handlerCode = simplePathRE.test(handler.value)\r\n      ? handler.value + '($event)'\r\n      : handler.value\r\n    return 'function($event){' + code + handlerCode + '}'\r\n  }\r\n}\r\n\r\nfunction genKeyFilter (keys) {\r\n  var code = keys.length === 1\r\n    ? normalizeKeyCode(keys[0])\r\n    : Array.prototype.concat.apply([], keys.map(normalizeKeyCode))\r\n  if (Array.isArray(code)) {\r\n    return (\"if(\" + (code.map(function (c) { return (\"$event.keyCode!==\" + c); }).join('&&')) + \")return;\")\r\n  } else {\r\n    return (\"if($event.keyCode!==\" + code + \")return;\")\r\n  }\r\n}\r\n\r\nfunction normalizeKeyCode (key) {\r\n  return (\r\n    parseInt(key, 10) || // number keyCode\r\n    keyCodes[key] || // built-in alias\r\n    (\"_k(\" + (JSON.stringify(key)) + \")\") // custom alias\r\n  )\r\n}\r\n\r\n/*  */\r\n\r\nfunction bind$2 (el, dir) {\r\n  el.wrapData = function (code) {\r\n    return (\"_b(\" + code + \",\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\r\n  }\r\n}\r\n\r\nvar baseDirectives = {\r\n  bind: bind$2,\r\n  cloak: noop\r\n}\r\n\r\n/*  */\r\n\r\n// configurable state\r\nvar warn$2\r\nvar transforms$1\r\nvar dataGenFns\r\nvar platformDirectives$1\r\nvar staticRenderFns\r\nvar currentOptions\r\n\r\nfunction generate (\r\n  ast,\r\n  options\r\n) {\r\n  // save previous staticRenderFns so generate calls can be nested\r\n  var prevStaticRenderFns = staticRenderFns\r\n  var currentStaticRenderFns = staticRenderFns = []\r\n  currentOptions = options\r\n  warn$2 = options.warn || baseWarn\r\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode')\r\n  dataGenFns = pluckModuleFunction(options.modules, 'genData')\r\n  platformDirectives$1 = options.directives || {}\r\n  var code = ast ? genElement(ast) : '_h(\"div\")'\r\n  staticRenderFns = prevStaticRenderFns\r\n  return {\r\n    render: (\"with(this){return \" + code + \"}\"),\r\n    staticRenderFns: currentStaticRenderFns\r\n  }\r\n}\r\n\r\nfunction genElement (el) {\r\n  if (el.staticRoot && !el.staticProcessed) {\r\n    // hoist static sub-trees out\r\n    el.staticProcessed = true\r\n    staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"))\r\n    return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\r\n  } else if (el.for && !el.forProcessed) {\r\n    return genFor(el)\r\n  } else if (el.if && !el.ifProcessed) {\r\n    return genIf(el)\r\n  } else if (el.tag === 'template' && !el.slotTarget) {\r\n    return genChildren(el) || 'void 0'\r\n  } else if (el.tag === 'slot') {\r\n    return genSlot(el)\r\n  } else {\r\n    // component or element\r\n    var code\r\n    if (el.component) {\r\n      code = genComponent(el)\r\n    } else {\r\n      var data = genData(el)\r\n      var children = el.inlineTemplate ? null : genChildren(el)\r\n      code = \"_h('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\"\r\n    }\r\n    // module transforms\r\n    for (var i = 0; i < transforms$1.length; i++) {\r\n      code = transforms$1[i](el, code)\r\n    }\r\n    return code\r\n  }\r\n}\r\n\r\nfunction genIf (el) {\r\n  var exp = el.if\r\n  el.ifProcessed = true // avoid recursion\r\n  return (\"(\" + exp + \")?\" + (genElement(el)) + \":\" + (genElse(el)))\r\n}\r\n\r\nfunction genElse (el) {\r\n  return el.elseBlock\r\n    ? genElement(el.elseBlock)\r\n    : '_e()'\r\n}\r\n\r\nfunction genFor (el) {\r\n  var exp = el.for\r\n  var alias = el.alias\r\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : ''\r\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : ''\r\n  el.forProcessed = true // avoid recursion\r\n  return \"_l((\" + exp + \"),\" +\r\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\r\n      \"return \" + (genElement(el)) +\r\n    '})'\r\n}\r\n\r\nfunction genData (el) {\r\n  if (el.plain) {\r\n    return\r\n  }\r\n\r\n  var data = '{'\r\n\r\n  // directives first.\r\n  // directives may mutate the el's other properties before they are generated.\r\n  var dirs = genDirectives(el)\r\n  if (dirs) { data += dirs + ',' }\r\n\r\n  // key\r\n  if (el.key) {\r\n    data += \"key:\" + (el.key) + \",\"\r\n  }\r\n  // ref\r\n  if (el.ref) {\r\n    data += \"ref:\" + (el.ref) + \",\"\r\n  }\r\n  if (el.refInFor) {\r\n    data += \"refInFor:true,\"\r\n  }\r\n  // record original tag name for components using \"is\" attribute\r\n  if (el.component) {\r\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\"\r\n  }\r\n  // slot target\r\n  if (el.slotTarget) {\r\n    data += \"slot:\" + (el.slotTarget) + \",\"\r\n  }\r\n  // module data generation functions\r\n  for (var i = 0; i < dataGenFns.length; i++) {\r\n    data += dataGenFns[i](el)\r\n  }\r\n  // attributes\r\n  if (el.attrs) {\r\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\"\r\n  }\r\n  // DOM props\r\n  if (el.props) {\r\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\"\r\n  }\r\n  // event handlers\r\n  if (el.events) {\r\n    data += (genHandlers(el.events)) + \",\"\r\n  }\r\n  if (el.nativeEvents) {\r\n    data += (genHandlers(el.nativeEvents, true)) + \",\"\r\n  }\r\n  // inline-template\r\n  if (el.inlineTemplate) {\r\n    var ast = el.children[0]\r\n    if (\"development\" !== 'production' && (\r\n      el.children.length > 1 || ast.type !== 1\r\n    )) {\r\n      warn$2('Inline-template components must have exactly one child element.')\r\n    }\r\n    if (ast.type === 1) {\r\n      var inlineRenderFns = generate(ast, currentOptions)\r\n      data += \"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\"\r\n    }\r\n  }\r\n  data = data.replace(/,$/, '') + '}'\r\n  // v-bind data wrap\r\n  if (el.wrapData) {\r\n    data = el.wrapData(data)\r\n  }\r\n  return data\r\n}\r\n\r\nfunction genDirectives (el) {\r\n  var dirs = el.directives\r\n  if (!dirs) { return }\r\n  var res = 'directives:['\r\n  var hasRuntime = false\r\n  var i, l, dir, needRuntime\r\n  for (i = 0, l = dirs.length; i < l; i++) {\r\n    dir = dirs[i]\r\n    needRuntime = true\r\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name]\r\n    if (gen) {\r\n      // compile-time directive that manipulates AST.\r\n      // returns true if it also needs a runtime counterpart.\r\n      needRuntime = !!gen(el, dir, warn$2)\r\n    }\r\n    if (needRuntime) {\r\n      hasRuntime = true\r\n      res += \"{name:\\\"\" + (dir.name) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\"\r\n    }\r\n  }\r\n  if (hasRuntime) {\r\n    return res.slice(0, -1) + ']'\r\n  }\r\n}\r\n\r\nfunction genChildren (el) {\r\n  if (el.children.length) {\r\n    return '[' + el.children.map(genNode).join(',') + ']'\r\n  }\r\n}\r\n\r\nfunction genNode (node) {\r\n  if (node.type === 1) {\r\n    return genElement(node)\r\n  } else {\r\n    return genText(node)\r\n  }\r\n}\r\n\r\nfunction genText (text) {\r\n  return text.type === 2\r\n    ? text.expression // no need for () because already wrapped in _s()\r\n    : JSON.stringify(text.text)\r\n}\r\n\r\nfunction genSlot (el) {\r\n  var slotName = el.slotName || '\"default\"'\r\n  var children = genChildren(el)\r\n  return children\r\n    ? (\"_t(\" + slotName + \",\" + children + \")\")\r\n    : (\"_t(\" + slotName + \")\")\r\n}\r\n\r\nfunction genComponent (el) {\r\n  var children = genChildren(el)\r\n  return (\"_h(\" + (el.component) + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\r\n}\r\n\r\nfunction genProps (props) {\r\n  var res = ''\r\n  for (var i = 0; i < props.length; i++) {\r\n    var prop = props[i]\r\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (prop.value) + \",\"\r\n  }\r\n  return res.slice(0, -1)\r\n}\r\n\r\n/*  */\r\n\r\n/**\r\n * Compile a template.\r\n */\r\nfunction compile$1 (\r\n  template,\r\n  options\r\n) {\r\n  var ast = parse(template.trim(), options)\r\n  optimize(ast, options)\r\n  var code = generate(ast, options)\r\n  return {\r\n    ast: ast,\r\n    render: code.render,\r\n    staticRenderFns: code.staticRenderFns\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\n// operators like typeof, instanceof and in are allowed\r\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\r\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n  'extends,finally,continue,debugger,function,arguments'\r\n).split(',').join('\\\\b|\\\\b') + '\\\\b')\r\n// check valid identifier for v-for\r\nvar identRE = /[A-Za-z_$][\\w$]*/\r\n// strip strings in expressions\r\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g\r\n\r\n// detect problematic expressions in a template\r\nfunction detectErrors (ast) {\r\n  var errors = []\r\n  if (ast) {\r\n    checkNode(ast, errors)\r\n  }\r\n  return errors\r\n}\r\n\r\nfunction checkNode (node, errors) {\r\n  if (node.type === 1) {\r\n    for (var name in node.attrsMap) {\r\n      if (dirRE.test(name)) {\r\n        var value = node.attrsMap[name]\r\n        if (value) {\r\n          if (name === 'v-for') {\r\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors)\r\n          } else {\r\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (node.children) {\r\n      for (var i = 0; i < node.children.length; i++) {\r\n        checkNode(node.children[i], errors)\r\n      }\r\n    }\r\n  } else if (node.type === 2) {\r\n    checkExpression(node.expression, node.text, errors)\r\n  }\r\n}\r\n\r\nfunction checkFor (node, text, errors) {\r\n  checkExpression(node.for || '', text, errors)\r\n  checkIdentifier(node.alias, 'v-for alias', text, errors)\r\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors)\r\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors)\r\n}\r\n\r\nfunction checkIdentifier (ident, type, text, errors) {\r\n  if (typeof ident === 'string' && !identRE.test(ident)) {\r\n    errors.push((\"- invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + text))\r\n  }\r\n}\r\n\r\nfunction checkExpression (exp, text, errors) {\r\n  try {\r\n    new Function((\"return \" + exp))\r\n  } catch (e) {\r\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE)\r\n    if (keywordMatch) {\r\n      errors.push(\r\n        \"- avoid using JavaScript keyword as property name: \" +\r\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + text\r\n      )\r\n    } else {\r\n      errors.push((\"- invalid expression: \" + text))\r\n    }\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nfunction transformNode (el, options) {\r\n  var warn = options.warn || baseWarn\r\n  var staticClass = getAndRemoveAttr(el, 'class')\r\n  if (\"development\" !== 'production' && staticClass) {\r\n    var expression = parseText(staticClass, options.delimiters)\r\n    if (expression) {\r\n      warn(\r\n        \"class=\\\"\" + staticClass + \"\\\": \" +\r\n        'Interpolation inside attributes has been deprecated. ' +\r\n        'Use v-bind or the colon shorthand instead.'\r\n      )\r\n    }\r\n  }\r\n  if (staticClass) {\r\n    el.staticClass = JSON.stringify(staticClass)\r\n  }\r\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */)\r\n  if (classBinding) {\r\n    el.classBinding = classBinding\r\n  }\r\n}\r\n\r\nfunction genData$1 (el) {\r\n  var data = ''\r\n  if (el.staticClass) {\r\n    data += \"staticClass:\" + (el.staticClass) + \",\"\r\n  }\r\n  if (el.classBinding) {\r\n    data += \"class:\" + (el.classBinding) + \",\"\r\n  }\r\n  return data\r\n}\r\n\r\nvar klass$1 = {\r\n  staticKeys: ['staticClass'],\r\n  transformNode: transformNode,\r\n  genData: genData$1\r\n}\r\n\r\n/*  */\r\n\r\nfunction transformNode$1 (el) {\r\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */)\r\n  if (styleBinding) {\r\n    el.styleBinding = styleBinding\r\n  }\r\n}\r\n\r\nfunction genData$2 (el) {\r\n  return el.styleBinding\r\n    ? (\"style:(\" + (el.styleBinding) + \"),\")\r\n    : ''\r\n}\r\n\r\nvar style$1 = {\r\n  transformNode: transformNode$1,\r\n  genData: genData$2\r\n}\r\n\r\nvar modules$1 = [\r\n  klass$1,\r\n  style$1\r\n]\r\n\r\n/*  */\r\n\r\nvar warn$3\r\n\r\nfunction model$1 (\r\n  el,\r\n  dir,\r\n  _warn\r\n) {\r\n  warn$3 = _warn\r\n  var value = dir.value\r\n  var modifiers = dir.modifiers\r\n  var tag = el.tag\r\n  var type = el.attrsMap.type\r\n  if (tag === 'select') {\r\n    return genSelect(el, value)\r\n  } else if (tag === 'input' && type === 'checkbox') {\r\n    genCheckboxModel(el, value)\r\n  } else if (tag === 'input' && type === 'radio') {\r\n    genRadioModel(el, value)\r\n  } else {\r\n    return genDefaultModel(el, value, modifiers)\r\n  }\r\n}\r\n\r\nfunction genCheckboxModel (el, value) {\r\n  if (\"development\" !== 'production' &&\r\n    el.attrsMap.checked != null) {\r\n    warn$3(\r\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\r\n      \"inline checked attributes will be ignored when using v-model. \" +\r\n      'Declare initial values in the component\\'s data option instead.'\r\n    )\r\n  }\r\n  var valueBinding = getBindingAttr(el, 'value') || 'null'\r\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true'\r\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false'\r\n  addProp(el, 'checked',\r\n    \"Array.isArray(\" + value + \")\" +\r\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" +\r\n      \":_q(\" + value + \",\" + trueValueBinding + \")\"\r\n  )\r\n  addHandler(el, 'change',\r\n    \"var $$a=\" + value + \",\" +\r\n        '$$el=$event.target,' +\r\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\r\n    'if(Array.isArray($$a)){' +\r\n      \"var $$v=\" + valueBinding + \",\" +\r\n          '$$i=_i($$a,$$v);' +\r\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\r\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\r\n    \"}else{\" + value + \"=$$c}\",\r\n    null, true\r\n  )\r\n}\r\n\r\nfunction genRadioModel (el, value) {\r\n  if (\"development\" !== 'production' &&\r\n    el.attrsMap.checked != null) {\r\n    warn$3(\r\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\r\n      \"inline checked attributes will be ignored when using v-model. \" +\r\n      'Declare initial values in the component\\'s data option instead.'\r\n    )\r\n  }\r\n  var valueBinding = getBindingAttr(el, 'value') || 'null'\r\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"))\r\n  addHandler(el, 'change', (value + \"=\" + valueBinding), null, true)\r\n}\r\n\r\nfunction genDefaultModel (\r\n  el,\r\n  value,\r\n  modifiers\r\n) {\r\n  {\r\n    if (el.tag === 'input' && el.attrsMap.value) {\r\n      warn$3(\r\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" value=\\\"\" + (el.attrsMap.value) + \"\\\">:\\n\" +\r\n        'inline value attributes will be ignored when using v-model. ' +\r\n        'Declare initial values in the component\\'s data option instead.'\r\n      )\r\n    }\r\n    if (el.tag === 'textarea' && el.children.length) {\r\n      warn$3(\r\n        \"<textarea v-model=\\\"\" + value + \"\\\">:\\n\" +\r\n        'inline content inside <textarea> will be ignored when using v-model. ' +\r\n        'Declare initial values in the component\\'s data option instead.'\r\n      )\r\n    }\r\n  }\r\n\r\n  var type = el.attrsMap.type\r\n  var ref = modifiers || {};\r\n  var lazy = ref.lazy;\r\n  var number = ref.number;\r\n  var trim = ref.trim;\r\n  var event = lazy || (isIE && type === 'range') ? 'change' : 'input'\r\n  var needCompositionGuard = !lazy && type !== 'range'\r\n  var isNative = el.tag === 'input' || el.tag === 'textarea'\r\n\r\n  var valueExpression = isNative\r\n    ? (\"$event.target.value\" + (trim ? '.trim()' : ''))\r\n    : \"$event\"\r\n  var code = number || type === 'number'\r\n    ? (value + \"=_n(\" + valueExpression + \")\")\r\n    : (value + \"=\" + valueExpression)\r\n  if (isNative && needCompositionGuard) {\r\n    code = \"if($event.target.composing)return;\" + code\r\n  }\r\n  // inputs with type=\"file\" are read only and setting the input's\r\n  // value will throw an error.\r\n  if (\"development\" !== 'production' &&\r\n      type === 'file') {\r\n    warn$3(\r\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\r\n      \"File inputs are read only. Use a v-on:change listener instead.\"\r\n    )\r\n  }\r\n  addProp(el, 'value', isNative ? (\"_s(\" + value + \")\") : (\"(\" + value + \")\"))\r\n  addHandler(el, event, code, null, true)\r\n  if (needCompositionGuard) {\r\n    // need runtime directive code to help with composition events\r\n    return true\r\n  }\r\n}\r\n\r\nfunction genSelect (el, value) {\r\n  {\r\n    el.children.some(checkOptionWarning)\r\n  }\r\n  var code = value + \"=Array.prototype.filter\" +\r\n    \".call($event.target.options,function(o){return o.selected})\" +\r\n    \".map(function(o){return \\\"_value\\\" in o ? o._value : o.value})\" +\r\n    (el.attrsMap.multiple == null ? '[0]' : '')\r\n  addHandler(el, 'change', code, null, true)\r\n  // need runtime to help with possible dynamically generated options\r\n  return true\r\n}\r\n\r\nfunction checkOptionWarning (option) {\r\n  if (option.type === 1 &&\r\n    option.tag === 'option' &&\r\n    option.attrsMap.selected != null) {\r\n    warn$3(\r\n      \"<select v-model=\\\"\" + (option.parent.attrsMap['v-model']) + \"\\\">:\\n\" +\r\n      'inline selected attributes on <option> will be ignored when using v-model. ' +\r\n      'Declare initial values in the component\\'s data option instead.'\r\n    )\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/*  */\r\n\r\nfunction text (el, dir) {\r\n  if (dir.value) {\r\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"))\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nfunction html (el, dir) {\r\n  if (dir.value) {\r\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"))\r\n  }\r\n}\r\n\r\nvar directives$1 = {\r\n  model: model$1,\r\n  text: text,\r\n  html: html\r\n}\r\n\r\n/*  */\r\n\r\nvar cache = Object.create(null)\r\n\r\nvar baseOptions = {\r\n  isIE: isIE,\r\n  expectHTML: true,\r\n  modules: modules$1,\r\n  staticKeys: genStaticKeys(modules$1),\r\n  directives: directives$1,\r\n  isReservedTag: isReservedTag,\r\n  isUnaryTag: isUnaryTag,\r\n  mustUseProp: mustUseProp,\r\n  getTagNamespace: getTagNamespace,\r\n  isPreTag: isPreTag\r\n}\r\n\r\nfunction compile$$1 (\r\n  template,\r\n  options\r\n) {\r\n  options = options\r\n    ? extend(extend({}, baseOptions), options)\r\n    : baseOptions\r\n  return compile$1(template, options)\r\n}\r\n\r\nfunction compileToFunctions (\r\n  template,\r\n  options,\r\n  vm\r\n) {\r\n  var _warn = (options && options.warn) || warn\r\n  // detect possible CSP restriction\r\n  /* istanbul ignore if */\r\n  {\r\n    try {\r\n      new Function('return 1')\r\n    } catch (e) {\r\n      if (e.toString().match(/unsafe-eval|CSP/)) {\r\n        _warn(\r\n          'It seems you are using the standalone build of Vue.js in an ' +\r\n          'environment with Content Security Policy that prohibits unsafe-eval. ' +\r\n          'The template compiler cannot work in this environment. Consider ' +\r\n          'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\r\n          'templates into render functions.'\r\n        )\r\n      }\r\n    }\r\n  }\r\n  var key = options && options.delimiters\r\n    ? String(options.delimiters) + template\r\n    : template\r\n  if (cache[key]) {\r\n    return cache[key]\r\n  }\r\n  var res = {}\r\n  var compiled = compile$$1(template, options)\r\n  res.render = makeFunction(compiled.render)\r\n  var l = compiled.staticRenderFns.length\r\n  res.staticRenderFns = new Array(l)\r\n  for (var i = 0; i < l; i++) {\r\n    res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i])\r\n  }\r\n  {\r\n    if (res.render === noop || res.staticRenderFns.some(function (fn) { return fn === noop; })) {\r\n      _warn(\r\n        \"failed to compile template:\\n\\n\" + template + \"\\n\\n\" +\r\n        detectErrors(compiled.ast).join('\\n') +\r\n        '\\n\\n',\r\n        vm\r\n      )\r\n    }\r\n  }\r\n  return (cache[key] = res)\r\n}\r\n\r\nfunction makeFunction (code) {\r\n  try {\r\n    return new Function(code)\r\n  } catch (e) {\r\n    return noop\r\n  }\r\n}\r\n\r\n/*  */\r\n\r\nvar idToTemplate = cached(function (id) {\r\n  var el = query(id)\r\n  return el && el.innerHTML\r\n})\r\n\r\nvar mount = Vue$3.prototype.$mount\r\nVue$3.prototype.$mount = function (\r\n  el,\r\n  hydrating\r\n) {\r\n  el = el && query(el)\r\n\r\n  /* istanbul ignore if */\r\n  if (el === document.body || el === document.documentElement) {\r\n    \"development\" !== 'production' && warn(\r\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\r\n    )\r\n    return this\r\n  }\r\n\r\n  var options = this.$options\r\n  // resolve template/el and convert to render function\r\n  if (!options.render) {\r\n    var template = options.template\r\n    var isFromDOM = false\r\n    if (template) {\r\n      if (typeof template === 'string') {\r\n        if (template.charAt(0) === '#') {\r\n          isFromDOM = true\r\n          template = idToTemplate(template)\r\n        }\r\n      } else if (template.nodeType) {\r\n        isFromDOM = true\r\n        template = template.innerHTML\r\n      } else {\r\n        {\r\n          warn('invalid template option:' + template, this)\r\n        }\r\n        return this\r\n      }\r\n    } else if (el) {\r\n      isFromDOM = true\r\n      template = getOuterHTML(el)\r\n    }\r\n    if (template) {\r\n      var ref = compileToFunctions(template, {\r\n        warn: warn,\r\n        isFromDOM: isFromDOM,\r\n        shouldDecodeTags: shouldDecodeTags,\r\n        shouldDecodeNewlines: shouldDecodeNewlines,\r\n        delimiters: options.delimiters\r\n      }, this);\r\n      var render = ref.render;\r\n      var staticRenderFns = ref.staticRenderFns;\r\n      options.render = render\r\n      options.staticRenderFns = staticRenderFns\r\n    }\r\n  }\r\n  return mount.call(this, el, hydrating)\r\n}\r\n\r\n/**\r\n * Get outerHTML of elements, taking care\r\n * of SVG elements in IE as well.\r\n */\r\nfunction getOuterHTML (el) {\r\n  if (el.outerHTML) {\r\n    return el.outerHTML\r\n  } else {\r\n    var container = document.createElement('div')\r\n    container.appendChild(el.cloneNode(true))\r\n    return container.innerHTML\r\n  }\r\n}\r\n\r\nVue$3.compile = compileToFunctions\r\n\r\nreturn Vue$3;\r\n\r\n})));","Skip to content\r\nPersonal Open source Business Explore\r\nSign upSign inPricingBlogSupport\r\nThis repository\r\nSearch\r\n Watch 110  Star 2,553  Fork 436 vuejs/vue-resource\r\n Code  Issues 136  Pull requests 6  Projects 0  Wiki  Pulse  Graphs\r\nBranch: master Find file Copy pathvue-resource/dist/vue-resource.js\r\n393211a  15 days ago\r\n@steffans steffans v1.0.3\r\n1 contributor\r\nRawBlameHistory     \r\n1524 lines (1135 sloc)  33.9 KB\r\n/*!\r\n * vue-resource v1.0.3\r\n * https://github.com/vuejs/vue-resource\r\n * Released under the MIT License.\r\n */\r\n\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global.VueResource = factory());\r\n}(this, (function () { 'use strict';\r\n\r\n/**\r\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\r\n */\r\n\r\nvar RESOLVED = 0;\r\nvar REJECTED = 1;\r\nvar PENDING = 2;\r\n\r\nfunction Promise$1(executor) {\r\n\r\n    this.state = PENDING;\r\n    this.value = undefined;\r\n    this.deferred = [];\r\n\r\n    var promise = this;\r\n\r\n    try {\r\n        executor(function (x) {\r\n            promise.resolve(x);\r\n        }, function (r) {\r\n            promise.reject(r);\r\n        });\r\n    } catch (e) {\r\n        promise.reject(e);\r\n    }\r\n}\r\n\r\nPromise$1.reject = function (r) {\r\n    return new Promise$1(function (resolve, reject) {\r\n        reject(r);\r\n    });\r\n};\r\n\r\nPromise$1.resolve = function (x) {\r\n    return new Promise$1(function (resolve, reject) {\r\n        resolve(x);\r\n    });\r\n};\r\n\r\nPromise$1.all = function all(iterable) {\r\n    return new Promise$1(function (resolve, reject) {\r\n        var count = 0,\r\n            result = [];\r\n\r\n        if (iterable.length === 0) {\r\n            resolve(result);\r\n        }\r\n\r\n        function resolver(i) {\r\n            return function (x) {\r\n                result[i] = x;\r\n                count += 1;\r\n\r\n                if (count === iterable.length) {\r\n                    resolve(result);\r\n                }\r\n            };\r\n        }\r\n\r\n        for (var i = 0; i < iterable.length; i += 1) {\r\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\r\n        }\r\n    });\r\n};\r\n\r\nPromise$1.race = function race(iterable) {\r\n    return new Promise$1(function (resolve, reject) {\r\n        for (var i = 0; i < iterable.length; i += 1) {\r\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\r\n        }\r\n    });\r\n};\r\n\r\nvar p$1 = Promise$1.prototype;\r\n\r\np$1.resolve = function resolve(x) {\r\n    var promise = this;\r\n\r\n    if (promise.state === PENDING) {\r\n        if (x === promise) {\r\n            throw new TypeError('Promise settled with itself.');\r\n        }\r\n\r\n        var called = false;\r\n\r\n        try {\r\n            var then = x && x['then'];\r\n\r\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\r\n                then.call(x, function (x) {\r\n                    if (!called) {\r\n                        promise.resolve(x);\r\n                    }\r\n                    called = true;\r\n                }, function (r) {\r\n                    if (!called) {\r\n                        promise.reject(r);\r\n                    }\r\n                    called = true;\r\n                });\r\n                return;\r\n            }\r\n        } catch (e) {\r\n            if (!called) {\r\n                promise.reject(e);\r\n            }\r\n            return;\r\n        }\r\n\r\n        promise.state = RESOLVED;\r\n        promise.value = x;\r\n        promise.notify();\r\n    }\r\n};\r\n\r\np$1.reject = function reject(reason) {\r\n    var promise = this;\r\n\r\n    if (promise.state === PENDING) {\r\n        if (reason === promise) {\r\n            throw new TypeError('Promise settled with itself.');\r\n        }\r\n\r\n        promise.state = REJECTED;\r\n        promise.value = reason;\r\n        promise.notify();\r\n    }\r\n};\r\n\r\np$1.notify = function notify() {\r\n    var promise = this;\r\n\r\n    nextTick(function () {\r\n        if (promise.state !== PENDING) {\r\n            while (promise.deferred.length) {\r\n                var deferred = promise.deferred.shift(),\r\n                    onResolved = deferred[0],\r\n                    onRejected = deferred[1],\r\n                    resolve = deferred[2],\r\n                    reject = deferred[3];\r\n\r\n                try {\r\n                    if (promise.state === RESOLVED) {\r\n                        if (typeof onResolved === 'function') {\r\n                            resolve(onResolved.call(undefined, promise.value));\r\n                        } else {\r\n                            resolve(promise.value);\r\n                        }\r\n                    } else if (promise.state === REJECTED) {\r\n                        if (typeof onRejected === 'function') {\r\n                            resolve(onRejected.call(undefined, promise.value));\r\n                        } else {\r\n                            reject(promise.value);\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\np$1.then = function then(onResolved, onRejected) {\r\n    var promise = this;\r\n\r\n    return new Promise$1(function (resolve, reject) {\r\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\r\n        promise.notify();\r\n    });\r\n};\r\n\r\np$1.catch = function (onRejected) {\r\n    return this.then(undefined, onRejected);\r\n};\r\n\r\n/**\r\n * Promise adapter.\r\n */\r\n\r\nif (typeof Promise === 'undefined') {\r\n    window.Promise = Promise$1;\r\n}\r\n\r\nfunction PromiseObj(executor, context) {\r\n\r\n    if (executor instanceof Promise) {\r\n        this.promise = executor;\r\n    } else {\r\n        this.promise = new Promise(executor.bind(context));\r\n    }\r\n\r\n    this.context = context;\r\n}\r\n\r\nPromiseObj.all = function (iterable, context) {\r\n    return new PromiseObj(Promise.all(iterable), context);\r\n};\r\n\r\nPromiseObj.resolve = function (value, context) {\r\n    return new PromiseObj(Promise.resolve(value), context);\r\n};\r\n\r\nPromiseObj.reject = function (reason, context) {\r\n    return new PromiseObj(Promise.reject(reason), context);\r\n};\r\n\r\nPromiseObj.race = function (iterable, context) {\r\n    return new PromiseObj(Promise.race(iterable), context);\r\n};\r\n\r\nvar p = PromiseObj.prototype;\r\n\r\np.bind = function (context) {\r\n    this.context = context;\r\n    return this;\r\n};\r\n\r\np.then = function (fulfilled, rejected) {\r\n\r\n    if (fulfilled && fulfilled.bind && this.context) {\r\n        fulfilled = fulfilled.bind(this.context);\r\n    }\r\n\r\n    if (rejected && rejected.bind && this.context) {\r\n        rejected = rejected.bind(this.context);\r\n    }\r\n\r\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\r\n};\r\n\r\np.catch = function (rejected) {\r\n\r\n    if (rejected && rejected.bind && this.context) {\r\n        rejected = rejected.bind(this.context);\r\n    }\r\n\r\n    return new PromiseObj(this.promise.catch(rejected), this.context);\r\n};\r\n\r\np.finally = function (callback) {\r\n\r\n    return this.then(function (value) {\r\n        callback.call(this);\r\n        return value;\r\n    }, function (reason) {\r\n        callback.call(this);\r\n        return Promise.reject(reason);\r\n    });\r\n};\r\n\r\n/**\r\n * Utility functions.\r\n */\r\n\r\nvar debug = false;var util = {};var slice = [].slice;\r\n\r\n\r\nfunction Util (Vue) {\r\n    util = Vue.util;\r\n    debug = Vue.config.debug || !Vue.config.silent;\r\n}\r\n\r\nfunction warn(msg) {\r\n    if (typeof console !== 'undefined' && debug) {\r\n        console.warn('[VueResource warn]: ' + msg);\r\n    }\r\n}\r\n\r\nfunction error(msg) {\r\n    if (typeof console !== 'undefined') {\r\n        console.error(msg);\r\n    }\r\n}\r\n\r\nfunction nextTick(cb, ctx) {\r\n    return util.nextTick(cb, ctx);\r\n}\r\n\r\nfunction trim(str) {\r\n    return str.replace(/^\\s*|\\s*$/g, '');\r\n}\r\n\r\nfunction toLower(str) {\r\n    return str ? str.toLowerCase() : '';\r\n}\r\n\r\nfunction toUpper(str) {\r\n    return str ? str.toUpperCase() : '';\r\n}\r\n\r\nvar isArray = Array.isArray;\r\n\r\nfunction isString(val) {\r\n    return typeof val === 'string';\r\n}\r\n\r\nfunction isBoolean(val) {\r\n    return val === true || val === false;\r\n}\r\n\r\nfunction isFunction(val) {\r\n    return typeof val === 'function';\r\n}\r\n\r\nfunction isObject(obj) {\r\n    return obj !== null && typeof obj === 'object';\r\n}\r\n\r\nfunction isPlainObject(obj) {\r\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n}\r\n\r\nfunction isBlob(obj) {\r\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\r\n}\r\n\r\nfunction isFormData(obj) {\r\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\r\n}\r\n\r\nfunction when(value, fulfilled, rejected) {\r\n\r\n    var promise = PromiseObj.resolve(value);\r\n\r\n    if (arguments.length < 2) {\r\n        return promise;\r\n    }\r\n\r\n    return promise.then(fulfilled, rejected);\r\n}\r\n\r\nfunction options(fn, obj, opts) {\r\n\r\n    opts = opts || {};\r\n\r\n    if (isFunction(opts)) {\r\n        opts = opts.call(obj);\r\n    }\r\n\r\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\r\n}\r\n\r\nfunction each(obj, iterator) {\r\n\r\n    var i, key;\r\n\r\n    if (obj && typeof obj.length == 'number') {\r\n        for (i = 0; i < obj.length; i++) {\r\n            iterator.call(obj[i], obj[i], i);\r\n        }\r\n    } else if (isObject(obj)) {\r\n        for (key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                iterator.call(obj[key], obj[key], key);\r\n            }\r\n        }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nvar assign = Object.assign || _assign;\r\n\r\nfunction merge(target) {\r\n\r\n    var args = slice.call(arguments, 1);\r\n\r\n    args.forEach(function (source) {\r\n        _merge(target, source, true);\r\n    });\r\n\r\n    return target;\r\n}\r\n\r\nfunction defaults(target) {\r\n\r\n    var args = slice.call(arguments, 1);\r\n\r\n    args.forEach(function (source) {\r\n\r\n        for (var key in source) {\r\n            if (target[key] === undefined) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    });\r\n\r\n    return target;\r\n}\r\n\r\nfunction _assign(target) {\r\n\r\n    var args = slice.call(arguments, 1);\r\n\r\n    args.forEach(function (source) {\r\n        _merge(target, source);\r\n    });\r\n\r\n    return target;\r\n}\r\n\r\nfunction _merge(target, source, deep) {\r\n    for (var key in source) {\r\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                target[key] = {};\r\n            }\r\n            if (isArray(source[key]) && !isArray(target[key])) {\r\n                target[key] = [];\r\n            }\r\n            _merge(target[key], source[key], deep);\r\n        } else if (source[key] !== undefined) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Root Prefix Transform.\r\n */\r\n\r\nfunction root (options, next) {\r\n\r\n    var url = next(options);\r\n\r\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\r\n        url = options.root + '/' + url;\r\n    }\r\n\r\n    return url;\r\n}\r\n\r\n/**\r\n * Query Parameter Transform.\r\n */\r\n\r\nfunction query (options, next) {\r\n\r\n    var urlParams = Object.keys(Url.options.params),\r\n        query = {},\r\n        url = next(options);\r\n\r\n    each(options.params, function (value, key) {\r\n        if (urlParams.indexOf(key) === -1) {\r\n            query[key] = value;\r\n        }\r\n    });\r\n\r\n    query = Url.params(query);\r\n\r\n    if (query) {\r\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\r\n    }\r\n\r\n    return url;\r\n}\r\n\r\n/**\r\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\r\n */\r\n\r\nfunction expand(url, params, variables) {\r\n\r\n    var tmpl = parse(url),\r\n        expanded = tmpl.expand(params);\r\n\r\n    if (variables) {\r\n        variables.push.apply(variables, tmpl.vars);\r\n    }\r\n\r\n    return expanded;\r\n}\r\n\r\nfunction parse(template) {\r\n\r\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\r\n        variables = [];\r\n\r\n    return {\r\n        vars: variables,\r\n        expand: function (context) {\r\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\r\n                if (expression) {\r\n\r\n                    var operator = null,\r\n                        values = [];\r\n\r\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\r\n                        operator = expression.charAt(0);\r\n                        expression = expression.substr(1);\r\n                    }\r\n\r\n                    expression.split(/,/g).forEach(function (variable) {\r\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\r\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\r\n                        variables.push(tmp[1]);\r\n                    });\r\n\r\n                    if (operator && operator !== '+') {\r\n\r\n                        var separator = ',';\r\n\r\n                        if (operator === '?') {\r\n                            separator = '&';\r\n                        } else if (operator !== '#') {\r\n                            separator = operator;\r\n                        }\r\n\r\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\r\n                    } else {\r\n                        return values.join(',');\r\n                    }\r\n                } else {\r\n                    return encodeReserved(literal);\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nfunction getValues(context, operator, key, modifier) {\r\n\r\n    var value = context[key],\r\n        result = [];\r\n\r\n    if (isDefined(value) && value !== '') {\r\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n            value = value.toString();\r\n\r\n            if (modifier && modifier !== '*') {\r\n                value = value.substring(0, parseInt(modifier, 10));\r\n            }\r\n\r\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\r\n        } else {\r\n            if (modifier === '*') {\r\n                if (Array.isArray(value)) {\r\n                    value.filter(isDefined).forEach(function (value) {\r\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\r\n                    });\r\n                } else {\r\n                    Object.keys(value).forEach(function (k) {\r\n                        if (isDefined(value[k])) {\r\n                            result.push(encodeValue(operator, value[k], k));\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                var tmp = [];\r\n\r\n                if (Array.isArray(value)) {\r\n                    value.filter(isDefined).forEach(function (value) {\r\n                        tmp.push(encodeValue(operator, value));\r\n                    });\r\n                } else {\r\n                    Object.keys(value).forEach(function (k) {\r\n                        if (isDefined(value[k])) {\r\n                            tmp.push(encodeURIComponent(k));\r\n                            tmp.push(encodeValue(operator, value[k].toString()));\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (isKeyOperator(operator)) {\r\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\r\n                } else if (tmp.length !== 0) {\r\n                    result.push(tmp.join(','));\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (operator === ';') {\r\n            result.push(encodeURIComponent(key));\r\n        } else if (value === '' && (operator === '&' || operator === '?')) {\r\n            result.push(encodeURIComponent(key) + '=');\r\n        } else if (value === '') {\r\n            result.push('');\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction isDefined(value) {\r\n    return value !== undefined && value !== null;\r\n}\r\n\r\nfunction isKeyOperator(operator) {\r\n    return operator === ';' || operator === '&' || operator === '?';\r\n}\r\n\r\nfunction encodeValue(operator, value, key) {\r\n\r\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\r\n\r\n    if (key) {\r\n        return encodeURIComponent(key) + '=' + value;\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction encodeReserved(str) {\r\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\r\n        if (!/%[0-9A-Fa-f]/.test(part)) {\r\n            part = encodeURI(part);\r\n        }\r\n        return part;\r\n    }).join('');\r\n}\r\n\r\n/**\r\n * URL Template (RFC 6570) Transform.\r\n */\r\n\r\nfunction template (options) {\r\n\r\n    var variables = [],\r\n        url = expand(options.url, options.params, variables);\r\n\r\n    variables.forEach(function (key) {\r\n        delete options.params[key];\r\n    });\r\n\r\n    return url;\r\n}\r\n\r\n/**\r\n * Service for URL templating.\r\n */\r\n\r\nvar ie = document.documentMode;\r\nvar el = document.createElement('a');\r\n\r\nfunction Url(url, params) {\r\n\r\n    var self = this || {},\r\n        options = url,\r\n        transform;\r\n\r\n    if (isString(url)) {\r\n        options = { url: url, params: params };\r\n    }\r\n\r\n    options = merge({}, Url.options, self.$options, options);\r\n\r\n    Url.transforms.forEach(function (handler) {\r\n        transform = factory(handler, transform, self.$vm);\r\n    });\r\n\r\n    return transform(options);\r\n}\r\n\r\n/**\r\n * Url options.\r\n */\r\n\r\nUrl.options = {\r\n    url: '',\r\n    root: null,\r\n    params: {}\r\n};\r\n\r\n/**\r\n * Url transforms.\r\n */\r\n\r\nUrl.transforms = [template, query, root];\r\n\r\n/**\r\n * Encodes a Url parameter string.\r\n *\r\n * @param {Object} obj\r\n */\r\n\r\nUrl.params = function (obj) {\r\n\r\n    var params = [],\r\n        escape = encodeURIComponent;\r\n\r\n    params.add = function (key, value) {\r\n\r\n        if (isFunction(value)) {\r\n            value = value();\r\n        }\r\n\r\n        if (value === null) {\r\n            value = '';\r\n        }\r\n\r\n        this.push(escape(key) + '=' + escape(value));\r\n    };\r\n\r\n    serialize(params, obj);\r\n\r\n    return params.join('&').replace(/%20/g, '+');\r\n};\r\n\r\n/**\r\n * Parse a URL and return its components.\r\n *\r\n * @param {String} url\r\n */\r\n\r\nUrl.parse = function (url) {\r\n\r\n    if (ie) {\r\n        el.href = url;\r\n        url = el.href;\r\n    }\r\n\r\n    el.href = url;\r\n\r\n    return {\r\n        href: el.href,\r\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\r\n        port: el.port,\r\n        host: el.host,\r\n        hostname: el.hostname,\r\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\r\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\r\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\r\n    };\r\n};\r\n\r\nfunction factory(handler, next, vm) {\r\n    return function (options) {\r\n        return handler.call(vm, options, next);\r\n    };\r\n}\r\n\r\nfunction serialize(params, obj, scope) {\r\n\r\n    var array = isArray(obj),\r\n        plain = isPlainObject(obj),\r\n        hash;\r\n\r\n    each(obj, function (value, key) {\r\n\r\n        hash = isObject(value) || isArray(value);\r\n\r\n        if (scope) {\r\n            key = scope + '[' + (plain || hash ? key : '') + ']';\r\n        }\r\n\r\n        if (!scope && array) {\r\n            params.add(value.name, value.value);\r\n        } else if (hash) {\r\n            serialize(params, value, key);\r\n        } else {\r\n            params.add(key, value);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * XDomain client (Internet Explorer).\r\n */\r\n\r\nfunction xdrClient (request) {\r\n    return new PromiseObj(function (resolve) {\r\n\r\n        var xdr = new XDomainRequest(),\r\n            handler = function (_ref) {\r\n            var type = _ref.type;\r\n\r\n\r\n            var status = 0;\r\n\r\n            if (type === 'load') {\r\n                status = 200;\r\n            } else if (type === 'error') {\r\n                status = 500;\r\n            }\r\n\r\n            resolve(request.respondWith(xdr.responseText, { status: status }));\r\n        };\r\n\r\n        request.abort = function () {\r\n            return xdr.abort();\r\n        };\r\n\r\n        xdr.open(request.method, request.getUrl());\r\n        xdr.timeout = 0;\r\n        xdr.onload = handler;\r\n        xdr.onerror = handler;\r\n        xdr.ontimeout = handler;\r\n        xdr.onprogress = function () {};\r\n        xdr.send(request.getBody());\r\n    });\r\n}\r\n\r\n/**\r\n * CORS Interceptor.\r\n */\r\n\r\nvar ORIGIN_URL = Url.parse(location.href);\r\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\r\n\r\nfunction cors (request, next) {\r\n\r\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\r\n        request.crossOrigin = true;\r\n    }\r\n\r\n    if (request.crossOrigin) {\r\n\r\n        if (!SUPPORTS_CORS) {\r\n            request.client = xdrClient;\r\n        }\r\n\r\n        delete request.emulateHTTP;\r\n    }\r\n\r\n    next();\r\n}\r\n\r\nfunction crossOrigin(request) {\r\n\r\n    var requestUrl = Url.parse(Url(request));\r\n\r\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\r\n}\r\n\r\n/**\r\n * Body Interceptor.\r\n */\r\n\r\nfunction body (request, next) {\r\n\r\n    if (isFormData(request.body)) {\r\n\r\n        request.headers.delete('Content-Type');\r\n    } else if (isObject(request.body) || isArray(request.body)) {\r\n\r\n        if (request.emulateJSON) {\r\n            request.body = Url.params(request.body);\r\n            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n        } else {\r\n            request.body = JSON.stringify(request.body);\r\n        }\r\n    }\r\n\r\n    next(function (response) {\r\n\r\n        Object.defineProperty(response, 'data', {\r\n            get: function () {\r\n                return this.body;\r\n            },\r\n            set: function (body) {\r\n                this.body = body;\r\n            }\r\n        });\r\n\r\n        return response.bodyText ? when(response.text(), function (text) {\r\n\r\n            var type = response.headers.get('Content-Type');\r\n\r\n            if (isString(type) && type.indexOf('application/json') === 0) {\r\n\r\n                try {\r\n                    response.body = JSON.parse(text);\r\n                } catch (e) {\r\n                    response.body = null;\r\n                }\r\n            } else {\r\n                response.body = text;\r\n            }\r\n\r\n            return response;\r\n        }) : response;\r\n    });\r\n}\r\n\r\n/**\r\n * JSONP client.\r\n */\r\n\r\nfunction jsonpClient (request) {\r\n    return new PromiseObj(function (resolve) {\r\n\r\n        var name = request.jsonp || 'callback',\r\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\r\n            body = null,\r\n            handler,\r\n            script;\r\n\r\n        handler = function (_ref) {\r\n            var type = _ref.type;\r\n\r\n\r\n            var status = 0;\r\n\r\n            if (type === 'load' && body !== null) {\r\n                status = 200;\r\n            } else if (type === 'error') {\r\n                status = 500;\r\n            }\r\n\r\n            resolve(request.respondWith(body, { status: status }));\r\n\r\n            delete window[callback];\r\n            document.body.removeChild(script);\r\n        };\r\n\r\n        request.params[name] = callback;\r\n\r\n        window[callback] = function (result) {\r\n            body = JSON.stringify(result);\r\n        };\r\n\r\n        script = document.createElement('script');\r\n        script.src = request.getUrl();\r\n        script.type = 'text/javascript';\r\n        script.async = true;\r\n        script.onload = handler;\r\n        script.onerror = handler;\r\n\r\n        document.body.appendChild(script);\r\n    });\r\n}\r\n\r\n/**\r\n * JSONP Interceptor.\r\n */\r\n\r\nfunction jsonp (request, next) {\r\n\r\n    if (request.method == 'JSONP') {\r\n        request.client = jsonpClient;\r\n    }\r\n\r\n    next(function (response) {\r\n\r\n        if (request.method == 'JSONP') {\r\n\r\n            return when(response.json(), function (json) {\r\n\r\n                response.body = json;\r\n\r\n                return response;\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Before Interceptor.\r\n */\r\n\r\nfunction before (request, next) {\r\n\r\n    if (isFunction(request.before)) {\r\n        request.before.call(this, request);\r\n    }\r\n\r\n    next();\r\n}\r\n\r\n/**\r\n * HTTP method override Interceptor.\r\n */\r\n\r\nfunction method (request, next) {\r\n\r\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\r\n        request.headers.set('X-HTTP-Method-Override', request.method);\r\n        request.method = 'POST';\r\n    }\r\n\r\n    next();\r\n}\r\n\r\n/**\r\n * Header Interceptor.\r\n */\r\n\r\nfunction header (request, next) {\r\n\r\n    var headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[toLower(request.method)]);\r\n\r\n    each(headers, function (value, name) {\r\n        if (!request.headers.has(name)) {\r\n            request.headers.set(name, value);\r\n        }\r\n    });\r\n\r\n    next();\r\n}\r\n\r\n/**\r\n * Timeout Interceptor.\r\n */\r\n\r\nfunction timeout (request, next) {\r\n\r\n    var timeout;\r\n\r\n    if (request.timeout) {\r\n        timeout = setTimeout(function () {\r\n            request.abort();\r\n        }, request.timeout);\r\n    }\r\n\r\n    next(function (response) {\r\n\r\n        clearTimeout(timeout);\r\n    });\r\n}\r\n\r\n/**\r\n * XMLHttp client.\r\n */\r\n\r\nfunction xhrClient (request) {\r\n    return new PromiseObj(function (resolve) {\r\n\r\n        var xhr = new XMLHttpRequest(),\r\n            handler = function (event) {\r\n\r\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\r\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\r\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\r\n            });\r\n\r\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\r\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\r\n            });\r\n\r\n            resolve(response);\r\n        };\r\n\r\n        request.abort = function () {\r\n            return xhr.abort();\r\n        };\r\n\r\n        if (request.progress) {\r\n            if (request.method === 'GET') {\r\n                xhr.addEventListener('progress', request.progress);\r\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\r\n                xhr.upload.addEventListener('progress', request.progress);\r\n            }\r\n        }\r\n\r\n        xhr.open(request.method, request.getUrl(), true);\r\n\r\n        if ('responseType' in xhr) {\r\n            xhr.responseType = 'blob';\r\n        }\r\n\r\n        if (request.credentials === true) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        request.headers.forEach(function (value, name) {\r\n            xhr.setRequestHeader(name, value);\r\n        });\r\n\r\n        xhr.timeout = 0;\r\n        xhr.onload = handler;\r\n        xhr.onerror = handler;\r\n        xhr.send(request.getBody());\r\n    });\r\n}\r\n\r\n/**\r\n * Base client.\r\n */\r\n\r\nfunction Client (context) {\r\n\r\n    var reqHandlers = [sendRequest],\r\n        resHandlers = [],\r\n        handler;\r\n\r\n    if (!isObject(context)) {\r\n        context = null;\r\n    }\r\n\r\n    function Client(request) {\r\n        return new PromiseObj(function (resolve) {\r\n\r\n            function exec() {\r\n\r\n                handler = reqHandlers.pop();\r\n\r\n                if (isFunction(handler)) {\r\n                    handler.call(context, request, next);\r\n                } else {\r\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\r\n                    next();\r\n                }\r\n            }\r\n\r\n            function next(response) {\r\n\r\n                if (isFunction(response)) {\r\n\r\n                    resHandlers.unshift(response);\r\n                } else if (isObject(response)) {\r\n\r\n                    resHandlers.forEach(function (handler) {\r\n                        response = when(response, function (response) {\r\n                            return handler.call(context, response) || response;\r\n                        });\r\n                    });\r\n\r\n                    when(response, resolve);\r\n\r\n                    return;\r\n                }\r\n\r\n                exec();\r\n            }\r\n\r\n            exec();\r\n        }, context);\r\n    }\r\n\r\n    Client.use = function (handler) {\r\n        reqHandlers.push(handler);\r\n    };\r\n\r\n    return Client;\r\n}\r\n\r\nfunction sendRequest(request, resolve) {\r\n\r\n    var client = request.client || xhrClient;\r\n\r\n    resolve(client(request));\r\n}\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\n/**\r\n * HTTP Headers.\r\n */\r\n\r\nvar Headers = function () {\r\n    function Headers(headers) {\r\n        var _this = this;\r\n\r\n        classCallCheck(this, Headers);\r\n\r\n\r\n        this.map = {};\r\n\r\n        each(headers, function (value, name) {\r\n            return _this.append(name, value);\r\n        });\r\n    }\r\n\r\n    Headers.prototype.has = function has(name) {\r\n        return getName(this.map, name) !== null;\r\n    };\r\n\r\n    Headers.prototype.get = function get(name) {\r\n\r\n        var list = this.map[getName(this.map, name)];\r\n\r\n        return list ? list[0] : null;\r\n    };\r\n\r\n    Headers.prototype.getAll = function getAll(name) {\r\n        return this.map[getName(this.map, name)] || [];\r\n    };\r\n\r\n    Headers.prototype.set = function set(name, value) {\r\n        this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\r\n    };\r\n\r\n    Headers.prototype.append = function append(name, value) {\r\n\r\n        var list = this.getAll(name);\r\n\r\n        if (list.length) {\r\n            list.push(trim(value));\r\n        } else {\r\n            this.set(name, value);\r\n        }\r\n    };\r\n\r\n    Headers.prototype.delete = function _delete(name) {\r\n        delete this.map[getName(this.map, name)];\r\n    };\r\n\r\n    Headers.prototype.forEach = function forEach(callback, thisArg) {\r\n        var _this2 = this;\r\n\r\n        each(this.map, function (list, name) {\r\n            each(list, function (value) {\r\n                return callback.call(thisArg, value, name, _this2);\r\n            });\r\n        });\r\n    };\r\n\r\n    return Headers;\r\n}();\r\n\r\nfunction getName(map, name) {\r\n    return Object.keys(map).reduce(function (prev, curr) {\r\n        return toLower(name) === toLower(curr) ? curr : prev;\r\n    }, null);\r\n}\r\n\r\nfunction normalizeName(name) {\r\n\r\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\r\n        throw new TypeError('Invalid character in header field name');\r\n    }\r\n\r\n    return trim(name);\r\n}\r\n\r\n/**\r\n * HTTP Response.\r\n */\r\n\r\nvar Response = function () {\r\n    function Response(body, _ref) {\r\n        var url = _ref.url;\r\n        var headers = _ref.headers;\r\n        var status = _ref.status;\r\n        var statusText = _ref.statusText;\r\n        classCallCheck(this, Response);\r\n\r\n\r\n        this.url = url;\r\n        this.ok = status >= 200 && status < 300;\r\n        this.status = status || 0;\r\n        this.statusText = statusText || '';\r\n        this.headers = new Headers(headers);\r\n        this.body = body;\r\n\r\n        if (isString(body)) {\r\n\r\n            this.bodyText = body;\r\n        } else if (isBlob(body)) {\r\n\r\n            this.bodyBlob = body;\r\n\r\n            if (isBlobText(body)) {\r\n                this.bodyText = blobText(body);\r\n            }\r\n        }\r\n    }\r\n\r\n    Response.prototype.blob = function blob() {\r\n        return when(this.bodyBlob);\r\n    };\r\n\r\n    Response.prototype.text = function text() {\r\n        return when(this.bodyText);\r\n    };\r\n\r\n    Response.prototype.json = function json() {\r\n        return when(this.text(), function (text) {\r\n            return JSON.parse(text);\r\n        });\r\n    };\r\n\r\n    return Response;\r\n}();\r\n\r\nfunction blobText(body) {\r\n    return new PromiseObj(function (resolve) {\r\n\r\n        var reader = new FileReader();\r\n\r\n        reader.readAsText(body);\r\n        reader.onload = function () {\r\n            resolve(reader.result);\r\n        };\r\n    });\r\n}\r\n\r\nfunction isBlobText(body) {\r\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\r\n}\r\n\r\n/**\r\n * HTTP Request.\r\n */\r\n\r\nvar Request = function () {\r\n    function Request(options) {\r\n        classCallCheck(this, Request);\r\n\r\n\r\n        this.body = null;\r\n        this.params = {};\r\n\r\n        assign(this, options, {\r\n            method: toUpper(options.method || 'GET')\r\n        });\r\n\r\n        if (!(this.headers instanceof Headers)) {\r\n            this.headers = new Headers(this.headers);\r\n        }\r\n    }\r\n\r\n    Request.prototype.getUrl = function getUrl() {\r\n        return Url(this);\r\n    };\r\n\r\n    Request.prototype.getBody = function getBody() {\r\n        return this.body;\r\n    };\r\n\r\n    Request.prototype.respondWith = function respondWith(body, options) {\r\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\r\n    };\r\n\r\n    return Request;\r\n}();\r\n\r\n/**\r\n * Service for sending network requests.\r\n */\r\n\r\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\r\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\r\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\r\n\r\nfunction Http(options) {\r\n\r\n    var self = this || {},\r\n        client = Client(self.$vm);\r\n\r\n    defaults(options || {}, self.$options, Http.options);\r\n\r\n    Http.interceptors.forEach(function (handler) {\r\n        client.use(handler);\r\n    });\r\n\r\n    return client(new Request(options)).then(function (response) {\r\n\r\n        return response.ok ? response : PromiseObj.reject(response);\r\n    }, function (response) {\r\n\r\n        if (response instanceof Error) {\r\n            error(response);\r\n        }\r\n\r\n        return PromiseObj.reject(response);\r\n    });\r\n}\r\n\r\nHttp.options = {};\r\n\r\nHttp.headers = {\r\n    put: JSON_CONTENT_TYPE,\r\n    post: JSON_CONTENT_TYPE,\r\n    patch: JSON_CONTENT_TYPE,\r\n    delete: JSON_CONTENT_TYPE,\r\n    custom: CUSTOM_HEADERS,\r\n    common: COMMON_HEADERS\r\n};\r\n\r\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\r\n\r\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\r\n\r\n    Http[method] = function (url, options) {\r\n        return this(assign(options || {}, { url: url, method: method }));\r\n    };\r\n});\r\n\r\n['post', 'put', 'patch'].forEach(function (method) {\r\n\r\n    Http[method] = function (url, body, options) {\r\n        return this(assign(options || {}, { url: url, method: method, body: body }));\r\n    };\r\n});\r\n\r\n/**\r\n * Service for interacting with RESTful services.\r\n */\r\n\r\nfunction Resource(url, params, actions, options) {\r\n\r\n    var self = this || {},\r\n        resource = {};\r\n\r\n    actions = assign({}, Resource.actions, actions);\r\n\r\n    each(actions, function (action, name) {\r\n\r\n        action = merge({ url: url, params: assign({}, params) }, options, action);\r\n\r\n        resource[name] = function () {\r\n            return (self.$http || Http)(opts(action, arguments));\r\n        };\r\n    });\r\n\r\n    return resource;\r\n}\r\n\r\nfunction opts(action, args) {\r\n\r\n    var options = assign({}, action),\r\n        params = {},\r\n        body;\r\n\r\n    switch (args.length) {\r\n\r\n        case 2:\r\n\r\n            params = args[0];\r\n            body = args[1];\r\n\r\n            break;\r\n\r\n        case 1:\r\n\r\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\r\n                body = args[0];\r\n            } else {\r\n                params = args[0];\r\n            }\r\n\r\n            break;\r\n\r\n        case 0:\r\n\r\n            break;\r\n\r\n        default:\r\n\r\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\r\n    }\r\n\r\n    options.body = body;\r\n    options.params = assign({}, options.params, params);\r\n\r\n    return options;\r\n}\r\n\r\nResource.actions = {\r\n\r\n    get: { method: 'GET' },\r\n    save: { method: 'POST' },\r\n    query: { method: 'GET' },\r\n    update: { method: 'PUT' },\r\n    remove: { method: 'DELETE' },\r\n    delete: { method: 'DELETE' }\r\n\r\n};\r\n\r\n/**\r\n * Install plugin.\r\n */\r\n\r\nfunction plugin(Vue) {\r\n\r\n    if (plugin.installed) {\r\n        return;\r\n    }\r\n\r\n    Util(Vue);\r\n\r\n    Vue.url = Url;\r\n    Vue.http = Http;\r\n    Vue.resource = Resource;\r\n    Vue.Promise = PromiseObj;\r\n\r\n    Object.defineProperties(Vue.prototype, {\r\n\r\n        $url: {\r\n            get: function () {\r\n                return options(Vue.url, this, this.$options.url);\r\n            }\r\n        },\r\n\r\n        $http: {\r\n            get: function () {\r\n                return options(Vue.http, this, this.$options.http);\r\n            }\r\n        },\r\n\r\n        $resource: {\r\n            get: function () {\r\n                return Vue.resource.bind(this);\r\n            }\r\n        },\r\n\r\n        $promise: {\r\n            get: function () {\r\n                var _this = this;\r\n\r\n                return function (executor) {\r\n                    return new Vue.Promise(executor, _this);\r\n                };\r\n            }\r\n        }\r\n\r\n    });\r\n}\r\n\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n    window.Vue.use(plugin);\r\n}\r\n\r\nreturn plugin;\r\n\r\n})));\r\nContact GitHub API Training Shop Blog About\r\n© 2016 GitHub, Inc. Terms Privacy Security Status Help"],"sourceRoot":"/source/"}